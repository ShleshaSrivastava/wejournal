"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lib0";
exports.ids = ["vendor-chunks/lib0"];
exports.modules = {

/***/ "(ssr)/./node_modules/lib0/array.js":
/*!************************************!*\
  !*** ./node_modules/lib0/array.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendTo: () => (/* binding */ appendTo),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   equalFlat: () => (/* binding */ equalFlat),\n/* harmony export */   every: () => (/* binding */ every),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   fold: () => (/* binding */ fold),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   some: () => (/* binding */ some),\n/* harmony export */   unfold: () => (/* binding */ unfold),\n/* harmony export */   unique: () => (/* binding */ unique),\n/* harmony export */   uniqueBy: () => (/* binding */ uniqueBy)\n/* harmony export */ });\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set.js */ \"(ssr)/./node_modules/lib0/set.js\");\n/**\n * Utility module to work with Arrays.\n *\n * @module array\n */ \n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */ const last = (arr)=>arr[arr.length - 1];\n/**\n * @template C\n * @return {Array<C>}\n */ const create = ()=>/** @type {Array<C>} */ [];\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */ const copy = (a)=>/** @type {Array<D>} */ a.slice();\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */ const appendTo = (dest, src)=>{\n    for(let i = 0; i < src.length; i++){\n        dest.push(src[i]);\n    }\n};\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */ const from = Array.from;\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */ const every = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (!f(arr[i], i, arr)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */ const some = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (f(arr[i], i, arr)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */ const equalFlat = (a, b)=>a.length === b.length && every(a, (item, index)=>item === b[index]);\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */ const flatten = (arr)=>fold(arr, /** @type {Array<ELEM>} */ [], (acc, val)=>acc.concat(val));\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */ const unfold = (len, f)=>{\n    const array = new Array(len);\n    for(let i = 0; i < len; i++){\n        array[i] = f(i, array);\n    }\n    return array;\n};\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */ const fold = (arr, seed, folder)=>arr.reduce(folder, seed);\nconst isArray = Array.isArray;\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */ const unique = (arr)=>from(_set_js__WEBPACK_IMPORTED_MODULE_0__.from(arr));\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */ const uniqueBy = (arr, mapper)=>{\n    /**\n   * @type {Set<M>}\n   */ const happened = _set_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    /**\n   * @type {Array<T>}\n   */ const result = [];\n    for(let i = 0; i < arr.length; i++){\n        const el = arr[i];\n        const mapped = mapper(el);\n        if (!happened.has(mapped)) {\n            happened.add(mapped);\n            result.push(el);\n        }\n    }\n    return result;\n};\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */ const map = (arr, mapper)=>{\n    /**\n   * @type {Array<any>}\n   */ const res = Array(arr.length);\n    for(let i = 0; i < arr.length; i++){\n        res[i] = mapper(/** @type {any} */ arr[i], i, /** @type {any} */ arr);\n    }\n    return /** @type {any} */ res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/binary.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/binary.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BIT1: () => (/* binding */ BIT1),\n/* harmony export */   BIT10: () => (/* binding */ BIT10),\n/* harmony export */   BIT11: () => (/* binding */ BIT11),\n/* harmony export */   BIT12: () => (/* binding */ BIT12),\n/* harmony export */   BIT13: () => (/* binding */ BIT13),\n/* harmony export */   BIT14: () => (/* binding */ BIT14),\n/* harmony export */   BIT15: () => (/* binding */ BIT15),\n/* harmony export */   BIT16: () => (/* binding */ BIT16),\n/* harmony export */   BIT17: () => (/* binding */ BIT17),\n/* harmony export */   BIT18: () => (/* binding */ BIT18),\n/* harmony export */   BIT19: () => (/* binding */ BIT19),\n/* harmony export */   BIT2: () => (/* binding */ BIT2),\n/* harmony export */   BIT20: () => (/* binding */ BIT20),\n/* harmony export */   BIT21: () => (/* binding */ BIT21),\n/* harmony export */   BIT22: () => (/* binding */ BIT22),\n/* harmony export */   BIT23: () => (/* binding */ BIT23),\n/* harmony export */   BIT24: () => (/* binding */ BIT24),\n/* harmony export */   BIT25: () => (/* binding */ BIT25),\n/* harmony export */   BIT26: () => (/* binding */ BIT26),\n/* harmony export */   BIT27: () => (/* binding */ BIT27),\n/* harmony export */   BIT28: () => (/* binding */ BIT28),\n/* harmony export */   BIT29: () => (/* binding */ BIT29),\n/* harmony export */   BIT3: () => (/* binding */ BIT3),\n/* harmony export */   BIT30: () => (/* binding */ BIT30),\n/* harmony export */   BIT31: () => (/* binding */ BIT31),\n/* harmony export */   BIT32: () => (/* binding */ BIT32),\n/* harmony export */   BIT4: () => (/* binding */ BIT4),\n/* harmony export */   BIT5: () => (/* binding */ BIT5),\n/* harmony export */   BIT6: () => (/* binding */ BIT6),\n/* harmony export */   BIT7: () => (/* binding */ BIT7),\n/* harmony export */   BIT8: () => (/* binding */ BIT8),\n/* harmony export */   BIT9: () => (/* binding */ BIT9),\n/* harmony export */   BITS0: () => (/* binding */ BITS0),\n/* harmony export */   BITS1: () => (/* binding */ BITS1),\n/* harmony export */   BITS10: () => (/* binding */ BITS10),\n/* harmony export */   BITS11: () => (/* binding */ BITS11),\n/* harmony export */   BITS12: () => (/* binding */ BITS12),\n/* harmony export */   BITS13: () => (/* binding */ BITS13),\n/* harmony export */   BITS14: () => (/* binding */ BITS14),\n/* harmony export */   BITS15: () => (/* binding */ BITS15),\n/* harmony export */   BITS16: () => (/* binding */ BITS16),\n/* harmony export */   BITS17: () => (/* binding */ BITS17),\n/* harmony export */   BITS18: () => (/* binding */ BITS18),\n/* harmony export */   BITS19: () => (/* binding */ BITS19),\n/* harmony export */   BITS2: () => (/* binding */ BITS2),\n/* harmony export */   BITS20: () => (/* binding */ BITS20),\n/* harmony export */   BITS21: () => (/* binding */ BITS21),\n/* harmony export */   BITS22: () => (/* binding */ BITS22),\n/* harmony export */   BITS23: () => (/* binding */ BITS23),\n/* harmony export */   BITS24: () => (/* binding */ BITS24),\n/* harmony export */   BITS25: () => (/* binding */ BITS25),\n/* harmony export */   BITS26: () => (/* binding */ BITS26),\n/* harmony export */   BITS27: () => (/* binding */ BITS27),\n/* harmony export */   BITS28: () => (/* binding */ BITS28),\n/* harmony export */   BITS29: () => (/* binding */ BITS29),\n/* harmony export */   BITS3: () => (/* binding */ BITS3),\n/* harmony export */   BITS30: () => (/* binding */ BITS30),\n/* harmony export */   BITS31: () => (/* binding */ BITS31),\n/* harmony export */   BITS32: () => (/* binding */ BITS32),\n/* harmony export */   BITS4: () => (/* binding */ BITS4),\n/* harmony export */   BITS5: () => (/* binding */ BITS5),\n/* harmony export */   BITS6: () => (/* binding */ BITS6),\n/* harmony export */   BITS7: () => (/* binding */ BITS7),\n/* harmony export */   BITS8: () => (/* binding */ BITS8),\n/* harmony export */   BITS9: () => (/* binding */ BITS9)\n/* harmony export */ });\n/* eslint-env browser */ /**\n * Binary data constants.\n *\n * @module binary\n */ /**\n * n-th bit activated.\n *\n * @type {number}\n */ const BIT1 = 1;\nconst BIT2 = 2;\nconst BIT3 = 4;\nconst BIT4 = 8;\nconst BIT5 = 16;\nconst BIT6 = 32;\nconst BIT7 = 64;\nconst BIT8 = 128;\nconst BIT9 = 256;\nconst BIT10 = 512;\nconst BIT11 = 1024;\nconst BIT12 = 2048;\nconst BIT13 = 4096;\nconst BIT14 = 8192;\nconst BIT15 = 16384;\nconst BIT16 = 32768;\nconst BIT17 = 65536;\nconst BIT18 = 1 << 17;\nconst BIT19 = 1 << 18;\nconst BIT20 = 1 << 19;\nconst BIT21 = 1 << 20;\nconst BIT22 = 1 << 21;\nconst BIT23 = 1 << 22;\nconst BIT24 = 1 << 23;\nconst BIT25 = 1 << 24;\nconst BIT26 = 1 << 25;\nconst BIT27 = 1 << 26;\nconst BIT28 = 1 << 27;\nconst BIT29 = 1 << 28;\nconst BIT30 = 1 << 29;\nconst BIT31 = 1 << 30;\nconst BIT32 = 1 << 31;\n/**\n * First n bits activated.\n *\n * @type {number}\n */ const BITS0 = 0;\nconst BITS1 = 1;\nconst BITS2 = 3;\nconst BITS3 = 7;\nconst BITS4 = 15;\nconst BITS5 = 31;\nconst BITS6 = 63;\nconst BITS7 = 127;\nconst BITS8 = 255;\nconst BITS9 = 511;\nconst BITS10 = 1023;\nconst BITS11 = 2047;\nconst BITS12 = 4095;\nconst BITS13 = 8191;\nconst BITS14 = 16383;\nconst BITS15 = 32767;\nconst BITS16 = 65535;\nconst BITS17 = BIT18 - 1;\nconst BITS18 = BIT19 - 1;\nconst BITS19 = BIT20 - 1;\nconst BITS20 = BIT21 - 1;\nconst BITS21 = BIT22 - 1;\nconst BITS22 = BIT23 - 1;\nconst BITS23 = BIT24 - 1;\nconst BITS24 = BIT25 - 1;\nconst BITS25 = BIT26 - 1;\nconst BITS26 = BIT27 - 1;\nconst BITS27 = BIT28 - 1;\nconst BITS28 = BIT29 - 1;\nconst BITS29 = BIT30 - 1;\nconst BITS30 = BIT31 - 1;\n/**\n * @type {number}\n */ const BITS31 = 0x7FFFFFFF;\n/**\n * @type {number}\n */ const BITS32 = 0xFFFFFFFF;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9iaW5hcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0IsR0FFdEI7Ozs7Q0FJQyxHQUVEOzs7O0NBSUMsR0FDTSxNQUFNQSxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEVBQUM7QUFDZCxNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLEdBQUU7QUFDZixNQUFNQyxPQUFPLElBQUc7QUFDaEIsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLFFBQVEsSUFBRztBQUNqQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxNQUFLO0FBQ25CLE1BQU1DLFFBQVEsTUFBSztBQUNuQixNQUFNQyxRQUFRLE1BQUs7QUFDbkIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFDckIsTUFBTUMsUUFBUSxLQUFLLEdBQUU7QUFFNUI7Ozs7Q0FJQyxHQUNNLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsRUFBQztBQUNmLE1BQU1DLFFBQVEsR0FBRTtBQUNoQixNQUFNQyxRQUFRLEdBQUU7QUFDaEIsTUFBTUMsUUFBUSxHQUFFO0FBQ2hCLE1BQU1DLFFBQVEsSUFBRztBQUNqQixNQUFNQyxRQUFRLElBQUc7QUFDakIsTUFBTUMsUUFBUSxJQUFHO0FBQ2pCLE1BQU1DLFNBQVMsS0FBSTtBQUNuQixNQUFNQyxTQUFTLEtBQUk7QUFDbkIsTUFBTUMsU0FBUyxLQUFJO0FBQ25CLE1BQU1DLFNBQVMsS0FBSTtBQUNuQixNQUFNQyxTQUFTLE1BQUs7QUFDcEIsTUFBTUMsU0FBUyxNQUFLO0FBQ3BCLE1BQU1DLFNBQVMsTUFBSztBQUNwQixNQUFNQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQ3hCLE1BQU1pQyxTQUFTaEMsUUFBUSxFQUFDO0FBQy9COztDQUVDLEdBQ00sTUFBTWlDLFNBQVMsV0FBVTtBQUNoQzs7Q0FFQyxHQUNNLE1BQU1DLFNBQVMsV0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlLWpvdXJuYWwvLi9ub2RlX21vZHVsZXMvbGliMC9iaW5hcnkuanM/ZDE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxuLyoqXG4gKiBCaW5hcnkgZGF0YSBjb25zdGFudHMuXG4gKlxuICogQG1vZHVsZSBiaW5hcnlcbiAqL1xuXG4vKipcbiAqIG4tdGggYml0IGFjdGl2YXRlZC5cbiAqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgQklUMSA9IDFcbmV4cG9ydCBjb25zdCBCSVQyID0gMlxuZXhwb3J0IGNvbnN0IEJJVDMgPSA0XG5leHBvcnQgY29uc3QgQklUNCA9IDhcbmV4cG9ydCBjb25zdCBCSVQ1ID0gMTZcbmV4cG9ydCBjb25zdCBCSVQ2ID0gMzJcbmV4cG9ydCBjb25zdCBCSVQ3ID0gNjRcbmV4cG9ydCBjb25zdCBCSVQ4ID0gMTI4XG5leHBvcnQgY29uc3QgQklUOSA9IDI1NlxuZXhwb3J0IGNvbnN0IEJJVDEwID0gNTEyXG5leHBvcnQgY29uc3QgQklUMTEgPSAxMDI0XG5leHBvcnQgY29uc3QgQklUMTIgPSAyMDQ4XG5leHBvcnQgY29uc3QgQklUMTMgPSA0MDk2XG5leHBvcnQgY29uc3QgQklUMTQgPSA4MTkyXG5leHBvcnQgY29uc3QgQklUMTUgPSAxNjM4NFxuZXhwb3J0IGNvbnN0IEJJVDE2ID0gMzI3NjhcbmV4cG9ydCBjb25zdCBCSVQxNyA9IDY1NTM2XG5leHBvcnQgY29uc3QgQklUMTggPSAxIDw8IDE3XG5leHBvcnQgY29uc3QgQklUMTkgPSAxIDw8IDE4XG5leHBvcnQgY29uc3QgQklUMjAgPSAxIDw8IDE5XG5leHBvcnQgY29uc3QgQklUMjEgPSAxIDw8IDIwXG5leHBvcnQgY29uc3QgQklUMjIgPSAxIDw8IDIxXG5leHBvcnQgY29uc3QgQklUMjMgPSAxIDw8IDIyXG5leHBvcnQgY29uc3QgQklUMjQgPSAxIDw8IDIzXG5leHBvcnQgY29uc3QgQklUMjUgPSAxIDw8IDI0XG5leHBvcnQgY29uc3QgQklUMjYgPSAxIDw8IDI1XG5leHBvcnQgY29uc3QgQklUMjcgPSAxIDw8IDI2XG5leHBvcnQgY29uc3QgQklUMjggPSAxIDw8IDI3XG5leHBvcnQgY29uc3QgQklUMjkgPSAxIDw8IDI4XG5leHBvcnQgY29uc3QgQklUMzAgPSAxIDw8IDI5XG5leHBvcnQgY29uc3QgQklUMzEgPSAxIDw8IDMwXG5leHBvcnQgY29uc3QgQklUMzIgPSAxIDw8IDMxXG5cbi8qKlxuICogRmlyc3QgbiBiaXRzIGFjdGl2YXRlZC5cbiAqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgQklUUzAgPSAwXG5leHBvcnQgY29uc3QgQklUUzEgPSAxXG5leHBvcnQgY29uc3QgQklUUzIgPSAzXG5leHBvcnQgY29uc3QgQklUUzMgPSA3XG5leHBvcnQgY29uc3QgQklUUzQgPSAxNVxuZXhwb3J0IGNvbnN0IEJJVFM1ID0gMzFcbmV4cG9ydCBjb25zdCBCSVRTNiA9IDYzXG5leHBvcnQgY29uc3QgQklUUzcgPSAxMjdcbmV4cG9ydCBjb25zdCBCSVRTOCA9IDI1NVxuZXhwb3J0IGNvbnN0IEJJVFM5ID0gNTExXG5leHBvcnQgY29uc3QgQklUUzEwID0gMTAyM1xuZXhwb3J0IGNvbnN0IEJJVFMxMSA9IDIwNDdcbmV4cG9ydCBjb25zdCBCSVRTMTIgPSA0MDk1XG5leHBvcnQgY29uc3QgQklUUzEzID0gODE5MVxuZXhwb3J0IGNvbnN0IEJJVFMxNCA9IDE2MzgzXG5leHBvcnQgY29uc3QgQklUUzE1ID0gMzI3NjdcbmV4cG9ydCBjb25zdCBCSVRTMTYgPSA2NTUzNVxuZXhwb3J0IGNvbnN0IEJJVFMxNyA9IEJJVDE4IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMxOCA9IEJJVDE5IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMxOSA9IEJJVDIwIC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyMCA9IEJJVDIxIC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyMSA9IEJJVDIyIC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyMiA9IEJJVDIzIC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyMyA9IEJJVDI0IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyNCA9IEJJVDI1IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyNSA9IEJJVDI2IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyNiA9IEJJVDI3IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyNyA9IEJJVDI4IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyOCA9IEJJVDI5IC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMyOSA9IEJJVDMwIC0gMVxuZXhwb3J0IGNvbnN0IEJJVFMzMCA9IEJJVDMxIC0gMVxuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgQklUUzMxID0gMHg3RkZGRkZGRlxuLyoqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgQklUUzMyID0gMHhGRkZGRkZGRlxuIl0sIm5hbWVzIjpbIkJJVDEiLCJCSVQyIiwiQklUMyIsIkJJVDQiLCJCSVQ1IiwiQklUNiIsIkJJVDciLCJCSVQ4IiwiQklUOSIsIkJJVDEwIiwiQklUMTEiLCJCSVQxMiIsIkJJVDEzIiwiQklUMTQiLCJCSVQxNSIsIkJJVDE2IiwiQklUMTciLCJCSVQxOCIsIkJJVDE5IiwiQklUMjAiLCJCSVQyMSIsIkJJVDIyIiwiQklUMjMiLCJCSVQyNCIsIkJJVDI1IiwiQklUMjYiLCJCSVQyNyIsIkJJVDI4IiwiQklUMjkiLCJCSVQzMCIsIkJJVDMxIiwiQklUMzIiLCJCSVRTMCIsIkJJVFMxIiwiQklUUzIiLCJCSVRTMyIsIkJJVFM0IiwiQklUUzUiLCJCSVRTNiIsIkJJVFM3IiwiQklUUzgiLCJCSVRTOSIsIkJJVFMxMCIsIkJJVFMxMSIsIkJJVFMxMiIsIkJJVFMxMyIsIkJJVFMxNCIsIkJJVFMxNSIsIkJJVFMxNiIsIkJJVFMxNyIsIkJJVFMxOCIsIkJJVFMxOSIsIkJJVFMyMCIsIkJJVFMyMSIsIkJJVFMyMiIsIkJJVFMyMyIsIkJJVFMyNCIsIkJJVFMyNSIsIkJJVFMyNiIsIkJJVFMyNyIsIkJJVFMyOCIsIkJJVFMyOSIsIkJJVFMzMCIsIkJJVFMzMSIsIkJJVFMzMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/binary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/buffer.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/buffer.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyUint8Array: () => (/* binding */ copyUint8Array),\n/* harmony export */   createUint8ArrayFromArrayBuffer: () => (/* binding */ createUint8ArrayFromArrayBuffer),\n/* harmony export */   createUint8ArrayFromLen: () => (/* binding */ createUint8ArrayFromLen),\n/* harmony export */   createUint8ArrayViewFromArrayBuffer: () => (/* binding */ createUint8ArrayViewFromArrayBuffer),\n/* harmony export */   decodeAny: () => (/* binding */ decodeAny),\n/* harmony export */   encodeAny: () => (/* binding */ encodeAny),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   fromBase64UrlEncoded: () => (/* binding */ fromBase64UrlEncoded),\n/* harmony export */   fromHexString: () => (/* binding */ fromHexString),\n/* harmony export */   shiftNBitsLeft: () => (/* binding */ shiftNBitsLeft),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toBase64UrlEncoded: () => (/* binding */ toBase64UrlEncoded),\n/* harmony export */   toHexString: () => (/* binding */ toHexString)\n/* harmony export */ });\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/lib0/encoding.js\");\n/* harmony import */ var _decoding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decoding.js */ \"(ssr)/./node_modules/lib0/decoding.js\");\n/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */ \n\n\n\n\n\n/**\n * @param {number} len\n */ const createUint8ArrayFromLen = (len)=>new Uint8Array(len);\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */ const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length)=>new Uint8Array(buffer, byteOffset, length);\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */ const createUint8ArrayFromArrayBuffer = (buffer)=>new Uint8Array(buffer);\n/* c8 ignore start */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Browser = (bytes)=>{\n    let s = \"\";\n    for(let i = 0; i < bytes.byteLength; i++){\n        s += _string_js__WEBPACK_IMPORTED_MODULE_0__.fromCharCode(bytes[i]);\n    }\n    // eslint-disable-next-line no-undef\n    return btoa(s);\n};\n/* c8 ignore stop */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Node = (bytes)=>Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString(\"base64\");\n/* c8 ignore start */ /**\n * @param {string} s\n * @return {Uint8Array}\n */ const fromBase64Browser = (s)=>{\n    // eslint-disable-next-line no-undef\n    const a = atob(s);\n    const bytes = createUint8ArrayFromLen(a.length);\n    for(let i = 0; i < a.length; i++){\n        bytes[i] = a.charCodeAt(i);\n    }\n    return bytes;\n};\n/* c8 ignore stop */ /**\n * @param {string} s\n */ const fromBase64Node = (s)=>{\n    const buf = Buffer.from(s, \"base64\");\n    return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength);\n};\n/* c8 ignore next */ const toBase64 = _environment_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? toBase64Browser : toBase64Node;\n/* c8 ignore next */ const fromBase64 = _environment_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? fromBase64Browser : fromBase64Node;\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */ const toBase64UrlEncoded = (buf)=>toBase64(buf).replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replaceAll(\"=\", \"\");\n/**\n * @param {string} base64\n */ const fromBase64UrlEncoded = (base64)=>fromBase64(base64.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"));\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */ const toHexString = (buf)=>_array_js__WEBPACK_IMPORTED_MODULE_2__.map(buf, (b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */ const fromHexString = (hex)=>{\n    const hlen = hex.length;\n    const buf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_3__.ceil(hlen / 2));\n    for(let i = 0; i < hlen; i += 2){\n        buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16);\n    }\n    return buf;\n};\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */ const copyUint8Array = (uint8Array)=>{\n    const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n    newBuf.set(uint8Array);\n    return newBuf;\n};\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */ const encodeAny = (data)=>_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encode((encoder)=>_encoding_js__WEBPACK_IMPORTED_MODULE_4__.writeAny(encoder, data));\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */ const decodeAny = (buf)=>_decoding_js__WEBPACK_IMPORTED_MODULE_5__.readAny(_decoding_js__WEBPACK_IMPORTED_MODULE_5__.createDecoder(buf));\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */ const shiftNBitsLeft = (bs, N)=>{\n    if (N === 0) return bs;\n    bs = new Uint8Array(bs);\n    bs[0] <<= N;\n    for(let i = 1; i < bs.length; i++){\n        bs[i - 1] |= bs[i] >>> 8 - N;\n        bs[i] <<= N;\n    }\n    return bs;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/conditions.js":
/*!*****************************************!*\
  !*** ./node_modules/lib0/conditions.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   undefinedToNull: () => (/* binding */ undefinedToNull)\n/* harmony export */ });\n/**\n * Often used conditions.\n *\n * @module conditions\n */ /**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */ /* c8 ignore next */ const undefinedToNull = (v)=>v === undefined ? null : v;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9jb25kaXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Q0FJQyxHQUNELGtCQUFrQixHQUNYLE1BQU1BLGtCQUFrQkMsQ0FBQUEsSUFBS0EsTUFBTUMsWUFBWSxPQUFPRCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL2NvbmRpdGlvbnMuanM/NDkzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE9mdGVuIHVzZWQgY29uZGl0aW9ucy5cbiAqXG4gKiBAbW9kdWxlIGNvbmRpdGlvbnNcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R8bnVsbHx1bmRlZmluZWR9IHZcbiAqIEByZXR1cm4ge1R8bnVsbH1cbiAqL1xuLyogYzggaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCB1bmRlZmluZWRUb051bGwgPSB2ID0+IHYgPT09IHVuZGVmaW5lZCA/IG51bGwgOiB2XG4iXSwibmFtZXMiOlsidW5kZWZpbmVkVG9OdWxsIiwidiIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/conditions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/decoding.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/decoding.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   IncUintOptRleDecoder: () => (/* binding */ IncUintOptRleDecoder),\n/* harmony export */   IntDiffDecoder: () => (/* binding */ IntDiffDecoder),\n/* harmony export */   IntDiffOptRleDecoder: () => (/* binding */ IntDiffOptRleDecoder),\n/* harmony export */   RleDecoder: () => (/* binding */ RleDecoder),\n/* harmony export */   RleIntDiffDecoder: () => (/* binding */ RleIntDiffDecoder),\n/* harmony export */   StringDecoder: () => (/* binding */ StringDecoder),\n/* harmony export */   UintOptRleDecoder: () => (/* binding */ UintOptRleDecoder),\n/* harmony export */   _readVarStringNative: () => (/* binding */ _readVarStringNative),\n/* harmony export */   _readVarStringPolyfill: () => (/* binding */ _readVarStringPolyfill),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   hasContent: () => (/* binding */ hasContent),\n/* harmony export */   peekUint16: () => (/* binding */ peekUint16),\n/* harmony export */   peekUint32: () => (/* binding */ peekUint32),\n/* harmony export */   peekUint8: () => (/* binding */ peekUint8),\n/* harmony export */   peekVarInt: () => (/* binding */ peekVarInt),\n/* harmony export */   peekVarString: () => (/* binding */ peekVarString),\n/* harmony export */   peekVarUint: () => (/* binding */ peekVarUint),\n/* harmony export */   readAny: () => (/* binding */ readAny),\n/* harmony export */   readBigInt64: () => (/* binding */ readBigInt64),\n/* harmony export */   readBigUint64: () => (/* binding */ readBigUint64),\n/* harmony export */   readFloat32: () => (/* binding */ readFloat32),\n/* harmony export */   readFloat64: () => (/* binding */ readFloat64),\n/* harmony export */   readFromDataView: () => (/* binding */ readFromDataView),\n/* harmony export */   readTailAsUint8Array: () => (/* binding */ readTailAsUint8Array),\n/* harmony export */   readTerminatedString: () => (/* binding */ readTerminatedString),\n/* harmony export */   readTerminatedUint8Array: () => (/* binding */ readTerminatedUint8Array),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint32BigEndian: () => (/* binding */ readUint32BigEndian),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   readUint8Array: () => (/* binding */ readUint8Array),\n/* harmony export */   readVarInt: () => (/* binding */ readVarInt),\n/* harmony export */   readVarString: () => (/* binding */ readVarString),\n/* harmony export */   readVarUint: () => (/* binding */ readVarUint),\n/* harmony export */   readVarUint8Array: () => (/* binding */ readVarUint8Array),\n/* harmony export */   skip8: () => (/* binding */ skip8)\n/* harmony export */ });\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/lib0/number.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/lib0/error.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/lib0/encoding.js\");\n/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */ \n\n\n\n\n\nconst errorUnexpectedEndOfArray = _error_js__WEBPACK_IMPORTED_MODULE_0__.create(\"Unexpected end of array\");\nconst errorIntegerOutOfRange = _error_js__WEBPACK_IMPORTED_MODULE_0__.create(\"Integer out of Range\");\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */ class Decoder {\n    /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */ constructor(uint8Array){\n        /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */ this.arr = uint8Array;\n        /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */ this.pos = 0;\n    }\n}\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */ const createDecoder = (uint8Array)=>new Decoder(uint8Array);\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */ const hasContent = (decoder)=>decoder.pos !== decoder.arr.length;\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */ const clone = (decoder, newPos = decoder.pos)=>{\n    const _decoder = createDecoder(decoder.arr);\n    _decoder.pos = newPos;\n    return _decoder;\n};\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */ const readUint8Array = (decoder, len)=>{\n    const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n    decoder.pos += len;\n    return view;\n};\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readVarUint8Array = (decoder)=>readUint8Array(decoder, readVarUint(decoder));\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readTailAsUint8Array = (decoder)=>readUint8Array(decoder, decoder.arr.length - decoder.pos);\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */ const skip8 = (decoder)=>decoder.pos++;\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */ const readUint8 = (decoder)=>decoder.arr[decoder.pos++];\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint16 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\n    decoder.pos += 2;\n    return uint;\n};\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint32 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const readUint32BigEndian = (decoder)=>{\n    const uint = decoder.arr[decoder.pos + 3] + (decoder.arr[decoder.pos + 2] << 8) + (decoder.arr[decoder.pos + 1] << 16) + (decoder.arr[decoder.pos] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint8 = (decoder)=>decoder.arr[decoder.pos];\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint16 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */ const peekUint32 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */ const readVarUint = (decoder)=>{\n    let num = 0;\n    let mult = 1;\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        const r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n        ;\n        mult *= 128 // next iteration, shift 7 \"more\" to the left\n        ;\n        if (r < _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) {\n            return num;\n        }\n        /* c8 ignore start */ if (num > _number_js__WEBPACK_IMPORTED_MODULE_2__.MAX_SAFE_INTEGER) {\n            throw errorIntegerOutOfRange;\n        }\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */ const readVarInt = (decoder)=>{\n    let r = decoder.arr[decoder.pos++];\n    let num = r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6;\n    let mult = 64;\n    const sign = (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT7) > 0 ? -1 : 1;\n    if ((r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) === 0) {\n        // don't continue reading\n        return sign * num;\n    }\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7) * mult;\n        mult *= 128;\n        if (r < _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8) {\n            return sign * num;\n        }\n        /* c8 ignore start */ if (num > _number_js__WEBPACK_IMPORTED_MODULE_2__.MAX_SAFE_INTEGER) {\n            throw errorIntegerOutOfRange;\n        }\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */ const peekVarUint = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarUint(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */ const peekVarInt = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarInt(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */ /* c8 ignore start */ const _readVarStringPolyfill = (decoder)=>{\n    let remainingLen = readVarUint(decoder);\n    if (remainingLen === 0) {\n        return \"\";\n    } else {\n        let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n        ;\n        if (--remainingLen < 100) {\n            while(remainingLen--){\n                encodedString += String.fromCodePoint(readUint8(decoder));\n            }\n        } else {\n            while(remainingLen > 0){\n                const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n                // this is dangerous, we create a fresh array view from the existing buffer\n                const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n                decoder.pos += nextLen;\n                // Starting with ES5.1 we can supply a generic array-like object as arguments\n                encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n                remainingLen -= nextLen;\n            }\n        }\n        return decodeURIComponent(escape(encodedString));\n    }\n};\n/* c8 ignore stop */ /**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */ const _readVarStringNative = (decoder)=>/** @type any */ _string_js__WEBPACK_IMPORTED_MODULE_3__.utf8TextDecoder.decode(readVarUint8Array(decoder));\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */ /* c8 ignore next */ const readVarString = _string_js__WEBPACK_IMPORTED_MODULE_3__.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill;\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */ const readTerminatedUint8Array = (decoder)=>{\n    const encoder = _encoding_js__WEBPACK_IMPORTED_MODULE_4__.createEncoder();\n    let b;\n    while(true){\n        b = readUint8(decoder);\n        if (b === 0) {\n            return _encoding_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array(encoder);\n        }\n        if (b === 1) {\n            b = readUint8(decoder);\n        }\n        _encoding_js__WEBPACK_IMPORTED_MODULE_4__.write(encoder, b);\n    }\n};\n/**\n * @param {Decoder} decoder\n * @return {string}\n */ const readTerminatedString = (decoder)=>_string_js__WEBPACK_IMPORTED_MODULE_3__.decodeUtf8(readTerminatedUint8Array(decoder));\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */ const peekVarString = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarString(decoder);\n    decoder.pos = pos;\n    return s;\n};\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */ const readFromDataView = (decoder, len)=>{\n    const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n    decoder.pos += len;\n    return dv;\n};\n/**\n * @param {Decoder} decoder\n */ const readFloat32 = (decoder)=>readFromDataView(decoder, 4).getFloat32(0, false);\n/**\n * @param {Decoder} decoder\n */ const readFloat64 = (decoder)=>readFromDataView(decoder, 8).getFloat64(0, false);\n/**\n * @param {Decoder} decoder\n */ const readBigInt64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigInt64(0, false);\n/**\n * @param {Decoder} decoder\n */ const readBigUint64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigUint64(0, false);\n/**\n * @type {Array<function(Decoder):any>}\n */ const readAnyLookupTable = [\n    (decoder)=>undefined,\n    (decoder)=>null,\n    readVarInt,\n    readFloat32,\n    readFloat64,\n    readBigInt64,\n    (decoder)=>false,\n    (decoder)=>true,\n    readVarString,\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        /**\n     * @type {Object<string,any>}\n     */ const obj = {};\n        for(let i = 0; i < len; i++){\n            const key = readVarString(decoder);\n            obj[key] = readAny(decoder);\n        }\n        return obj;\n    },\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        const arr = [];\n        for(let i = 0; i < len; i++){\n            arr.push(readAny(decoder));\n        }\n        return arr;\n    },\n    readVarUint8Array // CASE 116: Uint8Array\n];\n/**\n * @param {Decoder} decoder\n */ const readAny = (decoder)=>readAnyLookupTable[127 - readUint8(decoder)](decoder);\n/**\n * T must not be null.\n *\n * @template T\n */ class RleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */ constructor(uint8Array, reader){\n        super(uint8Array);\n        /**\n     * The reader\n     */ this.reader = reader;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = this.reader(this);\n            if (hasContent(this)) {\n                this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n                ;\n            } else {\n                this.count = -1 // read the current value forever\n                ;\n            }\n        }\n        this.count--;\n        return /** @type {T} */ this.s;\n    }\n}\nclass IntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        this.s += readVarInt(this);\n        return this.s;\n    }\n}\nclass RleIntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            this.s += readVarInt(this);\n            if (hasContent(this)) {\n                this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n                ;\n            } else {\n                this.count = -1 // read the current value forever\n                ;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass UintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_5__.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass IncUintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_5__.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s++;\n    }\n}\nclass IntDiffOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            const diff = readVarInt(this);\n            // if the first bit is set, we read more data\n            const hasCount = diff & 1;\n            this.diff = _math_js__WEBPACK_IMPORTED_MODULE_5__.floor(diff / 2) // shift >> 1\n            ;\n            this.count = 1;\n            if (hasCount) {\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.s += this.diff;\n        this.count--;\n        return this.s;\n    }\n}\nclass StringDecoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        this.decoder = new UintOptRleDecoder(uint8Array);\n        this.str = readVarString(this.decoder);\n        /**\n     * @type {number}\n     */ this.spos = 0;\n    }\n    /**\n   * @return {string}\n   */ read() {\n        const end = this.spos + this.decoder.read();\n        const res = this.str.slice(this.spos, end);\n        this.spos = end;\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/decoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/diff.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/diff.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleDiff: () => (/* binding */ simpleDiff),\n/* harmony export */   simpleDiffArray: () => (/* binding */ simpleDiffArray),\n/* harmony export */   simpleDiffString: () => (/* binding */ simpleDiffString),\n/* harmony export */   simpleDiffStringWithCursor: () => (/* binding */ simpleDiffStringWithCursor)\n/* harmony export */ });\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/lib0/function.js\");\n/**\n * Efficient diffs.\n *\n * @module diff\n */ \n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */ const highSurrogateRegex = /[\\uD800-\\uDBFF]/;\nconst lowSurrogateRegex = /[\\uDC00-\\uDFFF]/;\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */ const simpleDiffString = (a, b)=>{\n    let left = 0 // number of same characters counting from left\n    ;\n    let right = 0 // number of same characters counting from right\n    ;\n    while(left < a.length && left < b.length && a[left] === b[left]){\n        left++;\n    }\n    // If the last same character is a high surrogate, we need to rollback to the previous character\n    if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--;\n    while(right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]){\n        right++;\n    }\n    // If the last same character is a low surrogate, we need to rollback to the previous character\n    if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--;\n    return {\n        index: left,\n        remove: a.length - left - right,\n        insert: b.slice(left, b.length - right)\n    };\n};\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */ const simpleDiff = simpleDiffString;\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */ const simpleDiffArray = (a, b, compare = _function_js__WEBPACK_IMPORTED_MODULE_0__.equalityStrict)=>{\n    let left = 0 // number of same characters counting from left\n    ;\n    let right = 0 // number of same characters counting from right\n    ;\n    while(left < a.length && left < b.length && compare(a[left], b[left])){\n        left++;\n    }\n    while(right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])){\n        right++;\n    }\n    return {\n        index: left,\n        remove: a.length - left - right,\n        insert: b.slice(left, b.length - right)\n    };\n};\n/**\n * Diff text and try to diff at the current cursor position.\n *\n * @param {string} a\n * @param {string} b\n * @param {number} cursor This should refer to the current left cursor-range position\n */ const simpleDiffStringWithCursor = (a, b, cursor)=>{\n    let left = 0 // number of same characters counting from left\n    ;\n    let right = 0 // number of same characters counting from right\n    ;\n    // Iterate left to the right until we find a changed character\n    // First iteration considers the current cursor position\n    while(left < a.length && left < b.length && a[left] === b[left] && left < cursor){\n        left++;\n    }\n    // If the last same character is a high surrogate, we need to rollback to the previous character\n    if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--;\n    // Iterate right to the left until we find a changed character\n    while(right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]){\n        right++;\n    }\n    // If the last same character is a low surrogate, we need to rollback to the previous character\n    if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--;\n    // Try to iterate left further to the right without caring about the current cursor position\n    while(right + left < a.length && right + left < b.length && a[left] === b[left]){\n        left++;\n    }\n    if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--;\n    return {\n        index: left,\n        remove: a.length - left - right,\n        insert: b.slice(left, b.length - right)\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9kaWZmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUU2QztBQUU5Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMsR0FFRCxNQUFNQyxxQkFBcUI7QUFDM0IsTUFBTUMsb0JBQW9CO0FBRTFCOzs7Ozs7Ozs7Q0FTQyxHQUNNLE1BQU1DLG1CQUFtQixDQUFDQyxHQUFHQztJQUNsQyxJQUFJQyxPQUFPLEVBQUUsK0NBQStDOztJQUM1RCxJQUFJQyxRQUFRLEVBQUUsZ0RBQWdEOztJQUM5RCxNQUFPRCxPQUFPRixFQUFFSSxNQUFNLElBQUlGLE9BQU9ELEVBQUVHLE1BQU0sSUFBSUosQ0FBQyxDQUFDRSxLQUFLLEtBQUtELENBQUMsQ0FBQ0MsS0FBSyxDQUFFO1FBQ2hFQTtJQUNGO0lBQ0EsZ0dBQWdHO0lBQ2hHLElBQUlBLE9BQU8sS0FBS0wsbUJBQW1CUSxJQUFJLENBQUNMLENBQUMsQ0FBQ0UsT0FBTyxFQUFFLEdBQUdBO0lBQ3RELE1BQU9DLFFBQVFELE9BQU9GLEVBQUVJLE1BQU0sSUFBSUQsUUFBUUQsT0FBT0QsRUFBRUcsTUFBTSxJQUFJSixDQUFDLENBQUNBLEVBQUVJLE1BQU0sR0FBR0QsUUFBUSxFQUFFLEtBQUtGLENBQUMsQ0FBQ0EsRUFBRUcsTUFBTSxHQUFHRCxRQUFRLEVBQUUsQ0FBRTtRQUNoSEE7SUFDRjtJQUNBLCtGQUErRjtJQUMvRixJQUFJQSxRQUFRLEtBQUtMLGtCQUFrQk8sSUFBSSxDQUFDTCxDQUFDLENBQUNBLEVBQUVJLE1BQU0sR0FBR0QsTUFBTSxHQUFHQTtJQUM5RCxPQUFPO1FBQ0xHLE9BQU9KO1FBQ1BLLFFBQVFQLEVBQUVJLE1BQU0sR0FBR0YsT0FBT0M7UUFDMUJLLFFBQVFQLEVBQUVRLEtBQUssQ0FBQ1AsTUFBTUQsRUFBRUcsTUFBTSxHQUFHRDtJQUNuQztBQUNGLEVBQUM7QUFFRDs7O0NBR0MsR0FDTSxNQUFNTyxhQUFhWCxpQkFBZ0I7QUFFMUM7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FDTSxNQUFNWSxrQkFBa0IsQ0FBQ1gsR0FBR0MsR0FBR1csVUFBVWhCLHdEQUFjO0lBQzVELElBQUlNLE9BQU8sRUFBRSwrQ0FBK0M7O0lBQzVELElBQUlDLFFBQVEsRUFBRSxnREFBZ0Q7O0lBQzlELE1BQU9ELE9BQU9GLEVBQUVJLE1BQU0sSUFBSUYsT0FBT0QsRUFBRUcsTUFBTSxJQUFJUSxRQUFRWixDQUFDLENBQUNFLEtBQUssRUFBRUQsQ0FBQyxDQUFDQyxLQUFLLEVBQUc7UUFDdEVBO0lBQ0Y7SUFDQSxNQUFPQyxRQUFRRCxPQUFPRixFQUFFSSxNQUFNLElBQUlELFFBQVFELE9BQU9ELEVBQUVHLE1BQU0sSUFBSVEsUUFBUVosQ0FBQyxDQUFDQSxFQUFFSSxNQUFNLEdBQUdELFFBQVEsRUFBRSxFQUFFRixDQUFDLENBQUNBLEVBQUVHLE1BQU0sR0FBR0QsUUFBUSxFQUFFLEVBQUc7UUFDdEhBO0lBQ0Y7SUFDQSxPQUFPO1FBQ0xHLE9BQU9KO1FBQ1BLLFFBQVFQLEVBQUVJLE1BQU0sR0FBR0YsT0FBT0M7UUFDMUJLLFFBQVFQLEVBQUVRLEtBQUssQ0FBQ1AsTUFBTUQsRUFBRUcsTUFBTSxHQUFHRDtJQUNuQztBQUNGLEVBQUM7QUFFRDs7Ozs7O0NBTUMsR0FDTSxNQUFNVSw2QkFBNkIsQ0FBQ2IsR0FBR0MsR0FBR2E7SUFDL0MsSUFBSVosT0FBTyxFQUFFLCtDQUErQzs7SUFDNUQsSUFBSUMsUUFBUSxFQUFFLGdEQUFnRDs7SUFDOUQsOERBQThEO0lBQzlELHdEQUF3RDtJQUN4RCxNQUNFRCxPQUFPRixFQUFFSSxNQUFNLElBQ2ZGLE9BQU9ELEVBQUVHLE1BQU0sSUFDZkosQ0FBQyxDQUFDRSxLQUFLLEtBQUtELENBQUMsQ0FBQ0MsS0FBSyxJQUNuQkEsT0FBT1ksT0FDUDtRQUNBWjtJQUNGO0lBQ0EsZ0dBQWdHO0lBQ2hHLElBQUlBLE9BQU8sS0FBS0wsbUJBQW1CUSxJQUFJLENBQUNMLENBQUMsQ0FBQ0UsT0FBTyxFQUFFLEdBQUdBO0lBQ3RELDhEQUE4RDtJQUM5RCxNQUNFQyxRQUFRRCxPQUFPRixFQUFFSSxNQUFNLElBQ3ZCRCxRQUFRRCxPQUFPRCxFQUFFRyxNQUFNLElBQ3ZCSixDQUFDLENBQUNBLEVBQUVJLE1BQU0sR0FBR0QsUUFBUSxFQUFFLEtBQUtGLENBQUMsQ0FBQ0EsRUFBRUcsTUFBTSxHQUFHRCxRQUFRLEVBQUUsQ0FDbkQ7UUFDQUE7SUFDRjtJQUNBLCtGQUErRjtJQUMvRixJQUFJQSxRQUFRLEtBQUtMLGtCQUFrQk8sSUFBSSxDQUFDTCxDQUFDLENBQUNBLEVBQUVJLE1BQU0sR0FBR0QsTUFBTSxHQUFHQTtJQUM5RCw0RkFBNEY7SUFDNUYsTUFDRUEsUUFBUUQsT0FBT0YsRUFBRUksTUFBTSxJQUN2QkQsUUFBUUQsT0FBT0QsRUFBRUcsTUFBTSxJQUN2QkosQ0FBQyxDQUFDRSxLQUFLLEtBQUtELENBQUMsQ0FBQ0MsS0FBSyxDQUNuQjtRQUNBQTtJQUNGO0lBQ0EsSUFBSUEsT0FBTyxLQUFLTCxtQkFBbUJRLElBQUksQ0FBQ0wsQ0FBQyxDQUFDRSxPQUFPLEVBQUUsR0FBR0E7SUFDdEQsT0FBTztRQUNMSSxPQUFPSjtRQUNQSyxRQUFRUCxFQUFFSSxNQUFNLEdBQUdGLE9BQU9DO1FBQzFCSyxRQUFRUCxFQUFFUSxLQUFLLENBQUNQLE1BQU1ELEVBQUVHLE1BQU0sR0FBR0Q7SUFDbkM7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL2RpZmYuanM/ZTAyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVmZmljaWVudCBkaWZmcy5cbiAqXG4gKiBAbW9kdWxlIGRpZmZcbiAqL1xuXG5pbXBvcnQgeyBlcXVhbGl0eVN0cmljdCB9IGZyb20gJy4vZnVuY3Rpb24uanMnXG5cbi8qKlxuICogQSBTaW1wbGVEaWZmIGRlc2NyaWJlcyBhIGNoYW5nZSBvbiBhIFN0cmluZy5cbiAqXG4gKiBgYGBqc1xuICogY29uc29sZS5sb2coYSkgLy8gdGhlIG9sZCB2YWx1ZVxuICogY29uc29sZS5sb2coYikgLy8gdGhlIHVwZGF0ZWQgdmFsdWVcbiAqIC8vIEFwcGx5IGNoYW5nZXMgb2YgZGlmZiAocHNldWRvY29kZSlcbiAqIGEucmVtb3ZlKGRpZmYuaW5kZXgsIGRpZmYucmVtb3ZlKSAvLyBSZW1vdmUgYGRpZmYucmVtb3ZlYCBjaGFyYWN0ZXJzXG4gKiBhLmluc2VydChkaWZmLmluZGV4LCBkaWZmLmluc2VydCkgLy8gSW5zZXJ0IGBkaWZmLmluc2VydGBcbiAqIGEgPT09IGIgLy8gdmFsdWVzIG1hdGNoXG4gKiBgYGBcbiAqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBTaW1wbGVEaWZmXG4gKiBAcHJvcGVydHkge051bWJlcn0gaW5kZXggVGhlIGluZGV4IHdoZXJlIGNoYW5nZXMgd2VyZSBhcHBsaWVkXG4gKiBAcHJvcGVydHkge051bWJlcn0gcmVtb3ZlIFRoZSBudW1iZXIgb2YgY2hhcmFjdGVycyB0byBkZWxldGUgc3RhcnRpbmdcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0IGBpbmRleGAuXG4gKiBAcHJvcGVydHkge1R9IGluc2VydCBUaGUgbmV3IHRleHQgdG8gaW5zZXJ0IGF0IGBpbmRleGAgYWZ0ZXIgYXBwbHlpbmdcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgYGRlbGV0ZWBcbiAqXG4gKiBAdGVtcGxhdGUgVFxuICovXG5cbmNvbnN0IGhpZ2hTdXJyb2dhdGVSZWdleCA9IC9bXFx1RDgwMC1cXHVEQkZGXS9cbmNvbnN0IGxvd1N1cnJvZ2F0ZVJlZ2V4ID0gL1tcXHVEQzAwLVxcdURGRkZdL1xuXG4vKipcbiAqIENyZWF0ZSBhIGRpZmYgYmV0d2VlbiB0d28gc3RyaW5ncy4gVGhpcyBkaWZmIGltcGxlbWVudGF0aW9uIGlzIGhpZ2hseVxuICogZWZmaWNpZW50LCBidXQgbm90IHZlcnkgc29waGlzdGljYXRlZC5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYSBUaGUgb2xkIHZlcnNpb24gb2YgdGhlIHN0cmluZ1xuICogQHBhcmFtIHtzdHJpbmd9IGIgVGhlIHVwZGF0ZWQgdmVyc2lvbiBvZiB0aGUgc3RyaW5nXG4gKiBAcmV0dXJuIHtTaW1wbGVEaWZmPHN0cmluZz59IFRoZSBkaWZmIGRlc2NyaXB0aW9uLlxuICovXG5leHBvcnQgY29uc3Qgc2ltcGxlRGlmZlN0cmluZyA9IChhLCBiKSA9PiB7XG4gIGxldCBsZWZ0ID0gMCAvLyBudW1iZXIgb2Ygc2FtZSBjaGFyYWN0ZXJzIGNvdW50aW5nIGZyb20gbGVmdFxuICBsZXQgcmlnaHQgPSAwIC8vIG51bWJlciBvZiBzYW1lIGNoYXJhY3RlcnMgY291bnRpbmcgZnJvbSByaWdodFxuICB3aGlsZSAobGVmdCA8IGEubGVuZ3RoICYmIGxlZnQgPCBiLmxlbmd0aCAmJiBhW2xlZnRdID09PSBiW2xlZnRdKSB7XG4gICAgbGVmdCsrXG4gIH1cbiAgLy8gSWYgdGhlIGxhc3Qgc2FtZSBjaGFyYWN0ZXIgaXMgYSBoaWdoIHN1cnJvZ2F0ZSwgd2UgbmVlZCB0byByb2xsYmFjayB0byB0aGUgcHJldmlvdXMgY2hhcmFjdGVyXG4gIGlmIChsZWZ0ID4gMCAmJiBoaWdoU3Vycm9nYXRlUmVnZXgudGVzdChhW2xlZnQgLSAxXSkpIGxlZnQtLVxuICB3aGlsZSAocmlnaHQgKyBsZWZ0IDwgYS5sZW5ndGggJiYgcmlnaHQgKyBsZWZ0IDwgYi5sZW5ndGggJiYgYVthLmxlbmd0aCAtIHJpZ2h0IC0gMV0gPT09IGJbYi5sZW5ndGggLSByaWdodCAtIDFdKSB7XG4gICAgcmlnaHQrK1xuICB9XG4gIC8vIElmIHRoZSBsYXN0IHNhbWUgY2hhcmFjdGVyIGlzIGEgbG93IHN1cnJvZ2F0ZSwgd2UgbmVlZCB0byByb2xsYmFjayB0byB0aGUgcHJldmlvdXMgY2hhcmFjdGVyXG4gIGlmIChyaWdodCA+IDAgJiYgbG93U3Vycm9nYXRlUmVnZXgudGVzdChhW2EubGVuZ3RoIC0gcmlnaHRdKSkgcmlnaHQtLVxuICByZXR1cm4ge1xuICAgIGluZGV4OiBsZWZ0LFxuICAgIHJlbW92ZTogYS5sZW5ndGggLSBsZWZ0IC0gcmlnaHQsXG4gICAgaW5zZXJ0OiBiLnNsaWNlKGxlZnQsIGIubGVuZ3RoIC0gcmlnaHQpXG4gIH1cbn1cblxuLyoqXG4gKiBAdG9kbyBSZW1vdmUgaW4gZmF2b3Igb2Ygc2ltcGxlRGlmZlN0cmluZ1xuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHNpbXBsZURpZmYgPSBzaW1wbGVEaWZmU3RyaW5nXG5cbi8qKlxuICogQ3JlYXRlIGEgZGlmZiBiZXR3ZWVuIHR3byBhcnJheXMuIFRoaXMgZGlmZiBpbXBsZW1lbnRhdGlvbiBpcyBoaWdobHlcbiAqIGVmZmljaWVudCwgYnV0IG5vdCB2ZXJ5IHNvcGhpc3RpY2F0ZWQuXG4gKlxuICogTm90ZTogVGhpcyBpcyBiYXNpY2FsbHkgdGhlIHNhbWUgZnVuY3Rpb24gYXMgYWJvdmUuIEFub3RoZXIgZnVuY3Rpb24gd2FzIGNyZWF0ZWQgc28gdGhhdCB0aGUgcnVudGltZVxuICogY2FuIGJldHRlciBvcHRpbWl6ZSB0aGVzZSBmdW5jdGlvbiBjYWxscy5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEB0ZW1wbGF0ZSBUXG4gKlxuICogQHBhcmFtIHtBcnJheTxUPn0gYSBUaGUgb2xkIHZlcnNpb24gb2YgdGhlIGFycmF5XG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBiIFRoZSB1cGRhdGVkIHZlcnNpb24gb2YgdGhlIGFycmF5XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFQsIFQpOmJvb2xlYW59IFtjb21wYXJlXVxuICogQHJldHVybiB7U2ltcGxlRGlmZjxBcnJheTxUPj59IFRoZSBkaWZmIGRlc2NyaXB0aW9uLlxuICovXG5leHBvcnQgY29uc3Qgc2ltcGxlRGlmZkFycmF5ID0gKGEsIGIsIGNvbXBhcmUgPSBlcXVhbGl0eVN0cmljdCkgPT4ge1xuICBsZXQgbGVmdCA9IDAgLy8gbnVtYmVyIG9mIHNhbWUgY2hhcmFjdGVycyBjb3VudGluZyBmcm9tIGxlZnRcbiAgbGV0IHJpZ2h0ID0gMCAvLyBudW1iZXIgb2Ygc2FtZSBjaGFyYWN0ZXJzIGNvdW50aW5nIGZyb20gcmlnaHRcbiAgd2hpbGUgKGxlZnQgPCBhLmxlbmd0aCAmJiBsZWZ0IDwgYi5sZW5ndGggJiYgY29tcGFyZShhW2xlZnRdLCBiW2xlZnRdKSkge1xuICAgIGxlZnQrK1xuICB9XG4gIHdoaWxlIChyaWdodCArIGxlZnQgPCBhLmxlbmd0aCAmJiByaWdodCArIGxlZnQgPCBiLmxlbmd0aCAmJiBjb21wYXJlKGFbYS5sZW5ndGggLSByaWdodCAtIDFdLCBiW2IubGVuZ3RoIC0gcmlnaHQgLSAxXSkpIHtcbiAgICByaWdodCsrXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBpbmRleDogbGVmdCxcbiAgICByZW1vdmU6IGEubGVuZ3RoIC0gbGVmdCAtIHJpZ2h0LFxuICAgIGluc2VydDogYi5zbGljZShsZWZ0LCBiLmxlbmd0aCAtIHJpZ2h0KVxuICB9XG59XG5cbi8qKlxuICogRGlmZiB0ZXh0IGFuZCB0cnkgdG8gZGlmZiBhdCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGFcbiAqIEBwYXJhbSB7c3RyaW5nfSBiXG4gKiBAcGFyYW0ge251bWJlcn0gY3Vyc29yIFRoaXMgc2hvdWxkIHJlZmVyIHRvIHRoZSBjdXJyZW50IGxlZnQgY3Vyc29yLXJhbmdlIHBvc2l0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBzaW1wbGVEaWZmU3RyaW5nV2l0aEN1cnNvciA9IChhLCBiLCBjdXJzb3IpID0+IHtcbiAgbGV0IGxlZnQgPSAwIC8vIG51bWJlciBvZiBzYW1lIGNoYXJhY3RlcnMgY291bnRpbmcgZnJvbSBsZWZ0XG4gIGxldCByaWdodCA9IDAgLy8gbnVtYmVyIG9mIHNhbWUgY2hhcmFjdGVycyBjb3VudGluZyBmcm9tIHJpZ2h0XG4gIC8vIEl0ZXJhdGUgbGVmdCB0byB0aGUgcmlnaHQgdW50aWwgd2UgZmluZCBhIGNoYW5nZWQgY2hhcmFjdGVyXG4gIC8vIEZpcnN0IGl0ZXJhdGlvbiBjb25zaWRlcnMgdGhlIGN1cnJlbnQgY3Vyc29yIHBvc2l0aW9uXG4gIHdoaWxlIChcbiAgICBsZWZ0IDwgYS5sZW5ndGggJiZcbiAgICBsZWZ0IDwgYi5sZW5ndGggJiZcbiAgICBhW2xlZnRdID09PSBiW2xlZnRdICYmXG4gICAgbGVmdCA8IGN1cnNvclxuICApIHtcbiAgICBsZWZ0KytcbiAgfVxuICAvLyBJZiB0aGUgbGFzdCBzYW1lIGNoYXJhY3RlciBpcyBhIGhpZ2ggc3Vycm9nYXRlLCB3ZSBuZWVkIHRvIHJvbGxiYWNrIHRvIHRoZSBwcmV2aW91cyBjaGFyYWN0ZXJcbiAgaWYgKGxlZnQgPiAwICYmIGhpZ2hTdXJyb2dhdGVSZWdleC50ZXN0KGFbbGVmdCAtIDFdKSkgbGVmdC0tXG4gIC8vIEl0ZXJhdGUgcmlnaHQgdG8gdGhlIGxlZnQgdW50aWwgd2UgZmluZCBhIGNoYW5nZWQgY2hhcmFjdGVyXG4gIHdoaWxlIChcbiAgICByaWdodCArIGxlZnQgPCBhLmxlbmd0aCAmJlxuICAgIHJpZ2h0ICsgbGVmdCA8IGIubGVuZ3RoICYmXG4gICAgYVthLmxlbmd0aCAtIHJpZ2h0IC0gMV0gPT09IGJbYi5sZW5ndGggLSByaWdodCAtIDFdXG4gICkge1xuICAgIHJpZ2h0KytcbiAgfVxuICAvLyBJZiB0aGUgbGFzdCBzYW1lIGNoYXJhY3RlciBpcyBhIGxvdyBzdXJyb2dhdGUsIHdlIG5lZWQgdG8gcm9sbGJhY2sgdG8gdGhlIHByZXZpb3VzIGNoYXJhY3RlclxuICBpZiAocmlnaHQgPiAwICYmIGxvd1N1cnJvZ2F0ZVJlZ2V4LnRlc3QoYVthLmxlbmd0aCAtIHJpZ2h0XSkpIHJpZ2h0LS1cbiAgLy8gVHJ5IHRvIGl0ZXJhdGUgbGVmdCBmdXJ0aGVyIHRvIHRoZSByaWdodCB3aXRob3V0IGNhcmluZyBhYm91dCB0aGUgY3VycmVudCBjdXJzb3IgcG9zaXRpb25cbiAgd2hpbGUgKFxuICAgIHJpZ2h0ICsgbGVmdCA8IGEubGVuZ3RoICYmXG4gICAgcmlnaHQgKyBsZWZ0IDwgYi5sZW5ndGggJiZcbiAgICBhW2xlZnRdID09PSBiW2xlZnRdXG4gICkge1xuICAgIGxlZnQrK1xuICB9XG4gIGlmIChsZWZ0ID4gMCAmJiBoaWdoU3Vycm9nYXRlUmVnZXgudGVzdChhW2xlZnQgLSAxXSkpIGxlZnQtLVxuICByZXR1cm4ge1xuICAgIGluZGV4OiBsZWZ0LFxuICAgIHJlbW92ZTogYS5sZW5ndGggLSBsZWZ0IC0gcmlnaHQsXG4gICAgaW5zZXJ0OiBiLnNsaWNlKGxlZnQsIGIubGVuZ3RoIC0gcmlnaHQpXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJlcXVhbGl0eVN0cmljdCIsImhpZ2hTdXJyb2dhdGVSZWdleCIsImxvd1N1cnJvZ2F0ZVJlZ2V4Iiwic2ltcGxlRGlmZlN0cmluZyIsImEiLCJiIiwibGVmdCIsInJpZ2h0IiwibGVuZ3RoIiwidGVzdCIsImluZGV4IiwicmVtb3ZlIiwiaW5zZXJ0Iiwic2xpY2UiLCJzaW1wbGVEaWZmIiwic2ltcGxlRGlmZkFycmF5IiwiY29tcGFyZSIsInNpbXBsZURpZmZTdHJpbmdXaXRoQ3Vyc29yIiwiY3Vyc29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/diff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/dom.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/dom.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CDATA_SECTION_NODE: () => (/* binding */ CDATA_SECTION_NODE),\n/* harmony export */   COMMENT_NODE: () => (/* binding */ COMMENT_NODE),\n/* harmony export */   DOCUMENT_FRAGMENT_NODE: () => (/* binding */ DOCUMENT_FRAGMENT_NODE),\n/* harmony export */   DOCUMENT_NODE: () => (/* binding */ DOCUMENT_NODE),\n/* harmony export */   DOCUMENT_TYPE_NODE: () => (/* binding */ DOCUMENT_TYPE_NODE),\n/* harmony export */   ELEMENT_NODE: () => (/* binding */ ELEMENT_NODE),\n/* harmony export */   TEXT_NODE: () => (/* binding */ TEXT_NODE),\n/* harmony export */   addEventListener: () => (/* binding */ addEventListener),\n/* harmony export */   addEventListeners: () => (/* binding */ addEventListeners),\n/* harmony export */   append: () => (/* binding */ append),\n/* harmony export */   appendChild: () => (/* binding */ appendChild),\n/* harmony export */   canvas: () => (/* binding */ canvas),\n/* harmony export */   checkNodeType: () => (/* binding */ checkNodeType),\n/* harmony export */   createDocumentFragment: () => (/* binding */ createDocumentFragment),\n/* harmony export */   createElement: () => (/* binding */ createElement),\n/* harmony export */   createTextNode: () => (/* binding */ createTextNode),\n/* harmony export */   doc: () => (/* binding */ doc),\n/* harmony export */   domParser: () => (/* binding */ domParser),\n/* harmony export */   element: () => (/* binding */ element),\n/* harmony export */   emitCustomEvent: () => (/* binding */ emitCustomEvent),\n/* harmony export */   fragment: () => (/* binding */ fragment),\n/* harmony export */   getElementById: () => (/* binding */ getElementById),\n/* harmony export */   insertBefore: () => (/* binding */ insertBefore),\n/* harmony export */   isParentOf: () => (/* binding */ isParentOf),\n/* harmony export */   mapToStyleString: () => (/* binding */ mapToStyleString),\n/* harmony export */   pairToStyleString: () => (/* binding */ pairToStyleString),\n/* harmony export */   pairsToStyleString: () => (/* binding */ pairsToStyleString),\n/* harmony export */   parseElement: () => (/* binding */ parseElement),\n/* harmony export */   parseFragment: () => (/* binding */ parseFragment),\n/* harmony export */   querySelector: () => (/* binding */ querySelector),\n/* harmony export */   querySelectorAll: () => (/* binding */ querySelectorAll),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeEventListener: () => (/* binding */ removeEventListener),\n/* harmony export */   removeEventListeners: () => (/* binding */ removeEventListeners),\n/* harmony export */   replaceWith: () => (/* binding */ replaceWith),\n/* harmony export */   setAttributes: () => (/* binding */ setAttributes),\n/* harmony export */   setAttributesMap: () => (/* binding */ setAttributesMap),\n/* harmony export */   text: () => (/* binding */ text)\n/* harmony export */ });\n/* harmony import */ var _pair_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pair.js */ \"(ssr)/./node_modules/lib0/pair.js\");\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* eslint-env browser */ /**\n * Utility module to work with the DOM.\n *\n * @module dom\n */ \n\n/* c8 ignore start */ /**\n * @type {Document}\n */ const doc = /** @type {Document} */ typeof document !== \"undefined\" ? document : {};\n/**\n * @param {string} name\n * @return {HTMLElement}\n */ const createElement = (name)=>doc.createElement(name);\n/**\n * @return {DocumentFragment}\n */ const createDocumentFragment = ()=>doc.createDocumentFragment();\n/**\n * @param {string} text\n * @return {Text}\n */ const createTextNode = (text)=>doc.createTextNode(text);\nconst domParser = /** @type {DOMParser} */ typeof DOMParser !== \"undefined\" ? new DOMParser() : null;\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */ const emitCustomEvent = (el, name, opts)=>el.dispatchEvent(new CustomEvent(name, opts));\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */ const setAttributes = (el, attrs)=>{\n    _pair_js__WEBPACK_IMPORTED_MODULE_0__.forEach(attrs, (key, value)=>{\n        if (value === false) {\n            el.removeAttribute(key);\n        } else if (value === true) {\n            el.setAttribute(key, \"\");\n        } else {\n            // @ts-ignore\n            el.setAttribute(key, value);\n        }\n    });\n    return el;\n};\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */ const setAttributesMap = (el, attrs)=>{\n    attrs.forEach((value, key)=>{\n        el.setAttribute(key, value);\n    });\n    return el;\n};\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */ const fragment = (children)=>{\n    const fragment = createDocumentFragment();\n    for(let i = 0; i < children.length; i++){\n        appendChild(fragment, children[i]);\n    }\n    return fragment;\n};\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */ const append = (parent, nodes)=>{\n    appendChild(parent, fragment(nodes));\n    return parent;\n};\n/**\n * @param {HTMLElement} el\n */ const remove = (el)=>el.remove();\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */ const addEventListener = (el, name, f)=>el.addEventListener(name, f);\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */ const removeEventListener = (el, name, f)=>el.removeEventListener(name, f);\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */ const addEventListeners = (node, listeners)=>{\n    _pair_js__WEBPACK_IMPORTED_MODULE_0__.forEach(listeners, (name, f)=>addEventListener(node, name, f));\n    return node;\n};\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */ const removeEventListeners = (node, listeners)=>{\n    _pair_js__WEBPACK_IMPORTED_MODULE_0__.forEach(listeners, (name, f)=>removeEventListener(node, name, f));\n    return node;\n};\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */ const element = (name, attrs = [], children = [])=>append(setAttributes(createElement(name), attrs), children);\n/**\n * @param {number} width\n * @param {number} height\n */ const canvas = (width, height)=>{\n    const c = /** @type {HTMLCanvasElement} */ createElement(\"canvas\");\n    c.height = height;\n    c.width = width;\n    return c;\n};\n/**\n * @param {string} t\n * @return {Text}\n */ const text = createTextNode;\n/**\n * @param {pair.Pair<string,string>} pair\n */ const pairToStyleString = (pair)=>`${pair.left}:${pair.right};`;\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */ const pairsToStyleString = (pairs)=>pairs.map(pairToStyleString).join(\"\");\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */ const mapToStyleString = (m)=>_map_js__WEBPACK_IMPORTED_MODULE_1__.map(m, (value, key)=>`${key}:${value};`).join(\"\");\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */ const querySelector = (el, query)=>el.querySelector(query);\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */ const querySelectorAll = (el, query)=>el.querySelectorAll(query);\n/**\n * @param {string} id\n * @return {HTMLElement}\n */ const getElementById = (id)=>/** @type {HTMLElement} */ doc.getElementById(id);\n/**\n * @param {string} html\n * @return {HTMLElement}\n */ const _parse = (html)=>domParser.parseFromString(`<html><body>${html}</body></html>`, \"text/html\").body;\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */ const parseFragment = (html)=>fragment(/** @type {any} */ _parse(html).childNodes);\n/**\n * @param {string} html\n * @return {HTMLElement}\n */ const parseElement = (html)=>/** @type HTMLElement */ _parse(html).firstElementChild;\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */ const replaceWith = (oldEl, newEl)=>oldEl.replaceWith(newEl);\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */ const insertBefore = (parent, el, ref)=>parent.insertBefore(el, ref);\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */ const appendChild = (parent, child)=>parent.appendChild(child);\nconst ELEMENT_NODE = doc.ELEMENT_NODE;\nconst TEXT_NODE = doc.TEXT_NODE;\nconst CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE;\nconst COMMENT_NODE = doc.COMMENT_NODE;\nconst DOCUMENT_NODE = doc.DOCUMENT_NODE;\nconst DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE;\nconst DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE;\n/**\n * @param {any} node\n * @param {number} type\n */ const checkNodeType = (node, type)=>node.nodeType === type;\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */ const isParentOf = (parent, child)=>{\n    let p = child.parentNode;\n    while(p && p !== parent){\n        p = p.parentNode;\n    }\n    return p === parent;\n} /* c8 ignore stop */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/dom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/encoding.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/encoding.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   IncUintOptRleEncoder: () => (/* binding */ IncUintOptRleEncoder),\n/* harmony export */   IntDiffEncoder: () => (/* binding */ IntDiffEncoder),\n/* harmony export */   IntDiffOptRleEncoder: () => (/* binding */ IntDiffOptRleEncoder),\n/* harmony export */   RleEncoder: () => (/* binding */ RleEncoder),\n/* harmony export */   RleIntDiffEncoder: () => (/* binding */ RleIntDiffEncoder),\n/* harmony export */   StringEncoder: () => (/* binding */ StringEncoder),\n/* harmony export */   UintOptRleEncoder: () => (/* binding */ UintOptRleEncoder),\n/* harmony export */   _writeVarStringNative: () => (/* binding */ _writeVarStringNative),\n/* harmony export */   _writeVarStringPolyfill: () => (/* binding */ _writeVarStringPolyfill),\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   hasContent: () => (/* binding */ hasContent),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setUint16: () => (/* binding */ setUint16),\n/* harmony export */   setUint32: () => (/* binding */ setUint32),\n/* harmony export */   setUint8: () => (/* binding */ setUint8),\n/* harmony export */   toUint8Array: () => (/* binding */ toUint8Array),\n/* harmony export */   verifyLen: () => (/* binding */ verifyLen),\n/* harmony export */   write: () => (/* binding */ write),\n/* harmony export */   writeAny: () => (/* binding */ writeAny),\n/* harmony export */   writeBigInt64: () => (/* binding */ writeBigInt64),\n/* harmony export */   writeBigUint64: () => (/* binding */ writeBigUint64),\n/* harmony export */   writeBinaryEncoder: () => (/* binding */ writeBinaryEncoder),\n/* harmony export */   writeFloat32: () => (/* binding */ writeFloat32),\n/* harmony export */   writeFloat64: () => (/* binding */ writeFloat64),\n/* harmony export */   writeOnDataView: () => (/* binding */ writeOnDataView),\n/* harmony export */   writeTerminatedString: () => (/* binding */ writeTerminatedString),\n/* harmony export */   writeTerminatedUint8Array: () => (/* binding */ writeTerminatedUint8Array),\n/* harmony export */   writeUint16: () => (/* binding */ writeUint16),\n/* harmony export */   writeUint32: () => (/* binding */ writeUint32),\n/* harmony export */   writeUint32BigEndian: () => (/* binding */ writeUint32BigEndian),\n/* harmony export */   writeUint8: () => (/* binding */ writeUint8),\n/* harmony export */   writeUint8Array: () => (/* binding */ writeUint8Array),\n/* harmony export */   writeVarInt: () => (/* binding */ writeVarInt),\n/* harmony export */   writeVarString: () => (/* binding */ writeVarString),\n/* harmony export */   writeVarUint: () => (/* binding */ writeVarUint),\n/* harmony export */   writeVarUint8Array: () => (/* binding */ writeVarUint8Array)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/lib0/number.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */ \n\n\n\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */ class Encoder {\n    constructor(){\n        this.cpos = 0;\n        this.cbuf = new Uint8Array(100);\n        /**\n     * @type {Array<Uint8Array>}\n     */ this.bufs = [];\n    }\n}\n/**\n * @function\n * @return {Encoder}\n */ const createEncoder = ()=>new Encoder();\n/**\n * @param {function(Encoder):void} f\n */ const encode = (f)=>{\n    const encoder = createEncoder();\n    f(encoder);\n    return toUint8Array(encoder);\n};\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */ const length = (encoder)=>{\n    let len = encoder.cpos;\n    for(let i = 0; i < encoder.bufs.length; i++){\n        len += encoder.bufs[i].length;\n    }\n    return len;\n};\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */ const hasContent = (encoder)=>encoder.cpos > 0 || encoder.bufs.length > 0;\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */ const toUint8Array = (encoder)=>{\n    const uint8arr = new Uint8Array(length(encoder));\n    let curPos = 0;\n    for(let i = 0; i < encoder.bufs.length; i++){\n        const d = encoder.bufs[i];\n        uint8arr.set(d, curPos);\n        curPos += d.length;\n    }\n    uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n    return uint8arr;\n};\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */ const verifyLen = (encoder, len)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (bufferLen - encoder.cpos < len) {\n        encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos));\n        encoder.cbuf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_0__.max(bufferLen, len) * 2);\n        encoder.cpos = 0;\n    }\n};\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */ const write = (encoder, num)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (encoder.cpos === bufferLen) {\n        encoder.bufs.push(encoder.cbuf);\n        encoder.cbuf = new Uint8Array(bufferLen * 2);\n        encoder.cpos = 0;\n    }\n    encoder.cbuf[encoder.cpos++] = num;\n};\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */ const set = (encoder, pos, num)=>{\n    let buffer = null;\n    // iterate all buffers and adjust position\n    for(let i = 0; i < encoder.bufs.length && buffer === null; i++){\n        const b = encoder.bufs[i];\n        if (pos < b.length) {\n            buffer = b // found buffer\n            ;\n        } else {\n            pos -= b.length;\n        }\n    }\n    if (buffer === null) {\n        // use current buffer\n        buffer = encoder.cbuf;\n    }\n    buffer[pos] = num;\n};\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint8 = write;\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint8 = set;\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint16 = (encoder, num)=>{\n    write(encoder, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    write(encoder, num >>> 8 & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint16 = (encoder, pos, num)=>{\n    set(encoder, pos, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    set(encoder, pos + 1, num >>> 8 & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n};\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint32 = (encoder, num)=>{\n    for(let i = 0; i < 4; i++){\n        write(encoder, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n        num >>>= 8;\n    }\n};\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeUint32BigEndian = (encoder, num)=>{\n    for(let i = 3; i >= 0; i--){\n        write(encoder, num >>> 8 * i & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n    }\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */ const setUint32 = (encoder, pos, num)=>{\n    for(let i = 0; i < 4; i++){\n        set(encoder, pos + i, num & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS8);\n        num >>>= 8;\n    }\n};\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeVarUint = (encoder, num)=>{\n    while(num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7){\n        write(encoder, _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n        num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 128) // shift >>> 7\n        ;\n    }\n    write(encoder, _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n};\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */ const writeVarInt = (encoder, num)=>{\n    const isNegative = _math_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeZero(num);\n    if (isNegative) {\n        num = -num;\n    }\n    //             |- whether to continue reading         |- whether is negative     |- number\n    write(encoder, (num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6 ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 : 0) | (isNegative ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT7 : 0) | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS6 & num);\n    num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 64) // shift >>> 6\n    ;\n    // We don't need to consider the case of num === 0 so we can use a different\n    // pattern here than above.\n    while(num > 0){\n        write(encoder, (num > _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 ? _binary_js__WEBPACK_IMPORTED_MODULE_1__.BIT8 : 0) | _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS7 & num);\n        num = _math_js__WEBPACK_IMPORTED_MODULE_0__.floor(num / 128) // shift >>> 7\n        ;\n    }\n};\n/**\n * A cache to store strings temporarily\n */ const _strBuffer = new Uint8Array(30000);\nconst _maxStrBSize = _strBuffer.length / 3;\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const _writeVarStringNative = (encoder, str)=>{\n    if (str.length < _maxStrBSize) {\n        // We can encode the string into the existing buffer\n        /* c8 ignore next */ const written = _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0;\n        writeVarUint(encoder, written);\n        for(let i = 0; i < written; i++){\n            write(encoder, _strBuffer[i]);\n        }\n    } else {\n        writeVarUint8Array(encoder, _string_js__WEBPACK_IMPORTED_MODULE_2__.encodeUtf8(str));\n    }\n};\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const _writeVarStringPolyfill = (encoder, str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    writeVarUint(encoder, len);\n    for(let i = 0; i < len; i++){\n        write(encoder, /** @type {number} */ encodedString.codePointAt(i));\n    }\n};\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ /* c8 ignore next */ const writeVarString = _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder && /** @type {any} */ _string_js__WEBPACK_IMPORTED_MODULE_2__.utf8TextEncoder.encodeInto ? _writeVarStringNative : _writeVarStringPolyfill;\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */ const writeTerminatedString = (encoder, str)=>writeTerminatedUint8Array(encoder, _string_js__WEBPACK_IMPORTED_MODULE_2__.encodeUtf8(str));\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */ const writeTerminatedUint8Array = (encoder, buf)=>{\n    for(let i = 0; i < buf.length; i++){\n        const b = buf[i];\n        if (b === 0 || b === 1) {\n            write(encoder, 1);\n        }\n        write(encoder, buf[i]);\n    }\n    write(encoder, 0);\n};\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */ const writeBinaryEncoder = (encoder, append)=>writeUint8Array(encoder, toUint8Array(append));\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */ const writeUint8Array = (encoder, uint8Array)=>{\n    const bufferLen = encoder.cbuf.length;\n    const cpos = encoder.cpos;\n    const leftCopyLen = _math_js__WEBPACK_IMPORTED_MODULE_0__.min(bufferLen - cpos, uint8Array.length);\n    const rightCopyLen = uint8Array.length - leftCopyLen;\n    encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n    encoder.cpos += leftCopyLen;\n    if (rightCopyLen > 0) {\n        // Still something to write, write right half..\n        // Append new buffer\n        encoder.bufs.push(encoder.cbuf);\n        // must have at least size of remaining buffer\n        encoder.cbuf = new Uint8Array(_math_js__WEBPACK_IMPORTED_MODULE_0__.max(bufferLen * 2, rightCopyLen));\n        // copy array\n        encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n        encoder.cpos = rightCopyLen;\n    }\n};\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */ const writeVarUint8Array = (encoder, uint8Array)=>{\n    writeVarUint(encoder, uint8Array.byteLength);\n    writeUint8Array(encoder, uint8Array);\n};\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */ const writeOnDataView = (encoder, len)=>{\n    verifyLen(encoder, len);\n    const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n    encoder.cpos += len;\n    return dview;\n};\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */ const writeFloat32 = (encoder, num)=>writeOnDataView(encoder, 4).setFloat32(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */ const writeFloat64 = (encoder, num)=>writeOnDataView(encoder, 8).setFloat64(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */ const writeBigInt64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigInt64(0, num, false);\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */ const writeBigUint64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigUint64(0, num, false);\nconst floatTestBed = new DataView(new ArrayBuffer(4));\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */ const isFloat32 = (num)=>{\n    floatTestBed.setFloat32(0, num);\n    return floatTestBed.getFloat32(0) === num;\n};\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */ const writeAny = (encoder, data)=>{\n    switch(typeof data){\n        case \"string\":\n            // TYPE 119: STRING\n            write(encoder, 119);\n            writeVarString(encoder, data);\n            break;\n        case \"number\":\n            if (_number_js__WEBPACK_IMPORTED_MODULE_3__.isInteger(data) && _math_js__WEBPACK_IMPORTED_MODULE_0__.abs(data) <= _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS31) {\n                // TYPE 125: INTEGER\n                write(encoder, 125);\n                writeVarInt(encoder, data);\n            } else if (isFloat32(data)) {\n                // TYPE 124: FLOAT32\n                write(encoder, 124);\n                writeFloat32(encoder, data);\n            } else {\n                // TYPE 123: FLOAT64\n                write(encoder, 123);\n                writeFloat64(encoder, data);\n            }\n            break;\n        case \"bigint\":\n            // TYPE 122: BigInt\n            write(encoder, 122);\n            writeBigInt64(encoder, data);\n            break;\n        case \"object\":\n            if (data === null) {\n                // TYPE 126: null\n                write(encoder, 126);\n            } else if (_array_js__WEBPACK_IMPORTED_MODULE_4__.isArray(data)) {\n                // TYPE 117: Array\n                write(encoder, 117);\n                writeVarUint(encoder, data.length);\n                for(let i = 0; i < data.length; i++){\n                    writeAny(encoder, data[i]);\n                }\n            } else if (data instanceof Uint8Array) {\n                // TYPE 116: ArrayBuffer\n                write(encoder, 116);\n                writeVarUint8Array(encoder, data);\n            } else {\n                // TYPE 118: Object\n                write(encoder, 118);\n                const keys = Object.keys(data);\n                writeVarUint(encoder, keys.length);\n                for(let i = 0; i < keys.length; i++){\n                    const key = keys[i];\n                    writeVarString(encoder, key);\n                    writeAny(encoder, data[key]);\n                }\n            }\n            break;\n        case \"boolean\":\n            // TYPE 120/121: boolean (true/false)\n            write(encoder, data ? 120 : 121);\n            break;\n        default:\n            // TYPE 127: undefined\n            write(encoder, 127);\n    }\n};\n/**\n * Now come a few stateful encoder that have their own classes.\n */ /**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */ class RleEncoder extends Encoder {\n    /**\n   * @param {function(Encoder, T):void} writer\n   */ constructor(writer){\n        super();\n        /**\n     * The writer\n     */ this.w = writer;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    /**\n   * @param {T} v\n   */ write(v) {\n        if (this.s === v) {\n            this.count++;\n        } else {\n            if (this.count > 0) {\n                // flush counter, unless this is the first value (count = 0)\n                writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n                ;\n            }\n            this.count = 1;\n            // write first value\n            this.w(this, v);\n            this.s = v;\n        }\n    }\n}\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */ class IntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        writeVarInt(this, v - this.s);\n        this.s = v;\n    }\n}\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */ class RleIntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v && this.count > 0) {\n            this.count++;\n        } else {\n            if (this.count > 0) {\n                // flush counter, unless this is the first value (count = 0)\n                writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n                ;\n            }\n            this.count = 1;\n            // write first value\n            writeVarInt(this, v - this.s);\n            this.s = v;\n        }\n    }\n}\n/**\n * @param {UintOptRleEncoder} encoder\n */ const flushUintOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set sign to positive\n        // case 2: write several values. set sign to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n        if (encoder.count > 1) {\n            writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n            ;\n        }\n    }\n};\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */ class UintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v) {\n            this.count++;\n        } else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */ class IncUintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s + this.count === v) {\n            this.count++;\n        } else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */ const flushIntDiffOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        //          31 bit making up the diff | wether to write the counter\n        // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n        const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1);\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set first bit to positive\n        // case 2: write several values. set first bit to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encodedDiff);\n        if (encoder.count > 1) {\n            writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n            ;\n        }\n    }\n};\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */ class IntDiffOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.diff === v - this.s) {\n            this.s = v;\n            this.count++;\n        } else {\n            flushIntDiffOptRleEncoder(this);\n            this.count = 1;\n            this.diff = v - this.s;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushIntDiffOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */ class StringEncoder {\n    constructor(){\n        /**\n     * @type {Array<string>}\n     */ this.sarr = [];\n        this.s = \"\";\n        this.lensE = new UintOptRleEncoder();\n    }\n    /**\n   * @param {string} string\n   */ write(string) {\n        this.s += string;\n        if (this.s.length > 19) {\n            this.sarr.push(this.s);\n            this.s = \"\";\n        }\n        this.lensE.write(string.length);\n    }\n    toUint8Array() {\n        const encoder = new Encoder();\n        this.sarr.push(this.s);\n        this.s = \"\";\n        writeVarString(encoder, this.sarr.join(\"\"));\n        writeUint8Array(encoder, this.lensE.toUint8Array());\n        return toUint8Array(encoder);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/environment.js":
/*!******************************************!*\
  !*** ./node_modules/lib0/environment.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureConf: () => (/* binding */ ensureConf),\n/* harmony export */   getConf: () => (/* binding */ getConf),\n/* harmony export */   getParam: () => (/* binding */ getParam),\n/* harmony export */   getVariable: () => (/* binding */ getVariable),\n/* harmony export */   hasConf: () => (/* binding */ hasConf),\n/* harmony export */   hasParam: () => (/* binding */ hasParam),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   production: () => (/* binding */ production),\n/* harmony export */   supportsColor: () => (/* binding */ supportsColor)\n/* harmony export */ });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/lib0/string.js\");\n/* harmony import */ var _conditions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conditions.js */ \"(ssr)/./node_modules/lib0/conditions.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/lib0/storage.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/lib0/function.js\");\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */ \n\n\n\n\n/* c8 ignore next 2 */ // @ts-ignore\nconst isNode = typeof process !== \"undefined\" && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\";\n/* c8 ignore next */ const isBrowser =  false && 0;\n/* c8 ignore next 3 */ const isMac = typeof navigator !== \"undefined\" ? /Mac/.test(navigator.platform) : false;\n/**\n * @type {Map<string,string>}\n */ let params;\nconst args = [];\n/* c8 ignore start */ const computeParams = ()=>{\n    if (params === undefined) {\n        if (isNode) {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n            const pargs = process.argv;\n            let currParamName = null;\n            for(let i = 0; i < pargs.length; i++){\n                const parg = pargs[i];\n                if (parg[0] === \"-\") {\n                    if (currParamName !== null) {\n                        params.set(currParamName, \"\");\n                    }\n                    currParamName = parg;\n                } else {\n                    if (currParamName !== null) {\n                        params.set(currParamName, parg);\n                        currParamName = null;\n                    } else {\n                        args.push(parg);\n                    }\n                }\n            }\n            if (currParamName !== null) {\n                params.set(currParamName, \"\");\n            }\n        // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n        } else if (typeof location === \"object\") {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create(); // eslint-disable-next-line no-undef\n            (location.search || \"?\").slice(1).split(\"&\").forEach((kv)=>{\n                if (kv.length !== 0) {\n                    const [key, value] = kv.split(\"=\");\n                    params.set(`--${_string_js__WEBPACK_IMPORTED_MODULE_1__.fromCamelCase(key, \"-\")}`, value);\n                    params.set(`-${_string_js__WEBPACK_IMPORTED_MODULE_1__.fromCamelCase(key, \"-\")}`, value);\n                }\n            });\n        } else {\n            params = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n        }\n    }\n    return params;\n};\n/* c8 ignore stop */ /**\n * @param {string} name\n * @return {boolean}\n */ /* c8 ignore next */ const hasParam = (name)=>computeParams().has(name);\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */ /* c8 ignore next 2 */ const getParam = (name, defaultVal)=>computeParams().get(name) || defaultVal;\n/**\n * @param {string} name\n * @return {string|null}\n */ /* c8 ignore next 4 */ const getVariable = (name)=>isNode ? _conditions_js__WEBPACK_IMPORTED_MODULE_2__.undefinedToNull(process.env[name.toUpperCase().replaceAll(\"-\", \"_\")]) : _conditions_js__WEBPACK_IMPORTED_MODULE_2__.undefinedToNull(_storage_js__WEBPACK_IMPORTED_MODULE_3__.varStorage.getItem(name));\n/**\n * @param {string} name\n * @return {string|null}\n */ /* c8 ignore next 2 */ const getConf = (name)=>computeParams().get(\"--\" + name) || getVariable(name);\n/**\n * @param {string} name\n * @return {string}\n */ /* c8 ignore next 5 */ const ensureConf = (name)=>{\n    const c = getConf(name);\n    if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll(\"-\", \"_\")}\"`);\n    return c;\n};\n/**\n * @param {string} name\n * @return {boolean}\n */ /* c8 ignore next 2 */ const hasConf = (name)=>hasParam(\"--\" + name) || getVariable(name) !== null;\n/* c8 ignore next */ const production = hasConf(\"production\");\n/* c8 ignore next 2 */ const forceColor = isNode && _function_js__WEBPACK_IMPORTED_MODULE_4__.isOneOf(process.env.FORCE_COLOR, [\n    \"true\",\n    \"1\",\n    \"2\"\n]);\n/* c8 ignore start */ const supportsColor = !hasParam(\"no-colors\") && (!isNode || process.stdout.isTTY || forceColor) && (!isNode || hasParam(\"color\") || forceColor || getVariable(\"COLORTERM\") !== null || (getVariable(\"TERM\") || \"\").includes(\"color\") /* c8 ignore stop */ );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/environment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/error.js":
/*!************************************!*\
  !*** ./node_modules/lib0/error.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   methodUnimplemented: () => (/* binding */ methodUnimplemented),\n/* harmony export */   unexpectedCase: () => (/* binding */ unexpectedCase)\n/* harmony export */ });\n/**\n * Error helpers.\n *\n * @module error\n */ /**\n * @param {string} s\n * @return {Error}\n */ /* c8 ignore next */ const create = (s)=>new Error(s);\n/**\n * @throws {Error}\n * @return {never}\n */ /* c8 ignore next 3 */ const methodUnimplemented = ()=>{\n    throw create(\"Method unimplemented\");\n};\n/**\n * @throws {Error}\n * @return {never}\n */ /* c8 ignore next 3 */ const unexpectedCase = ()=>{\n    throw create(\"Unexpected case\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7OztDQUdDLEdBQ0Qsa0JBQWtCLEdBQ1gsTUFBTUEsU0FBU0MsQ0FBQUEsSUFBSyxJQUFJQyxNQUFNRCxHQUFFO0FBRXZDOzs7Q0FHQyxHQUNELG9CQUFvQixHQUNiLE1BQU1FLHNCQUFzQjtJQUNqQyxNQUFNSCxPQUFPO0FBQ2YsRUFBQztBQUVEOzs7Q0FHQyxHQUNELG9CQUFvQixHQUNiLE1BQU1JLGlCQUFpQjtJQUM1QixNQUFNSixPQUFPO0FBQ2YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlLWpvdXJuYWwvLi9ub2RlX21vZHVsZXMvbGliMC9lcnJvci5qcz83ZTg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXJyb3IgaGVscGVycy5cbiAqXG4gKiBAbW9kdWxlIGVycm9yXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc1xuICogQHJldHVybiB7RXJyb3J9XG4gKi9cbi8qIGM4IGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gcyA9PiBuZXcgRXJyb3IocylcblxuLyoqXG4gKiBAdGhyb3dzIHtFcnJvcn1cbiAqIEByZXR1cm4ge25ldmVyfVxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAzICovXG5leHBvcnQgY29uc3QgbWV0aG9kVW5pbXBsZW1lbnRlZCA9ICgpID0+IHtcbiAgdGhyb3cgY3JlYXRlKCdNZXRob2QgdW5pbXBsZW1lbnRlZCcpXG59XG5cbi8qKlxuICogQHRocm93cyB7RXJyb3J9XG4gKiBAcmV0dXJuIHtuZXZlcn1cbiAqL1xuLyogYzggaWdub3JlIG5leHQgMyAqL1xuZXhwb3J0IGNvbnN0IHVuZXhwZWN0ZWRDYXNlID0gKCkgPT4ge1xuICB0aHJvdyBjcmVhdGUoJ1VuZXhwZWN0ZWQgY2FzZScpXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlIiwicyIsIkVycm9yIiwibWV0aG9kVW5pbXBsZW1lbnRlZCIsInVuZXhwZWN0ZWRDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/eventloop.js":
/*!****************************************!*\
  !*** ./node_modules/lib0/eventloop.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animation: () => (/* binding */ Animation),\n/* harmony export */   animationFrame: () => (/* binding */ animationFrame),\n/* harmony export */   createDebouncer: () => (/* binding */ createDebouncer),\n/* harmony export */   enqueue: () => (/* binding */ enqueue),\n/* harmony export */   idleCallback: () => (/* binding */ idleCallback),\n/* harmony export */   interval: () => (/* binding */ interval),\n/* harmony export */   timeout: () => (/* binding */ timeout)\n/* harmony export */ });\n/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */ /**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */ /**\n * @type {Array<function>}\n */ let queue = [];\nconst _runQueue = ()=>{\n    for(let i = 0; i < queue.length; i++){\n        queue[i]();\n    }\n    queue = [];\n};\n/**\n * @param {function():void} f\n */ const enqueue = (f)=>{\n    queue.push(f);\n    if (queue.length === 1) {\n        setTimeout(_runQueue, 0);\n    }\n};\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */ /**\n * @param {function(number):void} clearFunction\n */ const createTimeoutClass = (clearFunction)=>class TT {\n        /**\n   * @param {number} timeoutId\n   */ constructor(timeoutId){\n            this._ = timeoutId;\n        }\n        destroy() {\n            clearFunction(this._);\n        }\n    };\nconst Timeout = createTimeoutClass(clearTimeout);\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */ const timeout = (timeout, callback)=>new Timeout(setTimeout(callback, timeout));\nconst Interval = createTimeoutClass(clearInterval);\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */ const interval = (timeout, callback)=>new Interval(setInterval(callback, timeout));\n/* c8 ignore next */ const Animation = createTimeoutClass((arg)=>typeof requestAnimationFrame !== \"undefined\" && cancelAnimationFrame(arg));\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */ /* c8 ignore next */ const animationFrame = (cb)=>typeof requestAnimationFrame === \"undefined\" ? timeout(0, cb) : new Animation(requestAnimationFrame(cb));\n/* c8 ignore next */ // @ts-ignore\nconst Idle = createTimeoutClass((arg)=>typeof cancelIdleCallback !== \"undefined\" && cancelIdleCallback(arg));\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */ /* c8 ignore next 2 */ // @ts-ignore\nconst idleCallback = (cb)=>typeof requestIdleCallback !== \"undefined\" ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb);\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */ const createDebouncer = (timeout)=>{\n    let timer = -1;\n    return (f)=>{\n        clearTimeout(timer);\n        if (f) {\n            timer = /** @type {any} */ setTimeout(f, timeout);\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9ldmVudGxvb3AuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLCtGQUErRixHQUUvRjs7OztDQUlDLEdBRUQ7O0NBRUMsR0FDRCxJQUFJQSxRQUFRLEVBQUU7QUFFZCxNQUFNQyxZQUFZO0lBQ2hCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixNQUFNRyxNQUFNLEVBQUVELElBQUs7UUFDckNGLEtBQUssQ0FBQ0UsRUFBRTtJQUNWO0lBQ0FGLFFBQVEsRUFBRTtBQUNaO0FBRUE7O0NBRUMsR0FDTSxNQUFNSSxVQUFVQyxDQUFBQTtJQUNyQkwsTUFBTU0sSUFBSSxDQUFDRDtJQUNYLElBQUlMLE1BQU1HLE1BQU0sS0FBSyxHQUFHO1FBQ3RCSSxXQUFXTixXQUFXO0lBQ3hCO0FBQ0YsRUFBQztBQUVEOzs7Q0FHQyxHQUVEOztDQUVDLEdBQ0QsTUFBTU8scUJBQXFCQyxDQUFBQSxnQkFBaUIsTUFBTUM7UUFDaEQ7O0dBRUMsR0FDREMsWUFBYUMsU0FBUyxDQUFFO1lBQ3RCLElBQUksQ0FBQ0MsQ0FBQyxHQUFHRDtRQUNYO1FBRUFFLFVBQVc7WUFDVEwsY0FBYyxJQUFJLENBQUNJLENBQUM7UUFDdEI7SUFDRjtBQUVBLE1BQU1FLFVBQVVQLG1CQUFtQlE7QUFFbkM7Ozs7Q0FJQyxHQUNNLE1BQU1DLFVBQVUsQ0FBQ0EsU0FBU0MsV0FBYSxJQUFJSCxRQUFRUixXQUFXVyxVQUFVRCxVQUFTO0FBRXhGLE1BQU1FLFdBQVdYLG1CQUFtQlk7QUFFcEM7Ozs7Q0FJQyxHQUNNLE1BQU1DLFdBQVcsQ0FBQ0osU0FBU0MsV0FBYSxJQUFJQyxTQUFTRyxZQUFZSixVQUFVRCxVQUFTO0FBRTNGLGtCQUFrQixHQUNYLE1BQU1NLFlBQVlmLG1CQUFtQmdCLENBQUFBLE1BQU8sT0FBT0MsMEJBQTBCLGVBQWVDLHFCQUFxQkYsTUFBSztBQUU3SDs7O0NBR0MsR0FDRCxrQkFBa0IsR0FDWCxNQUFNRyxpQkFBaUJDLENBQUFBLEtBQU0sT0FBT0gsMEJBQTBCLGNBQWNSLFFBQVEsR0FBR1csTUFBTSxJQUFJTCxVQUFVRSxzQkFBc0JHLEtBQUk7QUFFNUksa0JBQWtCLEdBQ2xCLGFBQWE7QUFDYixNQUFNQyxPQUFPckIsbUJBQW1CZ0IsQ0FBQUEsTUFBTyxPQUFPTSx1QkFBdUIsZUFBZUEsbUJBQW1CTjtBQUV2Rzs7Ozs7Q0FLQyxHQUNELG9CQUFvQixHQUNwQixhQUFhO0FBQ04sTUFBTU8sZUFBZUgsQ0FBQUEsS0FBTSxPQUFPSSx3QkFBd0IsY0FBYyxJQUFJSCxLQUFLRyxvQkFBb0JKLE9BQU9YLFFBQVEsTUFBTVcsSUFBRztBQUVwSTs7O0NBR0MsR0FDTSxNQUFNSyxrQkFBa0JoQixDQUFBQTtJQUM3QixJQUFJaUIsUUFBUSxDQUFDO0lBQ2IsT0FBTzdCLENBQUFBO1FBQ0xXLGFBQWFrQjtRQUNiLElBQUk3QixHQUFHO1lBQ0w2QixRQUFRLGdCQUFnQixHQUFJM0IsV0FBV0YsR0FBR1k7UUFDNUM7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvZXZlbnRsb29wLmpzP2ZkZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIHJlcXVlc3RJZGxlQ2FsbGJhY2ssIHJlcXVlc3RBbmltYXRpb25GcmFtZSwgY2FuY2VsSWRsZUNhbGxiYWNrLCBjYW5jZWxBbmltYXRpb25GcmFtZSAqL1xuXG4vKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIHdvcmsgd2l0aCBFY21hU2NyaXB0J3MgZXZlbnQgbG9vcC5cbiAqXG4gKiBAbW9kdWxlIGV2ZW50bG9vcFxuICovXG5cbi8qKlxuICogQHR5cGUge0FycmF5PGZ1bmN0aW9uPn1cbiAqL1xubGV0IHF1ZXVlID0gW11cblxuY29uc3QgX3J1blF1ZXVlID0gKCkgPT4ge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgcXVldWVbaV0oKVxuICB9XG4gIHF1ZXVlID0gW11cbn1cblxuLyoqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6dm9pZH0gZlxuICovXG5leHBvcnQgY29uc3QgZW5xdWV1ZSA9IGYgPT4ge1xuICBxdWV1ZS5wdXNoKGYpXG4gIGlmIChxdWV1ZS5sZW5ndGggPT09IDEpIHtcbiAgICBzZXRUaW1lb3V0KF9ydW5RdWV1ZSwgMClcbiAgfVxufVxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFRpbWVvdXRPYmplY3RcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFRpbWVvdXRPYmplY3QuZGVzdHJveVxuICovXG5cbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpOnZvaWR9IGNsZWFyRnVuY3Rpb25cbiAqL1xuY29uc3QgY3JlYXRlVGltZW91dENsYXNzID0gY2xlYXJGdW5jdGlvbiA9PiBjbGFzcyBUVCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gdGltZW91dElkXG4gICAqL1xuICBjb25zdHJ1Y3RvciAodGltZW91dElkKSB7XG4gICAgdGhpcy5fID0gdGltZW91dElkXG4gIH1cblxuICBkZXN0cm95ICgpIHtcbiAgICBjbGVhckZ1bmN0aW9uKHRoaXMuXylcbiAgfVxufVxuXG5jb25zdCBUaW1lb3V0ID0gY3JlYXRlVGltZW91dENsYXNzKGNsZWFyVGltZW91dClcblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dFxuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm4ge1RpbWVvdXRPYmplY3R9XG4gKi9cbmV4cG9ydCBjb25zdCB0aW1lb3V0ID0gKHRpbWVvdXQsIGNhbGxiYWNrKSA9PiBuZXcgVGltZW91dChzZXRUaW1lb3V0KGNhbGxiYWNrLCB0aW1lb3V0KSlcblxuY29uc3QgSW50ZXJ2YWwgPSBjcmVhdGVUaW1lb3V0Q2xhc3MoY2xlYXJJbnRlcnZhbClcblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dFxuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm4ge1RpbWVvdXRPYmplY3R9XG4gKi9cbmV4cG9ydCBjb25zdCBpbnRlcnZhbCA9ICh0aW1lb3V0LCBjYWxsYmFjaykgPT4gbmV3IEludGVydmFsKHNldEludGVydmFsKGNhbGxiYWNrLCB0aW1lb3V0KSlcblxuLyogYzggaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBBbmltYXRpb24gPSBjcmVhdGVUaW1lb3V0Q2xhc3MoYXJnID0+IHR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgIT09ICd1bmRlZmluZWQnICYmIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGFyZykpXG5cbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpOnZvaWR9IGNiXG4gKiBAcmV0dXJuIHtUaW1lb3V0T2JqZWN0fVxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IGFuaW1hdGlvbkZyYW1lID0gY2IgPT4gdHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9PT0gJ3VuZGVmaW5lZCcgPyB0aW1lb3V0KDAsIGNiKSA6IG5ldyBBbmltYXRpb24ocmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNiKSlcblxuLyogYzggaWdub3JlIG5leHQgKi9cbi8vIEB0cy1pZ25vcmVcbmNvbnN0IElkbGUgPSBjcmVhdGVUaW1lb3V0Q2xhc3MoYXJnID0+IHR5cGVvZiBjYW5jZWxJZGxlQ2FsbGJhY2sgIT09ICd1bmRlZmluZWQnICYmIGNhbmNlbElkbGVDYWxsYmFjayhhcmcpKVxuXG4vKipcbiAqIE5vdGU6IHRoaXMgaXMgZXhwZXJpbWVudGFsIGFuZCBpcyBwcm9iYWJseSBvbmx5IHVzZWZ1bCBpbiBicm93c2Vycy5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYlxuICogQHJldHVybiB7VGltZW91dE9iamVjdH1cbiAqL1xuLyogYzggaWdub3JlIG5leHQgMiAqL1xuLy8gQHRzLWlnbm9yZVxuZXhwb3J0IGNvbnN0IGlkbGVDYWxsYmFjayA9IGNiID0+IHR5cGVvZiByZXF1ZXN0SWRsZUNhbGxiYWNrICE9PSAndW5kZWZpbmVkJyA/IG5ldyBJZGxlKHJlcXVlc3RJZGxlQ2FsbGJhY2soY2IpKSA6IHRpbWVvdXQoMTAwMCwgY2IpXG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHRpbWVvdXQgVGltZW91dCBvZiB0aGUgZGVib3VuY2UgYWN0aW9uXG4gKiBAcmV0dXJuIHtmdW5jdGlvbihmdW5jdGlvbigpOnZvaWQpOnZvaWR9XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVEZWJvdW5jZXIgPSB0aW1lb3V0ID0+IHtcbiAgbGV0IHRpbWVyID0gLTFcbiAgcmV0dXJuIGYgPT4ge1xuICAgIGNsZWFyVGltZW91dCh0aW1lcilcbiAgICBpZiAoZikge1xuICAgICAgdGltZXIgPSAvKiogQHR5cGUge2FueX0gKi8gKHNldFRpbWVvdXQoZiwgdGltZW91dCkpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsicXVldWUiLCJfcnVuUXVldWUiLCJpIiwibGVuZ3RoIiwiZW5xdWV1ZSIsImYiLCJwdXNoIiwic2V0VGltZW91dCIsImNyZWF0ZVRpbWVvdXRDbGFzcyIsImNsZWFyRnVuY3Rpb24iLCJUVCIsImNvbnN0cnVjdG9yIiwidGltZW91dElkIiwiXyIsImRlc3Ryb3kiLCJUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwidGltZW91dCIsImNhbGxiYWNrIiwiSW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsIkFuaW1hdGlvbiIsImFyZyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiYW5pbWF0aW9uRnJhbWUiLCJjYiIsIklkbGUiLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJpZGxlQ2FsbGJhY2siLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwiY3JlYXRlRGVib3VuY2VyIiwidGltZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/eventloop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/function.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/function.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apply: () => (/* binding */ apply),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   equalityDeep: () => (/* binding */ equalityDeep),\n/* harmony export */   equalityFlat: () => (/* binding */ equalityFlat),\n/* harmony export */   equalityStrict: () => (/* binding */ equalityStrict),\n/* harmony export */   id: () => (/* binding */ id),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isOneOf: () => (/* binding */ isOneOf),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isTemplate: () => (/* binding */ isTemplate),\n/* harmony export */   nop: () => (/* binding */ nop)\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/lib0/object.js\");\n/**\n * Common functions and function call helpers.\n *\n * @module function\n */ \n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */ const callAll = (fs, args, i = 0)=>{\n    try {\n        for(; i < fs.length; i++){\n            fs[i](...args);\n        }\n    } finally{\n        if (i < fs.length) {\n            callAll(fs, args, i + 1);\n        }\n    }\n};\nconst nop = ()=>{};\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */ const apply = (f)=>f();\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */ const id = (a)=>a;\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */ const equalityStrict = (a, b)=>a === b;\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */ const equalityFlat = (a, b)=>a === b || a != null && b != null && a.constructor === b.constructor && (_array_js__WEBPACK_IMPORTED_MODULE_0__.isArray(a) && _array_js__WEBPACK_IMPORTED_MODULE_0__.equalFlat(a, /** @type {Array<T>} */ b) || typeof a === \"object\" && _object_js__WEBPACK_IMPORTED_MODULE_1__.equalFlat(a, b));\n/* c8 ignore start */ /**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */ const equalityDeep = (a, b)=>{\n    if (a == null || b == null) {\n        return equalityStrict(a, b);\n    }\n    if (a.constructor !== b.constructor) {\n        return false;\n    }\n    if (a === b) {\n        return true;\n    }\n    switch(a.constructor){\n        case ArrayBuffer:\n            a = new Uint8Array(a);\n            b = new Uint8Array(b);\n        // eslint-disable-next-line no-fallthrough\n        case Uint8Array:\n            {\n                if (a.byteLength !== b.byteLength) {\n                    return false;\n                }\n                for(let i = 0; i < a.length; i++){\n                    if (a[i] !== b[i]) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Set:\n            {\n                if (a.size !== b.size) {\n                    return false;\n                }\n                for (const value of a){\n                    if (!b.has(value)) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Map:\n            {\n                if (a.size !== b.size) {\n                    return false;\n                }\n                for (const key of a.keys()){\n                    if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n                        return false;\n                    }\n                }\n                break;\n            }\n        case Object:\n            if (_object_js__WEBPACK_IMPORTED_MODULE_1__.length(a) !== _object_js__WEBPACK_IMPORTED_MODULE_1__.length(b)) {\n                return false;\n            }\n            for(const key in a){\n                if (!_object_js__WEBPACK_IMPORTED_MODULE_1__.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n                    return false;\n                }\n            }\n            break;\n        case Array:\n            if (a.length !== b.length) {\n                return false;\n            }\n            for(let i = 0; i < a.length; i++){\n                if (!equalityDeep(a[i], b[i])) {\n                    return false;\n                }\n            }\n            break;\n        default:\n            return false;\n    }\n    return true;\n};\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */ // @ts-ignore\nconst isOneOf = (value, options)=>options.includes(value);\n/* c8 ignore stop */ const isArray = _array_js__WEBPACK_IMPORTED_MODULE_0__.isArray;\n/**\n * @param {any} s\n * @return {s is String}\n */ const isString = (s)=>s && s.constructor === String;\n/**\n * @param {any} n\n * @return {n is Number}\n */ const isNumber = (n)=>n != null && n.constructor === Number;\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */ const is = (n, T)=>n && n.constructor === T;\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */ const isTemplate = (T)=>/**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/ (n)=>n && n.constructor === T;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/function.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/iterator.js":
/*!***************************************!*\
  !*** ./node_modules/lib0/iterator.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createIterator: () => (/* binding */ createIterator),\n/* harmony export */   iteratorFilter: () => (/* binding */ iteratorFilter),\n/* harmony export */   iteratorMap: () => (/* binding */ iteratorMap),\n/* harmony export */   mapIterator: () => (/* binding */ mapIterator)\n/* harmony export */ });\n/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */ /**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */ const mapIterator = (iterator, f)=>({\n        [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next () {\n            const r = iterator.next();\n            return {\n                value: r.done ? undefined : f(r.value),\n                done: r.done\n            };\n        }\n    });\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */ const createIterator = (next)=>({\n        /**\n   * @return {IterableIterator<T>}\n   */ [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next\n    });\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */ const iteratorFilter = (iterator, filter)=>createIterator(()=>{\n        let res;\n        do {\n            res = iterator.next();\n        }while (!res.done && !filter(res.value));\n        return res;\n    });\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */ const iteratorMap = (iterator, fmap)=>createIterator(()=>{\n        const { done, value } = iterator.next();\n        return {\n            done,\n            value: done ? undefined : fmap(value)\n        };\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9pdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7OztDQUtDLEdBQ00sTUFBTUEsY0FBYyxDQUFDQyxVQUFVQyxJQUFPO1FBQzNDLENBQUNDLE9BQU9GLFFBQVEsQ0FBQztZQUNmLE9BQU8sSUFBSTtRQUNiO1FBQ0EsYUFBYTtRQUNiRztZQUNFLE1BQU1DLElBQUlKLFNBQVNHLElBQUk7WUFDdkIsT0FBTztnQkFBRUUsT0FBT0QsRUFBRUUsSUFBSSxHQUFHQyxZQUFZTixFQUFFRyxFQUFFQyxLQUFLO2dCQUFHQyxNQUFNRixFQUFFRSxJQUFJO1lBQUM7UUFDaEU7SUFDRixHQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1FLGlCQUFpQkwsQ0FBQUEsT0FBUztRQUNyQzs7R0FFQyxHQUNELENBQUNELE9BQU9GLFFBQVEsQ0FBQztZQUNmLE9BQU8sSUFBSTtRQUNiO1FBQ0EsYUFBYTtRQUNiRztJQUNGLEdBQUU7QUFFRjs7OztDQUlDLEdBQ00sTUFBTU0saUJBQWlCLENBQUNULFVBQVVVLFNBQVdGLGVBQWU7UUFDakUsSUFBSUc7UUFDSixHQUFHO1lBQ0RBLE1BQU1YLFNBQVNHLElBQUk7UUFDckIsUUFBUyxDQUFDUSxJQUFJTCxJQUFJLElBQUksQ0FBQ0ksT0FBT0MsSUFBSU4sS0FBSyxHQUFFO1FBQ3pDLE9BQU9NO0lBQ1QsR0FBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNQyxjQUFjLENBQUNaLFVBQVVhLE9BQVNMLGVBQWU7UUFDNUQsTUFBTSxFQUFFRixJQUFJLEVBQUVELEtBQUssRUFBRSxHQUFHTCxTQUFTRyxJQUFJO1FBQ3JDLE9BQU87WUFBRUc7WUFBTUQsT0FBT0MsT0FBT0MsWUFBWU0sS0FBS1I7UUFBTztJQUN2RCxHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL2l0ZXJhdG9yLmpzP2NkNzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byBjcmVhdGUgYW5kIG1hbmlwdWxhdGUgSXRlcmF0b3JzLlxuICpcbiAqIEBtb2R1bGUgaXRlcmF0b3JcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBULFJcbiAqIEBwYXJhbSB7SXRlcmF0b3I8VD59IGl0ZXJhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFQpOlJ9IGZcbiAqIEByZXR1cm4ge0l0ZXJhYmxlSXRlcmF0b3I8Uj59XG4gKi9cbmV4cG9ydCBjb25zdCBtYXBJdGVyYXRvciA9IChpdGVyYXRvciwgZikgPT4gKHtcbiAgW1N5bWJvbC5pdGVyYXRvcl0gKCkge1xuICAgIHJldHVybiB0aGlzXG4gIH0sXG4gIC8vIEB0cy1pZ25vcmVcbiAgbmV4dCAoKSB7XG4gICAgY29uc3QgciA9IGl0ZXJhdG9yLm5leHQoKVxuICAgIHJldHVybiB7IHZhbHVlOiByLmRvbmUgPyB1bmRlZmluZWQgOiBmKHIudmFsdWUpLCBkb25lOiByLmRvbmUgfVxuICB9XG59KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6SXRlcmF0b3JSZXN1bHQ8VD59IG5leHRcbiAqIEByZXR1cm4ge0l0ZXJhYmxlSXRlcmF0b3I8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVJdGVyYXRvciA9IG5leHQgPT4gKHtcbiAgLyoqXG4gICAqIEByZXR1cm4ge0l0ZXJhYmxlSXRlcmF0b3I8VD59XG4gICAqL1xuICBbU3ltYm9sLml0ZXJhdG9yXSAoKSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfSxcbiAgLy8gQHRzLWlnbm9yZVxuICBuZXh0XG59KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0l0ZXJhdG9yPFQ+fSBpdGVyYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbihUKTpib29sZWFufSBmaWx0ZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGl0ZXJhdG9yRmlsdGVyID0gKGl0ZXJhdG9yLCBmaWx0ZXIpID0+IGNyZWF0ZUl0ZXJhdG9yKCgpID0+IHtcbiAgbGV0IHJlc1xuICBkbyB7XG4gICAgcmVzID0gaXRlcmF0b3IubmV4dCgpXG4gIH0gd2hpbGUgKCFyZXMuZG9uZSAmJiAhZmlsdGVyKHJlcy52YWx1ZSkpXG4gIHJldHVybiByZXNcbn0pXG5cbi8qKlxuICogQHRlbXBsYXRlIFQsTVxuICogQHBhcmFtIHtJdGVyYXRvcjxUPn0gaXRlcmF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVCk6TX0gZm1hcFxuICovXG5leHBvcnQgY29uc3QgaXRlcmF0b3JNYXAgPSAoaXRlcmF0b3IsIGZtYXApID0+IGNyZWF0ZUl0ZXJhdG9yKCgpID0+IHtcbiAgY29uc3QgeyBkb25lLCB2YWx1ZSB9ID0gaXRlcmF0b3IubmV4dCgpXG4gIHJldHVybiB7IGRvbmUsIHZhbHVlOiBkb25lID8gdW5kZWZpbmVkIDogZm1hcCh2YWx1ZSkgfVxufSlcbiJdLCJuYW1lcyI6WyJtYXBJdGVyYXRvciIsIml0ZXJhdG9yIiwiZiIsIlN5bWJvbCIsIm5leHQiLCJyIiwidmFsdWUiLCJkb25lIiwidW5kZWZpbmVkIiwiY3JlYXRlSXRlcmF0b3IiLCJpdGVyYXRvckZpbHRlciIsImZpbHRlciIsInJlcyIsIml0ZXJhdG9yTWFwIiwiZm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/logging.common.js":
/*!*********************************************!*\
  !*** ./node_modules/lib0/logging.common.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLUE: () => (/* binding */ BLUE),\n/* harmony export */   BOLD: () => (/* binding */ BOLD),\n/* harmony export */   GREEN: () => (/* binding */ GREEN),\n/* harmony export */   GREY: () => (/* binding */ GREY),\n/* harmony export */   ORANGE: () => (/* binding */ ORANGE),\n/* harmony export */   PURPLE: () => (/* binding */ PURPLE),\n/* harmony export */   RED: () => (/* binding */ RED),\n/* harmony export */   UNBOLD: () => (/* binding */ UNBOLD),\n/* harmony export */   UNCOLOR: () => (/* binding */ UNCOLOR),\n/* harmony export */   computeNoColorLoggingArgs: () => (/* binding */ computeNoColorLoggingArgs),\n/* harmony export */   createModuleLogger: () => (/* binding */ createModuleLogger)\n/* harmony export */ });\n/* harmony import */ var _symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./symbol.js */ \"(ssr)/./node_modules/lib0/symbol.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/lib0/time.js\");\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/lib0/function.js\");\n\n\n\n\nconst BOLD = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst UNBOLD = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst BLUE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst GREY = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst GREEN = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst RED = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst PURPLE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst ORANGE = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\nconst UNCOLOR = _symbol_js__WEBPACK_IMPORTED_MODULE_0__.create();\n/* c8 ignore start */ /**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */ const computeNoColorLoggingArgs = (args)=>{\n    const strBuilder = [];\n    const logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (arg.constructor === String || arg.constructor === Number) {\n            strBuilder.push(arg);\n        } else if (arg.constructor === Object) {\n            logArgs.push(JSON.stringify(arg));\n        }\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ const loggingColors = [\n    GREEN,\n    PURPLE,\n    ORANGE,\n    BLUE\n];\nlet nextColor = 0;\nlet lastLoggingTime = _time_js__WEBPACK_IMPORTED_MODULE_1__.getUnixTime();\n/* c8 ignore start */ /**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */ const createModuleLogger = (_print, moduleName)=>{\n    const color = loggingColors[nextColor];\n    const debugRegexVar = _environment_js__WEBPACK_IMPORTED_MODULE_2__.getVariable(\"log\");\n    const doLogging = debugRegexVar !== null && (debugRegexVar === \"*\" || debugRegexVar === \"true\" || new RegExp(debugRegexVar, \"gi\").test(moduleName));\n    nextColor = (nextColor + 1) % loggingColors.length;\n    moduleName += \": \";\n    return !doLogging ? _function_js__WEBPACK_IMPORTED_MODULE_3__.nop : (...args)=>{\n        const timeNow = _time_js__WEBPACK_IMPORTED_MODULE_1__.getUnixTime();\n        const timeDiff = timeNow - lastLoggingTime;\n        lastLoggingTime = timeNow;\n        _print(color, moduleName, UNCOLOR, ...args.map((arg)=>typeof arg === \"string\" || typeof arg === \"symbol\" ? arg : JSON.stringify(arg)), color, \" +\" + timeDiff + \"ms\");\n    };\n} /* c8 ignore stop */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9sb2dnaW5nLmNvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDSjtBQUNNO0FBQ0Y7QUFFOUIsTUFBTUksT0FBT0osOENBQWEsR0FBRTtBQUM1QixNQUFNTSxTQUFTTiw4Q0FBYSxHQUFFO0FBQzlCLE1BQU1PLE9BQU9QLDhDQUFhLEdBQUU7QUFDNUIsTUFBTVEsT0FBT1IsOENBQWEsR0FBRTtBQUM1QixNQUFNUyxRQUFRVCw4Q0FBYSxHQUFFO0FBQzdCLE1BQU1VLE1BQU1WLDhDQUFhLEdBQUU7QUFDM0IsTUFBTVcsU0FBU1gsOENBQWEsR0FBRTtBQUM5QixNQUFNWSxTQUFTWiw4Q0FBYSxHQUFFO0FBQzlCLE1BQU1hLFVBQVViLDhDQUFhLEdBQUU7QUFFdEMsbUJBQW1CLEdBQ25COzs7Q0FHQyxHQUNNLE1BQU1jLDRCQUE0QkMsQ0FBQUE7SUFDdkMsTUFBTUMsYUFBYSxFQUFFO0lBQ3JCLE1BQU1DLFVBQVUsRUFBRTtJQUNsQiwwREFBMEQ7SUFDMUQsSUFBSUMsSUFBSTtJQUNSLE1BQU9BLElBQUlILEtBQUtJLE1BQU0sRUFBRUQsSUFBSztRQUMzQixNQUFNRSxNQUFNTCxJQUFJLENBQUNHLEVBQUU7UUFDbkIsSUFBSUUsSUFBSUMsV0FBVyxLQUFLQyxVQUFVRixJQUFJQyxXQUFXLEtBQUtFLFFBQVE7WUFDNURQLFdBQVdRLElBQUksQ0FBQ0o7UUFDbEIsT0FBTyxJQUFJQSxJQUFJQyxXQUFXLEtBQUtJLFFBQVE7WUFDckNSLFFBQVFPLElBQUksQ0FBQ0UsS0FBS0MsU0FBUyxDQUFDUDtRQUM5QjtJQUNGO0lBQ0EsT0FBT0g7QUFDVCxFQUFDO0FBQ0Qsa0JBQWtCLEdBRWxCLE1BQU1XLGdCQUFnQjtJQUFDbkI7SUFBT0U7SUFBUUM7SUFBUUw7Q0FBSztBQUNuRCxJQUFJc0IsWUFBWTtBQUNoQixJQUFJQyxrQkFBa0I3QixpREFBZ0I7QUFFdEMsbUJBQW1CLEdBQ25COzs7O0NBSUMsR0FDTSxNQUFNK0IscUJBQXFCLENBQUNDLFFBQVFDO0lBQ3pDLE1BQU1DLFFBQVFQLGFBQWEsQ0FBQ0MsVUFBVTtJQUN0QyxNQUFNTyxnQkFBZ0JsQyx3REFBZSxDQUFDO0lBQ3RDLE1BQU1vQyxZQUFZRixrQkFBa0IsUUFDakNBLENBQUFBLGtCQUFrQixPQUFPQSxrQkFBa0IsVUFDMUMsSUFBSUcsT0FBT0gsZUFBZSxNQUFNSSxJQUFJLENBQUNOLFdBQVU7SUFDbkRMLFlBQVksQ0FBQ0EsWUFBWSxLQUFLRCxjQUFjVCxNQUFNO0lBQ2xEZSxjQUFjO0lBQ2QsT0FBTyxDQUFDSSxZQUNKbkMsNkNBQVEsR0FDUixDQUFDLEdBQUdZO1FBQ0YsTUFBTTJCLFVBQVV6QyxpREFBZ0I7UUFDaEMsTUFBTTBDLFdBQVdELFVBQVVaO1FBQzNCQSxrQkFBa0JZO1FBQ2xCVCxPQUNFRSxPQUNBRCxZQUNBckIsWUFDR0UsS0FBSzZCLEdBQUcsQ0FBQyxDQUFDeEIsTUFDWCxPQUFRQSxRQUFRLFlBQVksT0FBT0EsUUFBUSxXQUN2Q0EsTUFDQU0sS0FBS0MsU0FBUyxDQUFDUCxPQUVyQmUsT0FDQSxPQUFPUSxXQUFXO0lBRXRCO0FBQ04sRUFDQSxrQkFBa0IsSUFEakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvbG9nZ2luZy5jb21tb24uanM/MTlkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBzeW1ib2wgZnJvbSAnLi9zeW1ib2wuanMnXG5pbXBvcnQgKiBhcyB0aW1lIGZyb20gJy4vdGltZS5qcydcbmltcG9ydCAqIGFzIGVudiBmcm9tICcuL2Vudmlyb25tZW50LmpzJ1xuaW1wb3J0ICogYXMgZnVuYyBmcm9tICcuL2Z1bmN0aW9uLmpzJ1xuXG5leHBvcnQgY29uc3QgQk9MRCA9IHN5bWJvbC5jcmVhdGUoKVxuZXhwb3J0IGNvbnN0IFVOQk9MRCA9IHN5bWJvbC5jcmVhdGUoKVxuZXhwb3J0IGNvbnN0IEJMVUUgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBHUkVZID0gc3ltYm9sLmNyZWF0ZSgpXG5leHBvcnQgY29uc3QgR1JFRU4gPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBSRUQgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBQVVJQTEUgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBPUkFOR0UgPSBzeW1ib2wuY3JlYXRlKClcbmV4cG9ydCBjb25zdCBVTkNPTE9SID0gc3ltYm9sLmNyZWF0ZSgpXG5cbi8qIGM4IGlnbm9yZSBzdGFydCAqL1xuLyoqXG4gKiBAcGFyYW0ge0FycmF5PHN0cmluZ3xTeW1ib2x8T2JqZWN0fG51bWJlcj59IGFyZ3NcbiAqIEByZXR1cm4ge0FycmF5PHN0cmluZ3xvYmplY3R8bnVtYmVyPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbXB1dGVOb0NvbG9yTG9nZ2luZ0FyZ3MgPSBhcmdzID0+IHtcbiAgY29uc3Qgc3RyQnVpbGRlciA9IFtdXG4gIGNvbnN0IGxvZ0FyZ3MgPSBbXVxuICAvLyB0cnkgd2l0aCBmb3JtYXR0aW5nIHVudGlsIHdlIGZpbmQgc29tZXRoaW5nIHVuc3VwcG9ydGVkXG4gIGxldCBpID0gMFxuICBmb3IgKDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBhcmcgPSBhcmdzW2ldXG4gICAgaWYgKGFyZy5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nIHx8IGFyZy5jb25zdHJ1Y3RvciA9PT0gTnVtYmVyKSB7XG4gICAgICBzdHJCdWlsZGVyLnB1c2goYXJnKVxuICAgIH0gZWxzZSBpZiAoYXJnLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcbiAgICAgIGxvZ0FyZ3MucHVzaChKU09OLnN0cmluZ2lmeShhcmcpKVxuICAgIH1cbiAgfVxuICByZXR1cm4gbG9nQXJnc1xufVxuLyogYzggaWdub3JlIHN0b3AgKi9cblxuY29uc3QgbG9nZ2luZ0NvbG9ycyA9IFtHUkVFTiwgUFVSUExFLCBPUkFOR0UsIEJMVUVdXG5sZXQgbmV4dENvbG9yID0gMFxubGV0IGxhc3RMb2dnaW5nVGltZSA9IHRpbWUuZ2V0VW5peFRpbWUoKVxuXG4vKiBjOCBpZ25vcmUgc3RhcnQgKi9cbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbiguLi5hbnkpOnZvaWR9IF9wcmludFxuICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZU5hbWVcbiAqIEByZXR1cm4ge2Z1bmN0aW9uKC4uLmFueSk6dm9pZH1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU1vZHVsZUxvZ2dlciA9IChfcHJpbnQsIG1vZHVsZU5hbWUpID0+IHtcbiAgY29uc3QgY29sb3IgPSBsb2dnaW5nQ29sb3JzW25leHRDb2xvcl1cbiAgY29uc3QgZGVidWdSZWdleFZhciA9IGVudi5nZXRWYXJpYWJsZSgnbG9nJylcbiAgY29uc3QgZG9Mb2dnaW5nID0gZGVidWdSZWdleFZhciAhPT0gbnVsbCAmJlxuICAgIChkZWJ1Z1JlZ2V4VmFyID09PSAnKicgfHwgZGVidWdSZWdleFZhciA9PT0gJ3RydWUnIHx8XG4gICAgICBuZXcgUmVnRXhwKGRlYnVnUmVnZXhWYXIsICdnaScpLnRlc3QobW9kdWxlTmFtZSkpXG4gIG5leHRDb2xvciA9IChuZXh0Q29sb3IgKyAxKSAlIGxvZ2dpbmdDb2xvcnMubGVuZ3RoXG4gIG1vZHVsZU5hbWUgKz0gJzogJ1xuICByZXR1cm4gIWRvTG9nZ2luZ1xuICAgID8gZnVuYy5ub3BcbiAgICA6ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGNvbnN0IHRpbWVOb3cgPSB0aW1lLmdldFVuaXhUaW1lKClcbiAgICAgICAgY29uc3QgdGltZURpZmYgPSB0aW1lTm93IC0gbGFzdExvZ2dpbmdUaW1lXG4gICAgICAgIGxhc3RMb2dnaW5nVGltZSA9IHRpbWVOb3dcbiAgICAgICAgX3ByaW50KFxuICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgIG1vZHVsZU5hbWUsXG4gICAgICAgICAgVU5DT0xPUixcbiAgICAgICAgICAuLi5hcmdzLm1hcCgoYXJnKSA9PlxuICAgICAgICAgICAgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnKVxuICAgICAgICAgICAgICA/IGFyZ1xuICAgICAgICAgICAgICA6IEpTT04uc3RyaW5naWZ5KGFyZylcbiAgICAgICAgICApLFxuICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgICcgKycgKyB0aW1lRGlmZiArICdtcydcbiAgICAgICAgKVxuICAgICAgfVxufVxuLyogYzggaWdub3JlIHN0b3AgKi9cbiJdLCJuYW1lcyI6WyJzeW1ib2wiLCJ0aW1lIiwiZW52IiwiZnVuYyIsIkJPTEQiLCJjcmVhdGUiLCJVTkJPTEQiLCJCTFVFIiwiR1JFWSIsIkdSRUVOIiwiUkVEIiwiUFVSUExFIiwiT1JBTkdFIiwiVU5DT0xPUiIsImNvbXB1dGVOb0NvbG9yTG9nZ2luZ0FyZ3MiLCJhcmdzIiwic3RyQnVpbGRlciIsImxvZ0FyZ3MiLCJpIiwibGVuZ3RoIiwiYXJnIiwiY29uc3RydWN0b3IiLCJTdHJpbmciLCJOdW1iZXIiLCJwdXNoIiwiT2JqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZ2dpbmdDb2xvcnMiLCJuZXh0Q29sb3IiLCJsYXN0TG9nZ2luZ1RpbWUiLCJnZXRVbml4VGltZSIsImNyZWF0ZU1vZHVsZUxvZ2dlciIsIl9wcmludCIsIm1vZHVsZU5hbWUiLCJjb2xvciIsImRlYnVnUmVnZXhWYXIiLCJnZXRWYXJpYWJsZSIsImRvTG9nZ2luZyIsIlJlZ0V4cCIsInRlc3QiLCJub3AiLCJ0aW1lTm93IiwidGltZURpZmYiLCJtYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/logging.common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/logging.node.js":
/*!*******************************************!*\
  !*** ./node_modules/lib0/logging.node.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLUE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BLUE),\n/* harmony export */   BOLD: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BOLD),\n/* harmony export */   GREEN: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREEN),\n/* harmony export */   GREY: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREY),\n/* harmony export */   ORANGE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.ORANGE),\n/* harmony export */   PURPLE: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.PURPLE),\n/* harmony export */   RED: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.RED),\n/* harmony export */   UNBOLD: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNBOLD),\n/* harmony export */   UNCOLOR: () => (/* reexport safe */ _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNCOLOR),\n/* harmony export */   createModuleLogger: () => (/* binding */ createModuleLogger),\n/* harmony export */   createVConsole: () => (/* binding */ createVConsole),\n/* harmony export */   group: () => (/* binding */ group),\n/* harmony export */   groupCollapsed: () => (/* binding */ groupCollapsed),\n/* harmony export */   groupEnd: () => (/* binding */ groupEnd),\n/* harmony export */   print: () => (/* binding */ print),\n/* harmony export */   printCanvas: () => (/* binding */ printCanvas),\n/* harmony export */   printDom: () => (/* binding */ printDom),\n/* harmony export */   printError: () => (/* binding */ printError),\n/* harmony export */   printImg: () => (/* binding */ printImg),\n/* harmony export */   printImgBase64: () => (/* binding */ printImgBase64),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n/* harmony import */ var _environment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment.js */ \"(ssr)/./node_modules/lib0/environment.js\");\n/* harmony import */ var _logging_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logging.common.js */ \"(ssr)/./node_modules/lib0/logging.common.js\");\n/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */ \n\n\nconst _nodeStyleMap = {\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BOLD]: \"\\x1b[1m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNBOLD]: \"\\x1b[2m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.BLUE]: \"\\x1b[34m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREEN]: \"\\x1b[32m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.GREY]: \"\\x1b[37m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.RED]: \"\\x1b[31m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.PURPLE]: \"\\x1b[35m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.ORANGE]: \"\\x1b[38;5;208m\",\n    [_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.UNCOLOR]: \"\\x1b[0m\"\n};\n/* c8 ignore start */ /**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */ const computeNodeLoggingArgs = (args)=>{\n    const strBuilder = [];\n    const logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        // @ts-ignore\n        const style = _nodeStyleMap[arg];\n        if (style !== undefined) {\n            strBuilder.push(style);\n        } else {\n            if (arg.constructor === String || arg.constructor === Number) {\n                strBuilder.push(arg);\n            } else {\n                break;\n            }\n        }\n    }\n    if (i > 0) {\n        // create logArgs with what we have so far\n        strBuilder.push(\"\\x1b[0m\");\n        logArgs.push(strBuilder.join(\"\"));\n    }\n    // append the rest\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (!(arg instanceof Symbol)) {\n            logArgs.push(arg);\n        }\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ /* c8 ignore start */ const computeLoggingArgs = _environment_js__WEBPACK_IMPORTED_MODULE_1__.supportsColor ? computeNodeLoggingArgs : _logging_common_js__WEBPACK_IMPORTED_MODULE_0__.computeNoColorLoggingArgs;\n/* c8 ignore stop */ /**\n * @param {Array<string|Symbol|Object|number>} args\n */ const print = (...args)=>{\n    console.log(...computeLoggingArgs(args));\n};\n/* c8 ignore start */ /**\n * @param {Array<string|Symbol|Object|number>} args\n */ const warn = (...args)=>{\n    console.warn(...computeLoggingArgs(args));\n};\n/* c8 ignore stop */ /**\n * @param {Error} err\n */ /* c8 ignore start */ const printError = (err)=>{\n    console.error(err);\n};\n/* c8 ignore stop */ /**\n * @param {string} _url image location\n * @param {number} _height height of the image in pixel\n */ /* c8 ignore start */ const printImg = (_url, _height)=>{\n// console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n};\n/* c8 ignore stop */ /**\n * @param {string} base64\n * @param {number} height\n */ /* c8 ignore next 2 */ const printImgBase64 = (base64, height)=>printImg(`data:image/gif;base64,${base64}`, height);\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */ /* c8 ignore next 3 */ const group = (...args)=>{\n    console.group(...computeLoggingArgs(args));\n};\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */ /* c8 ignore next 3 */ const groupCollapsed = (...args)=>{\n    console.groupCollapsed(...computeLoggingArgs(args));\n};\n/* c8 ignore next 3 */ const groupEnd = ()=>{\n    console.groupEnd();\n};\n/**\n * @param {function():Node} _createNode\n */ /* c8 ignore next 2 */ const printDom = (_createNode)=>{};\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */ /* c8 ignore next 2 */ const printCanvas = (canvas, height)=>printImg(canvas.toDataURL(), height);\n/**\n * @param {Element} _dom\n */ /* c8 ignore next */ const createVConsole = (_dom)=>{};\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */ /* c8 ignore next */ const createModuleLogger = (moduleName)=>_logging_common_js__WEBPACK_IMPORTED_MODULE_0__.createModuleLogger(print, moduleName);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/logging.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/map.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/map.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   setIfUndefined: () => (/* binding */ setIfUndefined)\n/* harmony export */ });\n/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */ /**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */ const create = ()=>new Map();\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */ const copy = (m)=>{\n    const r = create();\n    m.forEach((v, k)=>{\n        r.set(k, v);\n    });\n    return r;\n};\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */ const setIfUndefined = (map, key, createT)=>{\n    let set = map.get(key);\n    if (set === undefined) {\n        map.set(key, set = createT());\n    }\n    return set;\n};\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */ const map = (m, f)=>{\n    const res = [];\n    for (const [key, value] of m){\n        res.push(f(value, key));\n    }\n    return res;\n};\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */ const any = (m, f)=>{\n    for (const [key, value] of m){\n        if (f(value, key)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */ const all = (m, f)=>{\n    for (const [key, value] of m){\n        if (!f(value, key)) {\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7Ozs7O0NBT0MsR0FDTSxNQUFNQSxTQUFTLElBQU0sSUFBSUMsTUFBSztBQUVyQzs7Ozs7OztDQU9DLEdBQ00sTUFBTUMsT0FBT0MsQ0FBQUE7SUFDbEIsTUFBTUMsSUFBSUo7SUFDVkcsRUFBRUUsT0FBTyxDQUFDLENBQUNDLEdBQUdDO1FBQVFILEVBQUVJLEdBQUcsQ0FBQ0QsR0FBR0Q7SUFBRztJQUNsQyxPQUFPRjtBQUNULEVBQUM7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxNQUFNSyxpQkFBaUIsQ0FBQ0MsS0FBS0MsS0FBS0M7SUFDdkMsSUFBSUosTUFBTUUsSUFBSUcsR0FBRyxDQUFDRjtJQUNsQixJQUFJSCxRQUFRTSxXQUFXO1FBQ3JCSixJQUFJRixHQUFHLENBQUNHLEtBQUtILE1BQU1JO0lBQ3JCO0lBQ0EsT0FBT0o7QUFDVCxFQUFDO0FBRUQ7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLE1BQU1FLE1BQU0sQ0FBQ1AsR0FBR1k7SUFDckIsTUFBTUMsTUFBTSxFQUFFO0lBQ2QsS0FBSyxNQUFNLENBQUNMLEtBQUtNLE1BQU0sSUFBSWQsRUFBRztRQUM1QmEsSUFBSUUsSUFBSSxDQUFDSCxFQUFFRSxPQUFPTjtJQUNwQjtJQUNBLE9BQU9LO0FBQ1QsRUFBQztBQUVEOzs7Ozs7Ozs7OztDQVdDLEdBQ00sTUFBTUcsTUFBTSxDQUFDaEIsR0FBR1k7SUFDckIsS0FBSyxNQUFNLENBQUNKLEtBQUtNLE1BQU0sSUFBSWQsRUFBRztRQUM1QixJQUFJWSxFQUFFRSxPQUFPTixNQUFNO1lBQ2pCLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7Ozs7Ozs7O0NBU0MsR0FDTSxNQUFNUyxNQUFNLENBQUNqQixHQUFHWTtJQUNyQixLQUFLLE1BQU0sQ0FBQ0osS0FBS00sTUFBTSxJQUFJZCxFQUFHO1FBQzVCLElBQUksQ0FBQ1ksRUFBRUUsT0FBT04sTUFBTTtZQUNsQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL21hcC5qcz85NDcyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBtb2R1bGUgdG8gd29yayB3aXRoIGtleS12YWx1ZSBzdG9yZXMuXG4gKlxuICogQG1vZHVsZSBtYXBcbiAqL1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgTWFwIGluc3RhbmNlLlxuICpcbiAqIEBmdW5jdGlvblxuICogQHJldHVybiB7TWFwPGFueSwgYW55Pn1cbiAqXG4gKiBAZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9ICgpID0+IG5ldyBNYXAoKVxuXG4vKipcbiAqIENvcHkgYSBNYXAgb2JqZWN0IGludG8gYSBmcmVzaCBNYXAgb2JqZWN0LlxuICpcbiAqIEBmdW5jdGlvblxuICogQHRlbXBsYXRlIEssVlxuICogQHBhcmFtIHtNYXA8SyxWPn0gbVxuICogQHJldHVybiB7TWFwPEssVj59XG4gKi9cbmV4cG9ydCBjb25zdCBjb3B5ID0gbSA9PiB7XG4gIGNvbnN0IHIgPSBjcmVhdGUoKVxuICBtLmZvckVhY2goKHYsIGspID0+IHsgci5zZXQoaywgdikgfSlcbiAgcmV0dXJuIHJcbn1cblxuLyoqXG4gKiBHZXQgbWFwIHByb3BlcnR5LiBDcmVhdGUgVCBpZiBwcm9wZXJ0eSBpcyB1bmRlZmluZWQgYW5kIHNldCBUIG9uIG1hcC5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgbGlzdGVuZXJzID0gbWFwLnNldElmVW5kZWZpbmVkKGV2ZW50cywgJ2V2ZW50TmFtZScsIHNldC5jcmVhdGUpXG4gKiBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKVxuICogYGBgXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUge01hcDxhbnksIGFueT59IE1BUFxuICogQHRlbXBsYXRlIHtNQVAgZXh0ZW5kcyBNYXA8YW55LGluZmVyIFY+ID8gZnVuY3Rpb24oKTpWIDogdW5rbm93bn0gQ0ZcbiAqIEBwYXJhbSB7TUFQfSBtYXBcbiAqIEBwYXJhbSB7TUFQIGV4dGVuZHMgTWFwPGluZmVyIEssYW55PiA/IEsgOiB1bmtub3dufSBrZXlcbiAqIEBwYXJhbSB7Q0Z9IGNyZWF0ZVRcbiAqIEByZXR1cm4ge1JldHVyblR5cGU8Q0Y+fVxuICovXG5leHBvcnQgY29uc3Qgc2V0SWZVbmRlZmluZWQgPSAobWFwLCBrZXksIGNyZWF0ZVQpID0+IHtcbiAgbGV0IHNldCA9IG1hcC5nZXQoa2V5KVxuICBpZiAoc2V0ID09PSB1bmRlZmluZWQpIHtcbiAgICBtYXAuc2V0KGtleSwgc2V0ID0gY3JlYXRlVCgpKVxuICB9XG4gIHJldHVybiBzZXRcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGFuIEFycmF5IGFuZCBwb3B1bGF0ZXMgaXQgd2l0aCB0aGUgY29udGVudCBvZiBhbGwga2V5LXZhbHVlIHBhaXJzIHVzaW5nIHRoZSBgZih2YWx1ZSwga2V5KWAgZnVuY3Rpb24uXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgS1xuICogQHRlbXBsYXRlIFZcbiAqIEB0ZW1wbGF0ZSBSXG4gKiBAcGFyYW0ge01hcDxLLFY+fSBtXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFYsSyk6Un0gZlxuICogQHJldHVybiB7QXJyYXk8Uj59XG4gKi9cbmV4cG9ydCBjb25zdCBtYXAgPSAobSwgZikgPT4ge1xuICBjb25zdCByZXMgPSBbXVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtKSB7XG4gICAgcmVzLnB1c2goZih2YWx1ZSwga2V5KSlcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbi8qKlxuICogVGVzdHMgd2hldGhlciBhbnkga2V5LXZhbHVlIHBhaXJzIHBhc3MgdGhlIHRlc3QgaW1wbGVtZW50ZWQgYnkgYGYodmFsdWUsIGtleSlgLlxuICpcbiAqIEB0b2RvIHNob3VsZCByZW5hbWUgdG8gc29tZSAtIHNpbWlsYXJseSB0byBBcnJheS5zb21lXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgS1xuICogQHRlbXBsYXRlIFZcbiAqIEBwYXJhbSB7TWFwPEssVj59IG1cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVixLKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgYW55ID0gKG0sIGYpID0+IHtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbSkge1xuICAgIGlmIChmKHZhbHVlLCBrZXkpKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyoqXG4gKiBUZXN0cyB3aGV0aGVyIGFsbCBrZXktdmFsdWUgcGFpcnMgcGFzcyB0aGUgdGVzdCBpbXBsZW1lbnRlZCBieSBgZih2YWx1ZSwga2V5KWAuXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAdGVtcGxhdGUgS1xuICogQHRlbXBsYXRlIFZcbiAqIEBwYXJhbSB7TWFwPEssVj59IG1cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVixLKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgYWxsID0gKG0sIGYpID0+IHtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbSkge1xuICAgIGlmICghZih2YWx1ZSwga2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlIiwiTWFwIiwiY29weSIsIm0iLCJyIiwiZm9yRWFjaCIsInYiLCJrIiwic2V0Iiwic2V0SWZVbmRlZmluZWQiLCJtYXAiLCJrZXkiLCJjcmVhdGVUIiwiZ2V0IiwidW5kZWZpbmVkIiwiZiIsInJlcyIsInZhbHVlIiwicHVzaCIsImFueSIsImFsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/math.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/math.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abs: () => (/* binding */ abs),\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   exp10: () => (/* binding */ exp10),\n/* harmony export */   floor: () => (/* binding */ floor),\n/* harmony export */   imul: () => (/* binding */ imul),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNegativeZero: () => (/* binding */ isNegativeZero),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   log10: () => (/* binding */ log10),\n/* harmony export */   log2: () => (/* binding */ log2),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   pow: () => (/* binding */ pow),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   sqrt: () => (/* binding */ sqrt)\n/* harmony export */ });\n/**\n * Common Math expressions.\n *\n * @module math\n */ const floor = Math.floor;\nconst ceil = Math.ceil;\nconst abs = Math.abs;\nconst imul = Math.imul;\nconst round = Math.round;\nconst log10 = Math.log10;\nconst log2 = Math.log2;\nconst log = Math.log;\nconst sqrt = Math.sqrt;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */ const add = (a, b)=>a + b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */ const min = (a, b)=>a < b ? a : b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */ const max = (a, b)=>a > b ? a : b;\nconst isNaN = Number.isNaN;\nconst pow = Math.pow;\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */ const exp10 = (exp)=>Math.pow(10, exp);\nconst sign = Math.sign;\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */ const isNegativeZero = (n)=>n !== 0 ? n < 0 : 1 / n < 0;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVNLE1BQU1BLFFBQVFDLEtBQUtELEtBQUs7QUFDeEIsTUFBTUUsT0FBT0QsS0FBS0MsSUFBSTtBQUN0QixNQUFNQyxNQUFNRixLQUFLRSxHQUFHO0FBQ3BCLE1BQU1DLE9BQU9ILEtBQUtHLElBQUk7QUFDdEIsTUFBTUMsUUFBUUosS0FBS0ksS0FBSztBQUN4QixNQUFNQyxRQUFRTCxLQUFLSyxLQUFLO0FBQ3hCLE1BQU1DLE9BQU9OLEtBQUtNLElBQUk7QUFDdEIsTUFBTUMsTUFBTVAsS0FBS08sR0FBRztBQUNwQixNQUFNQyxPQUFPUixLQUFLUSxJQUFJO0FBRTdCOzs7OztDQUtDLEdBQ00sTUFBTUMsTUFBTSxDQUFDQyxHQUFHQyxJQUFNRCxJQUFJQyxFQUFDO0FBRWxDOzs7OztDQUtDLEdBQ00sTUFBTUMsTUFBTSxDQUFDRixHQUFHQyxJQUFNRCxJQUFJQyxJQUFJRCxJQUFJQyxFQUFDO0FBRTFDOzs7OztDQUtDLEdBQ00sTUFBTUUsTUFBTSxDQUFDSCxHQUFHQyxJQUFNRCxJQUFJQyxJQUFJRCxJQUFJQyxFQUFDO0FBRW5DLE1BQU1HLFFBQVFDLE9BQU9ELEtBQUs7QUFFMUIsTUFBTUUsTUFBTWhCLEtBQUtnQixHQUFHO0FBQzNCOzs7OztDQUtDLEdBQ00sTUFBTUMsUUFBUUMsQ0FBQUEsTUFBT2xCLEtBQUtnQixHQUFHLENBQUMsSUFBSUUsS0FBSTtBQUV0QyxNQUFNQyxPQUFPbkIsS0FBS21CLElBQUk7QUFFN0I7OztDQUdDLEdBQ00sTUFBTUMsaUJBQWlCQyxDQUFBQSxJQUFLQSxNQUFNLElBQUlBLElBQUksSUFBSSxJQUFJQSxJQUFJLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvbWF0aC5qcz84MTc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29tbW9uIE1hdGggZXhwcmVzc2lvbnMuXG4gKlxuICogQG1vZHVsZSBtYXRoXG4gKi9cblxuZXhwb3J0IGNvbnN0IGZsb29yID0gTWF0aC5mbG9vclxuZXhwb3J0IGNvbnN0IGNlaWwgPSBNYXRoLmNlaWxcbmV4cG9ydCBjb25zdCBhYnMgPSBNYXRoLmFic1xuZXhwb3J0IGNvbnN0IGltdWwgPSBNYXRoLmltdWxcbmV4cG9ydCBjb25zdCByb3VuZCA9IE1hdGgucm91bmRcbmV4cG9ydCBjb25zdCBsb2cxMCA9IE1hdGgubG9nMTBcbmV4cG9ydCBjb25zdCBsb2cyID0gTWF0aC5sb2cyXG5leHBvcnQgY29uc3QgbG9nID0gTWF0aC5sb2dcbmV4cG9ydCBjb25zdCBzcXJ0ID0gTWF0aC5zcXJ0XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge251bWJlcn0gYVxuICogQHBhcmFtIHtudW1iZXJ9IGJcbiAqIEByZXR1cm4ge251bWJlcn0gVGhlIHN1bSBvZiBhIGFuZCBiXG4gKi9cbmV4cG9ydCBjb25zdCBhZGQgPSAoYSwgYikgPT4gYSArIGJcblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBhXG4gKiBAcGFyYW0ge251bWJlcn0gYlxuICogQHJldHVybiB7bnVtYmVyfSBUaGUgc21hbGxlciBlbGVtZW50IG9mIGEgYW5kIGJcbiAqL1xuZXhwb3J0IGNvbnN0IG1pbiA9IChhLCBiKSA9PiBhIDwgYiA/IGEgOiBiXG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge251bWJlcn0gYVxuICogQHBhcmFtIHtudW1iZXJ9IGJcbiAqIEByZXR1cm4ge251bWJlcn0gVGhlIGJpZ2dlciBlbGVtZW50IG9mIGEgYW5kIGJcbiAqL1xuZXhwb3J0IGNvbnN0IG1heCA9IChhLCBiKSA9PiBhID4gYiA/IGEgOiBiXG5cbmV4cG9ydCBjb25zdCBpc05hTiA9IE51bWJlci5pc05hTlxuXG5leHBvcnQgY29uc3QgcG93ID0gTWF0aC5wb3dcbi8qKlxuICogQmFzZSAxMCBleHBvbmVudGlhbCBmdW5jdGlvbi4gUmV0dXJucyB0aGUgdmFsdWUgb2YgMTAgcmFpc2VkIHRvIHRoZSBwb3dlciBvZiBwb3cuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGV4cFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgZXhwMTAgPSBleHAgPT4gTWF0aC5wb3coMTAsIGV4cClcblxuZXhwb3J0IGNvbnN0IHNpZ24gPSBNYXRoLnNpZ25cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gblxuICogQHJldHVybiB7Ym9vbGVhbn0gV2V0aGVyIG4gaXMgbmVnYXRpdmUuIFRoaXMgZnVuY3Rpb24gYWxzbyBkaWZmZXJlbnRpYXRlcyBiZXR3ZWVuIC0wIGFuZCArMFxuICovXG5leHBvcnQgY29uc3QgaXNOZWdhdGl2ZVplcm8gPSBuID0+IG4gIT09IDAgPyBuIDwgMCA6IDEgLyBuIDwgMFxuIl0sIm5hbWVzIjpbImZsb29yIiwiTWF0aCIsImNlaWwiLCJhYnMiLCJpbXVsIiwicm91bmQiLCJsb2cxMCIsImxvZzIiLCJsb2ciLCJzcXJ0IiwiYWRkIiwiYSIsImIiLCJtaW4iLCJtYXgiLCJpc05hTiIsIk51bWJlciIsInBvdyIsImV4cDEwIiwiZXhwIiwic2lnbiIsImlzTmVnYXRpdmVaZXJvIiwibiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/metric.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/metric.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   atto: () => (/* binding */ atto),\n/* harmony export */   centi: () => (/* binding */ centi),\n/* harmony export */   deca: () => (/* binding */ deca),\n/* harmony export */   deci: () => (/* binding */ deci),\n/* harmony export */   exa: () => (/* binding */ exa),\n/* harmony export */   femto: () => (/* binding */ femto),\n/* harmony export */   giga: () => (/* binding */ giga),\n/* harmony export */   hecto: () => (/* binding */ hecto),\n/* harmony export */   kilo: () => (/* binding */ kilo),\n/* harmony export */   mega: () => (/* binding */ mega),\n/* harmony export */   micro: () => (/* binding */ micro),\n/* harmony export */   milli: () => (/* binding */ milli),\n/* harmony export */   nano: () => (/* binding */ nano),\n/* harmony export */   peta: () => (/* binding */ peta),\n/* harmony export */   pico: () => (/* binding */ pico),\n/* harmony export */   prefix: () => (/* binding */ prefix),\n/* harmony export */   tera: () => (/* binding */ tera),\n/* harmony export */   yocto: () => (/* binding */ yocto),\n/* harmony export */   yotta: () => (/* binding */ yotta),\n/* harmony export */   zepto: () => (/* binding */ zepto),\n/* harmony export */   zetta: () => (/* binding */ zetta)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/**\n * Utility module to convert metric values.\n *\n * @module metric\n */ \nconst yotta = 1e24;\nconst zetta = 1e21;\nconst exa = 1e18;\nconst peta = 1e15;\nconst tera = 1e12;\nconst giga = 1e9;\nconst mega = 1e6;\nconst kilo = 1e3;\nconst hecto = 1e2;\nconst deca = 10;\nconst deci = 0.1;\nconst centi = 0.01;\nconst milli = 1e-3;\nconst micro = 1e-6;\nconst nano = 1e-9;\nconst pico = 1e-12;\nconst femto = 1e-15;\nconst atto = 1e-18;\nconst zepto = 1e-21;\nconst yocto = 1e-24;\nconst prefixUp = [\n    \"\",\n    \"k\",\n    \"M\",\n    \"G\",\n    \"T\",\n    \"P\",\n    \"E\",\n    \"Z\",\n    \"Y\"\n];\nconst prefixDown = [\n    \"\",\n    \"m\",\n    \"μ\",\n    \"n\",\n    \"p\",\n    \"f\",\n    \"a\",\n    \"z\",\n    \"y\"\n];\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */ const prefix = (n, baseMultiplier = 0)=>{\n    const nPow = n === 0 ? 0 : _math_js__WEBPACK_IMPORTED_MODULE_0__.log10(n);\n    let mult = 0;\n    while(nPow < mult * 3 && baseMultiplier > -8){\n        baseMultiplier--;\n        mult--;\n    }\n    while(nPow >= 3 + mult * 3 && baseMultiplier < 8){\n        baseMultiplier++;\n        mult++;\n    }\n    const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n    return {\n        n: _math_js__WEBPACK_IMPORTED_MODULE_0__.round((mult > 0 ? n / _math_js__WEBPACK_IMPORTED_MODULE_0__.exp10(mult * 3) : n * _math_js__WEBPACK_IMPORTED_MODULE_0__.exp10(mult * -3)) * 1e12) / 1e12,\n        prefix\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tZXRyaWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFZ0M7QUFFMUIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxNQUFNLEtBQUk7QUFDaEIsTUFBTUMsT0FBTyxLQUFJO0FBQ2pCLE1BQU1DLE9BQU8sS0FBSTtBQUNqQixNQUFNQyxPQUFPLElBQUc7QUFDaEIsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLE9BQU8sSUFBRztBQUNoQixNQUFNQyxRQUFRLElBQUc7QUFDakIsTUFBTUMsT0FBTyxHQUFFO0FBQ2YsTUFBTUMsT0FBTyxJQUFHO0FBQ2hCLE1BQU1DLFFBQVEsS0FBSTtBQUNsQixNQUFNQyxRQUFRLEtBQUk7QUFDbEIsTUFBTUMsUUFBUSxLQUFJO0FBQ2xCLE1BQU1DLE9BQU8sS0FBSTtBQUNqQixNQUFNQyxPQUFPLE1BQUs7QUFDbEIsTUFBTUMsUUFBUSxNQUFLO0FBQ25CLE1BQU1DLE9BQU8sTUFBSztBQUNsQixNQUFNQyxRQUFRLE1BQUs7QUFDbkIsTUFBTUMsUUFBUSxNQUFLO0FBRTFCLE1BQU1DLFdBQVc7SUFBQztJQUFJO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7Q0FBSTtBQUM3RCxNQUFNQyxhQUFhO0lBQUM7SUFBSTtJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0NBQUk7QUFFL0Q7Ozs7OztDQU1DLEdBQ00sTUFBTUMsU0FBUyxDQUFDQyxHQUFHQyxpQkFBaUIsQ0FBQztJQUMxQyxNQUFNQyxPQUFPRixNQUFNLElBQUksSUFBSXhCLDJDQUFVLENBQUN3QjtJQUN0QyxJQUFJSSxPQUFPO0lBQ1gsTUFBT0YsT0FBT0UsT0FBTyxLQUFLSCxpQkFBaUIsQ0FBQyxFQUFHO1FBQzdDQTtRQUNBRztJQUNGO0lBQ0EsTUFBT0YsUUFBUSxJQUFJRSxPQUFPLEtBQUtILGlCQUFpQixFQUFHO1FBQ2pEQTtRQUNBRztJQUNGO0lBQ0EsTUFBTUwsU0FBU0UsaUJBQWlCLElBQUlILFVBQVUsQ0FBQyxDQUFDRyxlQUFlLEdBQUdKLFFBQVEsQ0FBQ0ksZUFBZTtJQUMxRixPQUFPO1FBQ0xELEdBQUd4QiwyQ0FBVSxDQUFDLENBQUM0QixPQUFPLElBQUlKLElBQUl4QiwyQ0FBVSxDQUFDNEIsT0FBTyxLQUFLSixJQUFJeEIsMkNBQVUsQ0FBQzRCLE9BQU8sQ0FBQyxFQUFDLElBQUssUUFBUTtRQUMxRkw7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvbWV0cmljLmpzPzQ5OTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byBjb252ZXJ0IG1ldHJpYyB2YWx1ZXMuXG4gKlxuICogQG1vZHVsZSBtZXRyaWNcbiAqL1xuXG5pbXBvcnQgKiBhcyBtYXRoIGZyb20gJy4vbWF0aC5qcydcblxuZXhwb3J0IGNvbnN0IHlvdHRhID0gMWUyNFxuZXhwb3J0IGNvbnN0IHpldHRhID0gMWUyMVxuZXhwb3J0IGNvbnN0IGV4YSA9IDFlMThcbmV4cG9ydCBjb25zdCBwZXRhID0gMWUxNVxuZXhwb3J0IGNvbnN0IHRlcmEgPSAxZTEyXG5leHBvcnQgY29uc3QgZ2lnYSA9IDFlOVxuZXhwb3J0IGNvbnN0IG1lZ2EgPSAxZTZcbmV4cG9ydCBjb25zdCBraWxvID0gMWUzXG5leHBvcnQgY29uc3QgaGVjdG8gPSAxZTJcbmV4cG9ydCBjb25zdCBkZWNhID0gMTBcbmV4cG9ydCBjb25zdCBkZWNpID0gMC4xXG5leHBvcnQgY29uc3QgY2VudGkgPSAwLjAxXG5leHBvcnQgY29uc3QgbWlsbGkgPSAxZS0zXG5leHBvcnQgY29uc3QgbWljcm8gPSAxZS02XG5leHBvcnQgY29uc3QgbmFubyA9IDFlLTlcbmV4cG9ydCBjb25zdCBwaWNvID0gMWUtMTJcbmV4cG9ydCBjb25zdCBmZW10byA9IDFlLTE1XG5leHBvcnQgY29uc3QgYXR0byA9IDFlLTE4XG5leHBvcnQgY29uc3QgemVwdG8gPSAxZS0yMVxuZXhwb3J0IGNvbnN0IHlvY3RvID0gMWUtMjRcblxuY29uc3QgcHJlZml4VXAgPSBbJycsICdrJywgJ00nLCAnRycsICdUJywgJ1AnLCAnRScsICdaJywgJ1knXVxuY29uc3QgcHJlZml4RG93biA9IFsnJywgJ20nLCAnzrwnLCAnbicsICdwJywgJ2YnLCAnYScsICd6JywgJ3knXVxuXG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgbWV0cmljIHByZWZpeCBmb3IgYSBudW1iZXIuIEFzc3VtZXMgRS5nLiBgcHJlZml4KDEwMDApID0geyBuOiAxLCBwcmVmaXg6ICdrJyB9YFxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBuXG4gKiBAcGFyYW0ge251bWJlcn0gW2Jhc2VNdWx0aXBsaWVyXSBNdWx0aXBsaWVyIG9mIHRoZSBiYXNlICgxMF4oMypiYXNlTXVsdGlwbGllcikpLiBFLmcuIGBjb252ZXJ0KHRpbWUsIC0zKWAgaWYgdGltZSBpcyBhbHJlYWR5IGluIG1pbGxpIHNlY29uZHNcbiAqIEByZXR1cm4ge3tuOm51bWJlcixwcmVmaXg6c3RyaW5nfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHByZWZpeCA9IChuLCBiYXNlTXVsdGlwbGllciA9IDApID0+IHtcbiAgY29uc3QgblBvdyA9IG4gPT09IDAgPyAwIDogbWF0aC5sb2cxMChuKVxuICBsZXQgbXVsdCA9IDBcbiAgd2hpbGUgKG5Qb3cgPCBtdWx0ICogMyAmJiBiYXNlTXVsdGlwbGllciA+IC04KSB7XG4gICAgYmFzZU11bHRpcGxpZXItLVxuICAgIG11bHQtLVxuICB9XG4gIHdoaWxlIChuUG93ID49IDMgKyBtdWx0ICogMyAmJiBiYXNlTXVsdGlwbGllciA8IDgpIHtcbiAgICBiYXNlTXVsdGlwbGllcisrXG4gICAgbXVsdCsrXG4gIH1cbiAgY29uc3QgcHJlZml4ID0gYmFzZU11bHRpcGxpZXIgPCAwID8gcHJlZml4RG93blstYmFzZU11bHRpcGxpZXJdIDogcHJlZml4VXBbYmFzZU11bHRpcGxpZXJdXG4gIHJldHVybiB7XG4gICAgbjogbWF0aC5yb3VuZCgobXVsdCA+IDAgPyBuIC8gbWF0aC5leHAxMChtdWx0ICogMykgOiBuICogbWF0aC5leHAxMChtdWx0ICogLTMpKSAqIDFlMTIpIC8gMWUxMixcbiAgICBwcmVmaXhcbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1hdGgiLCJ5b3R0YSIsInpldHRhIiwiZXhhIiwicGV0YSIsInRlcmEiLCJnaWdhIiwibWVnYSIsImtpbG8iLCJoZWN0byIsImRlY2EiLCJkZWNpIiwiY2VudGkiLCJtaWxsaSIsIm1pY3JvIiwibmFubyIsInBpY28iLCJmZW10byIsImF0dG8iLCJ6ZXB0byIsInlvY3RvIiwicHJlZml4VXAiLCJwcmVmaXhEb3duIiwicHJlZml4IiwibiIsImJhc2VNdWx0aXBsaWVyIiwiblBvdyIsImxvZzEwIiwibXVsdCIsInJvdW5kIiwiZXhwMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/metric.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/mutex.js":
/*!************************************!*\
  !*** ./node_modules/lib0/mutex.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMutex: () => (/* binding */ createMutex)\n/* harmony export */ });\n/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */ /**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */ /**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */ const createMutex = ()=>{\n    let token = true;\n    return (f, g)=>{\n        if (token) {\n            token = false;\n            try {\n                f();\n            } finally{\n                token = true;\n            }\n        } else if (g !== undefined) {\n            g();\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9tdXRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7O0NBSUMsR0FFRDs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxNQUFNQSxjQUFjO0lBQ3pCLElBQUlDLFFBQVE7SUFDWixPQUFPLENBQUNDLEdBQUdDO1FBQ1QsSUFBSUYsT0FBTztZQUNUQSxRQUFRO1lBQ1IsSUFBSTtnQkFDRkM7WUFDRixTQUFVO2dCQUNSRCxRQUFRO1lBQ1Y7UUFDRixPQUFPLElBQUlFLE1BQU1DLFdBQVc7WUFDMUJEO1FBQ0Y7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvbXV0ZXguanM/YzBjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE11dHVhbCBleGNsdWRlIGZvciBKYXZhU2NyaXB0LlxuICpcbiAqIEBtb2R1bGUgbXV0ZXhcbiAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBtdXRleFxuICogQHBhcmFtIHtmdW5jdGlvbigpOnZvaWR9IGNiIE9ubHkgZXhlY3V0ZWQgd2hlbiB0aGlzIG11dGV4IGlzIG5vdCBpbiB0aGUgY3VycmVudCBzdGFja1xuICogQHBhcmFtIHtmdW5jdGlvbigpOnZvaWR9IFtlbHNlQ2JdIEV4ZWN1dGVkIHdoZW4gdGhpcyBtdXRleCBpcyBpbiB0aGUgY3VycmVudCBzdGFja1xuICovXG5cbi8qKlxuICogQ3JlYXRlcyBhIG11dHVhbCBleGNsdWRlIGZ1bmN0aW9uIHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0eTpcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgbXV0ZXggPSBjcmVhdGVNdXRleCgpXG4gKiBtdXRleCgoKSA9PiB7XG4gKiAgIC8vIFRoaXMgZnVuY3Rpb24gaXMgaW1tZWRpYXRlbHkgZXhlY3V0ZWRcbiAqICAgbXV0ZXgoKCkgPT4ge1xuICogICAgIC8vIFRoaXMgZnVuY3Rpb24gaXMgbm90IGV4ZWN1dGVkLCBhcyB0aGUgbXV0ZXggaXMgYWxyZWFkeSBhY3RpdmUuXG4gKiAgIH0pXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHJldHVybiB7bXV0ZXh9IEEgbXV0dWFsIGV4Y2x1ZGUgZnVuY3Rpb25cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU11dGV4ID0gKCkgPT4ge1xuICBsZXQgdG9rZW4gPSB0cnVlXG4gIHJldHVybiAoZiwgZykgPT4ge1xuICAgIGlmICh0b2tlbikge1xuICAgICAgdG9rZW4gPSBmYWxzZVxuICAgICAgdHJ5IHtcbiAgICAgICAgZigpXG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0b2tlbiA9IHRydWVcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZygpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlTXV0ZXgiLCJ0b2tlbiIsImYiLCJnIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/mutex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/number.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/number.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HIGHEST_INT32: () => (/* binding */ HIGHEST_INT32),\n/* harmony export */   HIGHEST_UINT32: () => (/* binding */ HIGHEST_UINT32),\n/* harmony export */   LOWEST_INT32: () => (/* binding */ LOWEST_INT32),\n/* harmony export */   MAX_SAFE_INTEGER: () => (/* binding */ MAX_SAFE_INTEGER),\n/* harmony export */   MIN_SAFE_INTEGER: () => (/* binding */ MIN_SAFE_INTEGER),\n/* harmony export */   countBits: () => (/* binding */ countBits),\n/* harmony export */   isInteger: () => (/* binding */ isInteger),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   parseInt: () => (/* binding */ parseInt)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */ \n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nconst MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\nconst LOWEST_INT32 = 1 << 31;\nconst HIGHEST_INT32 = _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS31;\nconst HIGHEST_UINT32 = _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS32;\n/* c8 ignore next */ const isInteger = Number.isInteger || ((num)=>typeof num === \"number\" && isFinite(num) && _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(num) === num);\nconst isNaN = Number.isNaN;\nconst parseInt = Number.parseInt;\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */ const countBits = (n)=>{\n    n &= _binary_js__WEBPACK_IMPORTED_MODULE_0__.BITS32;\n    let count = 0;\n    while(n){\n        n &= n - 1;\n        count++;\n    }\n    return count;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRWdDO0FBQ0k7QUFFOUIsTUFBTUUsbUJBQW1CQyxPQUFPRCxnQkFBZ0I7QUFDaEQsTUFBTUUsbUJBQW1CRCxPQUFPQyxnQkFBZ0I7QUFFaEQsTUFBTUMsZUFBZSxLQUFLLEdBQUU7QUFDNUIsTUFBTUMsZ0JBQWdCTCw4Q0FBYTtBQUNuQyxNQUFNTyxpQkFBaUJQLDhDQUFhO0FBRTNDLGtCQUFrQixHQUNYLE1BQU1TLFlBQVlQLE9BQU9PLFNBQVMsSUFBS0MsQ0FBQUEsQ0FBQUEsTUFBTyxPQUFPQSxRQUFRLFlBQVlDLFNBQVNELFFBQVFYLDJDQUFVLENBQUNXLFNBQVNBLEdBQUUsRUFBRTtBQUNsSCxNQUFNRyxRQUFRWCxPQUFPVyxLQUFLO0FBQzFCLE1BQU1DLFdBQVdaLE9BQU9ZLFFBQVE7QUFFdkM7Ozs7OztDQU1DLEdBQ00sTUFBTUMsWUFBWUMsQ0FBQUE7SUFDdkJBLEtBQUtoQiw4Q0FBYTtJQUNsQixJQUFJaUIsUUFBUTtJQUNaLE1BQU9ELEVBQUc7UUFDUkEsS0FBTUEsSUFBSTtRQUNWQztJQUNGO0lBQ0EsT0FBT0E7QUFDVCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL251bWJlci5qcz80MWMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBoZWxwZXJzIGZvciB3b3JraW5nIHdpdGggbnVtYmVycy5cbiAqXG4gKiBAbW9kdWxlIG51bWJlclxuICovXG5cbmltcG9ydCAqIGFzIG1hdGggZnJvbSAnLi9tYXRoLmpzJ1xuaW1wb3J0ICogYXMgYmluYXJ5IGZyb20gJy4vYmluYXJ5LmpzJ1xuXG5leHBvcnQgY29uc3QgTUFYX1NBRkVfSU5URUdFUiA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG5leHBvcnQgY29uc3QgTUlOX1NBRkVfSU5URUdFUiA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG5cbmV4cG9ydCBjb25zdCBMT1dFU1RfSU5UMzIgPSAxIDw8IDMxXG5leHBvcnQgY29uc3QgSElHSEVTVF9JTlQzMiA9IGJpbmFyeS5CSVRTMzFcbmV4cG9ydCBjb25zdCBISUdIRVNUX1VJTlQzMiA9IGJpbmFyeS5CSVRTMzJcblxuLyogYzggaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBpc0ludGVnZXIgPSBOdW1iZXIuaXNJbnRlZ2VyIHx8IChudW0gPT4gdHlwZW9mIG51bSA9PT0gJ251bWJlcicgJiYgaXNGaW5pdGUobnVtKSAmJiBtYXRoLmZsb29yKG51bSkgPT09IG51bSlcbmV4cG9ydCBjb25zdCBpc05hTiA9IE51bWJlci5pc05hTlxuZXhwb3J0IGNvbnN0IHBhcnNlSW50ID0gTnVtYmVyLnBhcnNlSW50XG5cbi8qKlxuICogQ291bnQgdGhlIG51bWJlciBvZiBcIjFcIiBiaXRzIGluIGFuIHVuc2lnbmVkIDMyYml0IG51bWJlci5cbiAqXG4gKiBTdXBlciBmdW4gYml0Y291bnQgYWxnb3JpdGhtIGJ5IEJyaWFuIEtlcm5pZ2hhbi5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gblxuICovXG5leHBvcnQgY29uc3QgY291bnRCaXRzID0gbiA9PiB7XG4gIG4gJj0gYmluYXJ5LkJJVFMzMlxuICBsZXQgY291bnQgPSAwXG4gIHdoaWxlIChuKSB7XG4gICAgbiAmPSAobiAtIDEpXG4gICAgY291bnQrK1xuICB9XG4gIHJldHVybiBjb3VudFxufVxuIl0sIm5hbWVzIjpbIm1hdGgiLCJiaW5hcnkiLCJNQVhfU0FGRV9JTlRFR0VSIiwiTnVtYmVyIiwiTUlOX1NBRkVfSU5URUdFUiIsIkxPV0VTVF9JTlQzMiIsIkhJR0hFU1RfSU5UMzIiLCJCSVRTMzEiLCJISUdIRVNUX1VJTlQzMiIsIkJJVFMzMiIsImlzSW50ZWdlciIsIm51bSIsImlzRmluaXRlIiwiZmxvb3IiLCJpc05hTiIsInBhcnNlSW50IiwiY291bnRCaXRzIiwibiIsImNvdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/object.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/object.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   equalFlat: () => (/* binding */ equalFlat),\n/* harmony export */   every: () => (/* binding */ every),\n/* harmony export */   forEach: () => (/* binding */ forEach),\n/* harmony export */   hasProperty: () => (/* binding */ hasProperty),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   keys: () => (/* binding */ keys),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   some: () => (/* binding */ some)\n/* harmony export */ });\n/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */ /**\n * @return {Object<string,any>} obj\n */ const create = ()=>Object.create(null);\n/**\n * Object.assign\n */ const assign = Object.assign;\n/**\n * @param {Object<string,any>} obj\n */ const keys = Object.keys;\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */ const forEach = (obj, f)=>{\n    for(const key in obj){\n        f(obj[key], key);\n    }\n};\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */ const map = (obj, f)=>{\n    const results = [];\n    for(const key in obj){\n        results.push(f(obj[key], key));\n    }\n    return results;\n};\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */ const length = (obj)=>keys(obj).length;\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */ const some = (obj, f)=>{\n    for(const key in obj){\n        if (f(obj[key], key)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * @param {Object|undefined} obj\n */ const isEmpty = (obj)=>{\n    // eslint-disable-next-line\n    for(const _k in obj){\n        return false;\n    }\n    return true;\n};\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */ const every = (obj, f)=>{\n    for(const key in obj){\n        if (!f(obj[key], key)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */ const hasProperty = (obj, key)=>Object.prototype.hasOwnProperty.call(obj, key);\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */ const equalFlat = (a, b)=>a === b || length(a) === length(b) && every(a, (val, key)=>(val !== undefined || hasProperty(b, key)) && b[key] === val);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7O0NBRUMsR0FDTSxNQUFNQSxTQUFTLElBQU1DLE9BQU9ELE1BQU0sQ0FBQyxNQUFLO0FBRS9DOztDQUVDLEdBQ00sTUFBTUUsU0FBU0QsT0FBT0MsTUFBTTtBQUVuQzs7Q0FFQyxHQUNNLE1BQU1DLE9BQU9GLE9BQU9FLElBQUk7QUFFL0I7Ozs7Q0FJQyxHQUNNLE1BQU1DLFVBQVUsQ0FBQ0MsS0FBS0M7SUFDM0IsSUFBSyxNQUFNQyxPQUFPRixJQUFLO1FBQ3JCQyxFQUFFRCxHQUFHLENBQUNFLElBQUksRUFBRUE7SUFDZDtBQUNGLEVBQUM7QUFFRDs7Ozs7OztDQU9DLEdBQ00sTUFBTUMsTUFBTSxDQUFDSCxLQUFLQztJQUN2QixNQUFNRyxVQUFVLEVBQUU7SUFDbEIsSUFBSyxNQUFNRixPQUFPRixJQUFLO1FBQ3JCSSxRQUFRQyxJQUFJLENBQUNKLEVBQUVELEdBQUcsQ0FBQ0UsSUFBSSxFQUFFQTtJQUMzQjtJQUNBLE9BQU9FO0FBQ1QsRUFBQztBQUVEOzs7Q0FHQyxHQUNNLE1BQU1FLFNBQVNOLENBQUFBLE1BQU9GLEtBQUtFLEtBQUtNLE1BQU07QUFFN0M7Ozs7Q0FJQyxHQUNNLE1BQU1DLE9BQU8sQ0FBQ1AsS0FBS0M7SUFDeEIsSUFBSyxNQUFNQyxPQUFPRixJQUFLO1FBQ3JCLElBQUlDLEVBQUVELEdBQUcsQ0FBQ0UsSUFBSSxFQUFFQSxNQUFNO1lBQ3BCLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7Q0FFQyxHQUNNLE1BQU1NLFVBQVVSLENBQUFBO0lBQ3JCLDJCQUEyQjtJQUMzQixJQUFLLE1BQU1TLE1BQU1ULElBQUs7UUFDcEIsT0FBTztJQUNUO0lBQ0EsT0FBTztBQUNULEVBQUM7QUFFRDs7OztDQUlDLEdBQ00sTUFBTVUsUUFBUSxDQUFDVixLQUFLQztJQUN6QixJQUFLLE1BQU1DLE9BQU9GLElBQUs7UUFDckIsSUFBSSxDQUFDQyxFQUFFRCxHQUFHLENBQUNFLElBQUksRUFBRUEsTUFBTTtZQUNyQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVCxFQUFDO0FBRUQ7Ozs7OztDQU1DLEdBQ00sTUFBTVMsY0FBYyxDQUFDWCxLQUFLRSxNQUFRTixPQUFPZ0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ2QsS0FBS0UsS0FBSTtBQUV2Rjs7OztDQUlDLEdBQ00sTUFBTWEsWUFBWSxDQUFDQyxHQUFHQyxJQUFNRCxNQUFNQyxLQUFNWCxPQUFPVSxPQUFPVixPQUFPVyxNQUFNUCxNQUFNTSxHQUFHLENBQUNFLEtBQUtoQixNQUFRLENBQUNnQixRQUFRQyxhQUFhUixZQUFZTSxHQUFHZixJQUFHLEtBQU1lLENBQUMsQ0FBQ2YsSUFBSSxLQUFLZ0IsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlLWpvdXJuYWwvLi9ub2RlX21vZHVsZXMvbGliMC9vYmplY3QuanM/YWE0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciB3b3JraW5nIHdpdGggRWNtYVNjcmlwdCBvYmplY3RzLlxuICpcbiAqIEBtb2R1bGUgb2JqZWN0XG4gKi9cblxuLyoqXG4gKiBAcmV0dXJuIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKCkgPT4gT2JqZWN0LmNyZWF0ZShudWxsKVxuXG4vKipcbiAqIE9iamVjdC5hc3NpZ25cbiAqL1xuZXhwb3J0IGNvbnN0IGFzc2lnbiA9IE9iamVjdC5hc3NpZ25cblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsYW55Pn0gb2JqXG4gKi9cbmV4cG9ydCBjb25zdCBrZXlzID0gT2JqZWN0LmtleXNcblxuLyoqXG4gKiBAdGVtcGxhdGUgVlxuICogQHBhcmFtIHt7W2s6c3RyaW5nXTpWfX0gb2JqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFYsc3RyaW5nKTphbnl9IGZcbiAqL1xuZXhwb3J0IGNvbnN0IGZvckVhY2ggPSAob2JqLCBmKSA9PiB7XG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIGYob2JqW2tleV0sIGtleSlcbiAgfVxufVxuXG4vKipcbiAqIEB0b2RvIGltcGxlbWVudCBtYXBUb0FycmF5ICYgbWFwXG4gKlxuICogQHRlbXBsYXRlIFJcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZyxhbnk+fSBvYmpcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oYW55LHN0cmluZyk6Un0gZlxuICogQHJldHVybiB7QXJyYXk8Uj59XG4gKi9cbmV4cG9ydCBjb25zdCBtYXAgPSAob2JqLCBmKSA9PiB7XG4gIGNvbnN0IHJlc3VsdHMgPSBbXVxuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICByZXN1bHRzLnB1c2goZihvYmpba2V5XSwga2V5KSlcbiAgfVxuICByZXR1cm4gcmVzdWx0c1xufVxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZyxhbnk+fSBvYmpcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGxlbmd0aCA9IG9iaiA9PiBrZXlzKG9iaikubGVuZ3RoXG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLGFueT59IG9ialxuICogQHBhcmFtIHtmdW5jdGlvbihhbnksc3RyaW5nKTpib29sZWFufSBmXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3Qgc29tZSA9IChvYmosIGYpID0+IHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGYob2JqW2tleV0sIGtleSkpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fHVuZGVmaW5lZH0gb2JqXG4gKi9cbmV4cG9ydCBjb25zdCBpc0VtcHR5ID0gb2JqID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gIGZvciAoY29uc3QgX2sgaW4gb2JqKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsYW55Pn0gb2JqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKGFueSxzdHJpbmcpOmJvb2xlYW59IGZcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBldmVyeSA9IChvYmosIGYpID0+IHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKCFmKG9ialtrZXldLCBrZXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBDYWxscyBgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIHthbnl9IG9ialxuICogQHBhcmFtIHtzdHJpbmd8c3ltYm9sfSBrZXlcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBoYXNQcm9wZXJ0eSA9IChvYmosIGtleSkgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KVxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZyxhbnk+fSBhXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsYW55Pn0gYlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVxdWFsRmxhdCA9IChhLCBiKSA9PiBhID09PSBiIHx8IChsZW5ndGgoYSkgPT09IGxlbmd0aChiKSAmJiBldmVyeShhLCAodmFsLCBrZXkpID0+ICh2YWwgIT09IHVuZGVmaW5lZCB8fCBoYXNQcm9wZXJ0eShiLCBrZXkpKSAmJiBiW2tleV0gPT09IHZhbCkpXG4iXSwibmFtZXMiOlsiY3JlYXRlIiwiT2JqZWN0IiwiYXNzaWduIiwia2V5cyIsImZvckVhY2giLCJvYmoiLCJmIiwia2V5IiwibWFwIiwicmVzdWx0cyIsInB1c2giLCJsZW5ndGgiLCJzb21lIiwiaXNFbXB0eSIsIl9rIiwiZXZlcnkiLCJoYXNQcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImVxdWFsRmxhdCIsImEiLCJiIiwidmFsIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/observable.js":
/*!*****************************************!*\
  !*** ./node_modules/lib0/observable.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Observable: () => (/* binding */ Observable),\n/* harmony export */   ObservableV2: () => (/* binding */ ObservableV2)\n/* harmony export */ });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"(ssr)/./node_modules/lib0/map.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set.js */ \"(ssr)/./node_modules/lib0/set.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n/**\n * Observable class prototype.\n *\n * @module observable\n */ \n\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */ class ObservableV2 {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */ this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ on(name, f) {\n        _map_js__WEBPACK_IMPORTED_MODULE_0__.setIfUndefined(this._observers, /** @type {string} */ name, _set_js__WEBPACK_IMPORTED_MODULE_1__.create).add(f);\n        return f;\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, /** @type {any} */ _f);\n            f(...args);\n        };\n        this.on(name, /** @type {any} */ _f);\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) {\n                this._observers.delete(name);\n            }\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _array_js__WEBPACK_IMPORTED_MODULE_2__.from((this._observers.get(name) || _map_js__WEBPACK_IMPORTED_MODULE_0__.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n}\n/* c8 ignore start */ /**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */ class Observable {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */ this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ on(name, f) {\n        _map_js__WEBPACK_IMPORTED_MODULE_0__.setIfUndefined(this._observers, name, _set_js__WEBPACK_IMPORTED_MODULE_1__.create).add(f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, _f);\n            f(...args);\n        };\n        this.on(name, _f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) {\n                this._observers.delete(name);\n            }\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _array_js__WEBPACK_IMPORTED_MODULE_2__.from((this._observers.get(name) || _map_js__WEBPACK_IMPORTED_MODULE_0__.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _map_js__WEBPACK_IMPORTED_MODULE_0__.create();\n    }\n} /* c8 ignore end */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/observable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/pair.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/pair.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pair: () => (/* binding */ Pair),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createReversed: () => (/* binding */ createReversed),\n/* harmony export */   forEach: () => (/* binding */ forEach),\n/* harmony export */   map: () => (/* binding */ map)\n/* harmony export */ });\n/**\n * Working with value pairs.\n *\n * @module pair\n */ /**\n * @template L,R\n */ class Pair {\n    /**\n   * @param {L} left\n   * @param {R} right\n   */ constructor(left, right){\n        this.left = left;\n        this.right = right;\n    }\n}\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */ const create = (left, right)=>new Pair(left, right);\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */ const createReversed = (right, left)=>new Pair(left, right);\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */ const forEach = (arr, f)=>arr.forEach((p)=>f(p.left, p.right));\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */ const map = (arr, f)=>arr.map((p)=>f(p.left, p.right));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9wYWlyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOztDQUVDLEdBQ00sTUFBTUE7SUFDWDs7O0dBR0MsR0FDREMsWUFBYUMsSUFBSSxFQUFFQyxLQUFLLENBQUU7UUFDeEIsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxLQUFLLEdBQUdBO0lBQ2Y7QUFDRjtBQUVBOzs7OztDQUtDLEdBQ00sTUFBTUMsU0FBUyxDQUFDRixNQUFNQyxRQUFVLElBQUlILEtBQUtFLE1BQU1DLE9BQU07QUFFNUQ7Ozs7O0NBS0MsR0FDTSxNQUFNRSxpQkFBaUIsQ0FBQ0YsT0FBT0QsT0FBUyxJQUFJRixLQUFLRSxNQUFNQyxPQUFNO0FBRXBFOzs7O0NBSUMsR0FDTSxNQUFNRyxVQUFVLENBQUNDLEtBQUtDLElBQU1ELElBQUlELE9BQU8sQ0FBQ0csQ0FBQUEsSUFBS0QsRUFBRUMsRUFBRVAsSUFBSSxFQUFFTyxFQUFFTixLQUFLLEdBQUU7QUFFdkU7Ozs7O0NBS0MsR0FDTSxNQUFNTyxNQUFNLENBQUNILEtBQUtDLElBQU1ELElBQUlHLEdBQUcsQ0FBQ0QsQ0FBQUEsSUFBS0QsRUFBRUMsRUFBRVAsSUFBSSxFQUFFTyxFQUFFTixLQUFLLEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvcGFpci5qcz81MmVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogV29ya2luZyB3aXRoIHZhbHVlIHBhaXJzLlxuICpcbiAqIEBtb2R1bGUgcGFpclxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIEwsUlxuICovXG5leHBvcnQgY2xhc3MgUGFpciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0x9IGxlZnRcbiAgICogQHBhcmFtIHtSfSByaWdodFxuICAgKi9cbiAgY29uc3RydWN0b3IgKGxlZnQsIHJpZ2h0KSB7XG4gICAgdGhpcy5sZWZ0ID0gbGVmdFxuICAgIHRoaXMucmlnaHQgPSByaWdodFxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIEwsUlxuICogQHBhcmFtIHtMfSBsZWZ0XG4gKiBAcGFyYW0ge1J9IHJpZ2h0XG4gKiBAcmV0dXJuIHtQYWlyPEwsUj59XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAobGVmdCwgcmlnaHQpID0+IG5ldyBQYWlyKGxlZnQsIHJpZ2h0KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBMLFJcbiAqIEBwYXJhbSB7Un0gcmlnaHRcbiAqIEBwYXJhbSB7TH0gbGVmdFxuICogQHJldHVybiB7UGFpcjxMLFI+fVxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlUmV2ZXJzZWQgPSAocmlnaHQsIGxlZnQpID0+IG5ldyBQYWlyKGxlZnQsIHJpZ2h0KVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBMLFJcbiAqIEBwYXJhbSB7QXJyYXk8UGFpcjxMLFI+Pn0gYXJyXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKEwsIFIpOmFueX0gZlxuICovXG5leHBvcnQgY29uc3QgZm9yRWFjaCA9IChhcnIsIGYpID0+IGFyci5mb3JFYWNoKHAgPT4gZihwLmxlZnQsIHAucmlnaHQpKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBMLFIsWFxuICogQHBhcmFtIHtBcnJheTxQYWlyPEwsUj4+fSBhcnJcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oTCwgUik6WH0gZlxuICogQHJldHVybiB7QXJyYXk8WD59XG4gKi9cbmV4cG9ydCBjb25zdCBtYXAgPSAoYXJyLCBmKSA9PiBhcnIubWFwKHAgPT4gZihwLmxlZnQsIHAucmlnaHQpKVxuIl0sIm5hbWVzIjpbIlBhaXIiLCJjb25zdHJ1Y3RvciIsImxlZnQiLCJyaWdodCIsImNyZWF0ZSIsImNyZWF0ZVJldmVyc2VkIiwiZm9yRWFjaCIsImFyciIsImYiLCJwIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/pair.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/promise.js":
/*!**************************************!*\
  !*** ./node_modules/lib0/promise.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   all: () => (/* binding */ all),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createEmpty: () => (/* binding */ createEmpty),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   reject: () => (/* binding */ reject),\n/* harmony export */   resolve: () => (/* binding */ resolve),\n/* harmony export */   resolveWith: () => (/* binding */ resolveWith),\n/* harmony export */   until: () => (/* binding */ until),\n/* harmony export */   wait: () => (/* binding */ wait)\n/* harmony export */ });\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ \"(ssr)/./node_modules/lib0/time.js\");\n/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */ \n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */ /**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */ const create = (f)=>/** @type {Promise<T>} */ new Promise(f);\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */ const createEmpty = (f)=>new Promise(f);\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */ const all = Promise.all.bind(Promise);\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */ const reject = (reason)=>Promise.reject(reason);\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */ const resolve = (res)=>Promise.resolve(res);\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */ const resolveWith = (res)=>Promise.resolve(res);\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */ const until = (timeout, check, intervalResolution = 10)=>create((resolve, reject)=>{\n        const startTime = _time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime();\n        const hasTimeout = timeout > 0;\n        const untilInterval = ()=>{\n            if (check()) {\n                clearInterval(intervalHandle);\n                resolve();\n            } else if (hasTimeout) {\n                /* c8 ignore else */ if (_time_js__WEBPACK_IMPORTED_MODULE_0__.getUnixTime() - startTime > timeout) {\n                    clearInterval(intervalHandle);\n                    reject(new Error(\"Timeout\"));\n                }\n            }\n        };\n        const intervalHandle = setInterval(untilInterval, intervalResolution);\n    });\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */ const wait = (timeout)=>create((resolve, reject)=>setTimeout(resolve, timeout));\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */ const isPromise = (p)=>p instanceof Promise || p && p.then && p.catch && p.finally;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRWdDO0FBRWpDOzs7O0NBSUMsR0FFRDs7OztDQUlDLEdBQ00sTUFBTUMsU0FBU0MsQ0FBQUEsSUFBSyx1QkFBdUIsR0FBSSxJQUFJQyxRQUFRRCxHQUFHO0FBRXJFOzs7Q0FHQyxHQUNNLE1BQU1FLGNBQWNGLENBQUFBLElBQUssSUFBSUMsUUFBUUQsR0FBRTtBQUU5Qzs7Ozs7O0NBTUMsR0FDTSxNQUFNRyxNQUFNRixRQUFRRSxHQUFHLENBQUNDLElBQUksQ0FBQ0gsU0FBUTtBQUU1Qzs7O0NBR0MsR0FDTSxNQUFNSSxTQUFTQyxDQUFBQSxTQUFVTCxRQUFRSSxNQUFNLENBQUNDLFFBQU87QUFFdEQ7Ozs7Q0FJQyxHQUNNLE1BQU1DLFVBQVVDLENBQUFBLE1BQU9QLFFBQVFNLE9BQU8sQ0FBQ0MsS0FBSTtBQUVsRDs7OztDQUlDLEdBQ00sTUFBTUMsY0FBY0QsQ0FBQUEsTUFBT1AsUUFBUU0sT0FBTyxDQUFDQyxLQUFJO0FBRXREOzs7Ozs7O0NBT0MsR0FDTSxNQUFNRSxRQUFRLENBQUNDLFNBQVNDLE9BQU9DLHFCQUFxQixFQUFFLEdBQUtkLE9BQU8sQ0FBQ1EsU0FBU0Y7UUFDakYsTUFBTVMsWUFBWWhCLGlEQUFnQjtRQUNsQyxNQUFNa0IsYUFBYUwsVUFBVTtRQUM3QixNQUFNTSxnQkFBZ0I7WUFDcEIsSUFBSUwsU0FBUztnQkFDWE0sY0FBY0M7Z0JBQ2RaO1lBQ0YsT0FBTyxJQUFJUyxZQUFZO2dCQUNyQixrQkFBa0IsR0FDbEIsSUFBSWxCLGlEQUFnQixLQUFLZ0IsWUFBWUgsU0FBUztvQkFDNUNPLGNBQWNDO29CQUNkZCxPQUFPLElBQUllLE1BQU07Z0JBQ25CO1lBQ0Y7UUFDRjtRQUNBLE1BQU1ELGlCQUFpQkUsWUFBWUosZUFBZUo7SUFDcEQsR0FBRTtBQUVGOzs7Q0FHQyxHQUNNLE1BQU1TLE9BQU9YLENBQUFBLFVBQVdaLE9BQU8sQ0FBQ1EsU0FBU0YsU0FBV2tCLFdBQVdoQixTQUFTSSxVQUFTO0FBRXhGOzs7Ozs7OztDQVFDLEdBQ00sTUFBTWEsWUFBWUMsQ0FBQUEsSUFBS0EsYUFBYXhCLFdBQVl3QixLQUFLQSxFQUFFQyxJQUFJLElBQUlELEVBQUVFLEtBQUssSUFBSUYsRUFBRUcsT0FBTyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL3Byb21pc2UuanM/MWMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgaGVscGVycyB0byB3b3JrIHdpdGggcHJvbWlzZXMuXG4gKlxuICogQG1vZHVsZSBwcm9taXNlXG4gKi9cblxuaW1wb3J0ICogYXMgdGltZSBmcm9tICcuL3RpbWUuanMnXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBjYWxsYmFjayBQcm9taXNlUmVzb2x2ZVxuICogQHBhcmFtIHtUfFByb21pc2VMaWtlPFQ+fSBbcmVzdWx0XVxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oUHJvbWlzZVJlc29sdmU8VD4sZnVuY3Rpb24oRXJyb3IpOnZvaWQpOmFueX0gZlxuICogQHJldHVybiB7UHJvbWlzZTxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IGYgPT4gLyoqIEB0eXBlIHtQcm9taXNlPFQ+fSAqLyAobmV3IFByb21pc2UoZikpXG5cbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbihmdW5jdGlvbigpOnZvaWQsZnVuY3Rpb24oRXJyb3IpOnZvaWQpOnZvaWR9IGZcbiAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVFbXB0eSA9IGYgPT4gbmV3IFByb21pc2UoZilcblxuLyoqXG4gKiBgUHJvbWlzZS5hbGxgIHdhaXQgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgYXJyYXkgdG8gcmVzb2x2ZSBhbmQgcmV0dXJuIHRoZSByZXN1bHRcbiAqIEB0ZW1wbGF0ZSB7dW5rbm93bltdIHwgW119IFBTXG4gKlxuICogQHBhcmFtIHtQU30gcHNcbiAqIEByZXR1cm4ge1Byb21pc2U8eyAtcmVhZG9ubHkgW1AgaW4ga2V5b2YgUFNdOiBBd2FpdGVkPFBTW1BdPiB9Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGFsbCA9IFByb21pc2UuYWxsLmJpbmQoUHJvbWlzZSlcblxuLyoqXG4gKiBAcGFyYW0ge0Vycm9yfSBbcmVhc29uXVxuICogQHJldHVybiB7UHJvbWlzZTxuZXZlcj59XG4gKi9cbmV4cG9ydCBjb25zdCByZWplY3QgPSByZWFzb24gPT4gUHJvbWlzZS5yZWplY3QocmVhc29uKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R8dm9pZH0gcmVzXG4gKiBAcmV0dXJuIHtQcm9taXNlPFR8dm9pZD59XG4gKi9cbmV4cG9ydCBjb25zdCByZXNvbHZlID0gcmVzID0+IFByb21pc2UucmVzb2x2ZShyZXMpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7VH0gcmVzXG4gKiBAcmV0dXJuIHtQcm9taXNlPFQ+fVxuICovXG5leHBvcnQgY29uc3QgcmVzb2x2ZVdpdGggPSByZXMgPT4gUHJvbWlzZS5yZXNvbHZlKHJlcylcblxuLyoqXG4gKiBAdG9kbyBOZXh0IHZlcnNpb24sIHJlb3JkZXIgcGFyYW1ldGVyczogY2hlY2ssIFt0aW1lb3V0LCBbaW50ZXJ2YWxSZXNvbHV0aW9uXV1cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dFxuICogQHBhcmFtIHtmdW5jdGlvbigpOmJvb2xlYW59IGNoZWNrXG4gKiBAcGFyYW0ge251bWJlcn0gW2ludGVydmFsUmVzb2x1dGlvbl1cbiAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gKi9cbmV4cG9ydCBjb25zdCB1bnRpbCA9ICh0aW1lb3V0LCBjaGVjaywgaW50ZXJ2YWxSZXNvbHV0aW9uID0gMTApID0+IGNyZWF0ZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IHRpbWUuZ2V0VW5peFRpbWUoKVxuICBjb25zdCBoYXNUaW1lb3V0ID0gdGltZW91dCA+IDBcbiAgY29uc3QgdW50aWxJbnRlcnZhbCA9ICgpID0+IHtcbiAgICBpZiAoY2hlY2soKSkge1xuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbEhhbmRsZSlcbiAgICAgIHJlc29sdmUoKVxuICAgIH0gZWxzZSBpZiAoaGFzVGltZW91dCkge1xuICAgICAgLyogYzggaWdub3JlIGVsc2UgKi9cbiAgICAgIGlmICh0aW1lLmdldFVuaXhUaW1lKCkgLSBzdGFydFRpbWUgPiB0aW1lb3V0KSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxIYW5kbGUpXG4gICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ1RpbWVvdXQnKSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29uc3QgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbCh1bnRpbEludGVydmFsLCBpbnRlcnZhbFJlc29sdXRpb24pXG59KVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lb3V0XG4gKiBAcmV0dXJuIHtQcm9taXNlPHVuZGVmaW5lZD59XG4gKi9cbmV4cG9ydCBjb25zdCB3YWl0ID0gdGltZW91dCA9PiBjcmVhdGUoKHJlc29sdmUsIHJlamVjdCkgPT4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0KSlcblxuLyoqXG4gKiBDaGVja3MgaWYgYW4gb2JqZWN0IGlzIGEgcHJvbWlzZSB1c2luZyBkdWNrdHlwaW5nLlxuICpcbiAqIFByb21pc2VzIGFyZSBvZnRlbiBwb2x5ZmlsbGVkLCBzbyBpdCBtYWtlcyBzZW5zZSB0byBhZGQgc29tZSBhZGRpdGlvbmFsIGd1YXJhbnRlZXMgaWYgdGhlIHVzZXIgb2YgdGhpc1xuICogbGlicmFyeSBoYXMgc29tZSBpbnNhbmUgZW52aXJvbm1lbnQgd2hlcmUgZ2xvYmFsIFByb21pc2Ugb2JqZWN0cyBhcmUgb3ZlcndyaXR0ZW4uXG4gKlxuICogQHBhcmFtIHthbnl9IHBcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBpc1Byb21pc2UgPSBwID0+IHAgaW5zdGFuY2VvZiBQcm9taXNlIHx8IChwICYmIHAudGhlbiAmJiBwLmNhdGNoICYmIHAuZmluYWxseSlcbiJdLCJuYW1lcyI6WyJ0aW1lIiwiY3JlYXRlIiwiZiIsIlByb21pc2UiLCJjcmVhdGVFbXB0eSIsImFsbCIsImJpbmQiLCJyZWplY3QiLCJyZWFzb24iLCJyZXNvbHZlIiwicmVzIiwicmVzb2x2ZVdpdGgiLCJ1bnRpbCIsInRpbWVvdXQiLCJjaGVjayIsImludGVydmFsUmVzb2x1dGlvbiIsInN0YXJ0VGltZSIsImdldFVuaXhUaW1lIiwiaGFzVGltZW91dCIsInVudGlsSW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiaW50ZXJ2YWxIYW5kbGUiLCJFcnJvciIsInNldEludGVydmFsIiwid2FpdCIsInNldFRpbWVvdXQiLCJpc1Byb21pc2UiLCJwIiwidGhlbiIsImNhdGNoIiwiZmluYWxseSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/random.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/random.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   oneOf: () => (/* binding */ oneOf),\n/* harmony export */   rand: () => (/* binding */ rand),\n/* harmony export */   uint32: () => (/* binding */ uint32),\n/* harmony export */   uint53: () => (/* binding */ uint53),\n/* harmony export */   uuidv4: () => (/* binding */ uuidv4)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"(ssr)/./node_modules/lib0/binary.js\");\n/* harmony import */ var lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib0/webcrypto */ \"(ssr)/./node_modules/lib0/webcrypto.node.js\");\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */ \n\n\nconst rand = Math.random;\nconst uint32 = ()=>(0,lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint32Array(1))[0];\nconst uint53 = ()=>{\n    const arr = (0,lib0_webcrypto__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint32Array(8));\n    return (arr[0] & _binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS21) * (_binary_js__WEBPACK_IMPORTED_MODULE_1__.BITS32 + 1) + (arr[1] >>> 0);\n};\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */ const oneOf = (arr)=>arr[_math_js__WEBPACK_IMPORTED_MODULE_2__.floor(rand() * arr.length)];\n// @ts-ignore\nconst uuidv4Template = [\n    1e7\n] + -1e3 + -4e3 + -8e3 + -1e11;\n/**\n * @return {string}\n */ const uuidv4 = ()=>uuidv4Template.replace(/[018]/g, /** @param {number} c */ (c)=>(c ^ uint32() & 15 >> c / 4).toString(16));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FFZ0M7QUFDSTtBQUNXO0FBRXpDLE1BQU1HLE9BQU9DLEtBQUtDLE1BQU07QUFFeEIsTUFBTUMsU0FBUyxJQUFNSiwrREFBZUEsQ0FBQyxJQUFJSyxZQUFZLEdBQUcsQ0FBQyxFQUFFO0FBRTNELE1BQU1DLFNBQVM7SUFDcEIsTUFBTUMsTUFBTVAsK0RBQWVBLENBQUMsSUFBSUssWUFBWTtJQUM1QyxPQUFPLENBQUNFLEdBQUcsQ0FBQyxFQUFFLEdBQUdSLDhDQUFhLElBQUtBLENBQUFBLDhDQUFhLEdBQUcsS0FBTVEsQ0FBQUEsR0FBRyxDQUFDLEVBQUUsS0FBSztBQUN0RSxFQUFDO0FBRUQ7Ozs7Q0FJQyxHQUNNLE1BQU1HLFFBQVFILENBQUFBLE1BQU9BLEdBQUcsQ0FBQ1QsMkNBQVUsQ0FBQ0csU0FBU00sSUFBSUssTUFBTSxFQUFFO0FBRWhFLGFBQWE7QUFDYixNQUFNQyxpQkFBaUI7SUFBQztDQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUVyRDs7Q0FFQyxHQUNNLE1BQU1DLFNBQVMsSUFBTUQsZUFBZUUsT0FBTyxDQUFDLFVBQVUsc0JBQXNCLEdBQUdDLENBQUFBLElBQ3BGLENBQUNBLElBQUlaLFdBQVcsTUFBTVksSUFBSSxHQUFHQyxRQUFRLENBQUMsS0FDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvcmFuZG9tLmpzPzdmM2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJc29tb3JwaGljIG1vZHVsZSBmb3IgdHJ1ZSByYW5kb20gbnVtYmVycyAvIGJ1ZmZlcnMgLyB1dWlkcy5cbiAqXG4gKiBBdHRlbnRpb246IGZhbGxzIGJhY2sgdG8gTWF0aC5yYW5kb20gaWYgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBjcnlwdG8uXG4gKlxuICogQG1vZHVsZSByYW5kb21cbiAqL1xuXG5pbXBvcnQgKiBhcyBtYXRoIGZyb20gJy4vbWF0aC5qcydcbmltcG9ydCAqIGFzIGJpbmFyeSBmcm9tICcuL2JpbmFyeS5qcydcbmltcG9ydCB7IGdldFJhbmRvbVZhbHVlcyB9IGZyb20gJ2xpYjAvd2ViY3J5cHRvJ1xuXG5leHBvcnQgY29uc3QgcmFuZCA9IE1hdGgucmFuZG9tXG5cbmV4cG9ydCBjb25zdCB1aW50MzIgPSAoKSA9PiBnZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQzMkFycmF5KDEpKVswXVxuXG5leHBvcnQgY29uc3QgdWludDUzID0gKCkgPT4ge1xuICBjb25zdCBhcnIgPSBnZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQzMkFycmF5KDgpKVxuICByZXR1cm4gKGFyclswXSAmIGJpbmFyeS5CSVRTMjEpICogKGJpbmFyeS5CSVRTMzIgKyAxKSArIChhcnJbMV0gPj4+IDApXG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QXJyYXk8VD59IGFyclxuICogQHJldHVybiB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IG9uZU9mID0gYXJyID0+IGFyclttYXRoLmZsb29yKHJhbmQoKSAqIGFyci5sZW5ndGgpXVxuXG4vLyBAdHMtaWdub3JlXG5jb25zdCB1dWlkdjRUZW1wbGF0ZSA9IFsxZTddICsgLTFlMyArIC00ZTMgKyAtOGUzICsgLTFlMTFcblxuLyoqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCB1dWlkdjQgPSAoKSA9PiB1dWlkdjRUZW1wbGF0ZS5yZXBsYWNlKC9bMDE4XS9nLCAvKiogQHBhcmFtIHtudW1iZXJ9IGMgKi8gYyA9PlxuICAoYyBeIHVpbnQzMigpICYgMTUgPj4gYyAvIDQpLnRvU3RyaW5nKDE2KVxuKVxuIl0sIm5hbWVzIjpbIm1hdGgiLCJiaW5hcnkiLCJnZXRSYW5kb21WYWx1ZXMiLCJyYW5kIiwiTWF0aCIsInJhbmRvbSIsInVpbnQzMiIsIlVpbnQzMkFycmF5IiwidWludDUzIiwiYXJyIiwiQklUUzIxIiwiQklUUzMyIiwib25lT2YiLCJmbG9vciIsImxlbmd0aCIsInV1aWR2NFRlbXBsYXRlIiwidXVpZHY0IiwicmVwbGFjZSIsImMiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/set.js":
/*!**********************************!*\
  !*** ./node_modules/lib0/set.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   toArray: () => (/* binding */ toArray)\n/* harmony export */ });\n/**\n * Utility module to work with sets.\n *\n * @module set\n */ const create = ()=>new Set();\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */ const toArray = (set)=>Array.from(set);\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */ const first = (set)=>set.values().next().value || undefined;\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */ const from = (entries)=>new Set(entries);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFTSxNQUFNQSxTQUFTLElBQU0sSUFBSUMsTUFBSztBQUVyQzs7OztDQUlDLEdBQ00sTUFBTUMsVUFBVUMsQ0FBQUEsTUFBT0MsTUFBTUMsSUFBSSxDQUFDRixLQUFJO0FBRTdDOzs7O0NBSUMsR0FDTSxNQUFNRyxRQUFRSCxDQUFBQSxNQUNuQkEsSUFBSUksTUFBTSxHQUFHQyxJQUFJLEdBQUdDLEtBQUssSUFBSUMsVUFBUztBQUV4Qzs7OztDQUlDLEdBQ00sTUFBTUwsT0FBT00sQ0FBQUEsVUFBVyxJQUFJVixJQUFJVSxTQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL3NldC5qcz8yYmQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0eSBtb2R1bGUgdG8gd29yayB3aXRoIHNldHMuXG4gKlxuICogQG1vZHVsZSBzZXRcbiAqL1xuXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKCkgPT4gbmV3IFNldCgpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7U2V0PFQ+fSBzZXRcbiAqIEByZXR1cm4ge0FycmF5PFQ+fVxuICovXG5leHBvcnQgY29uc3QgdG9BcnJheSA9IHNldCA9PiBBcnJheS5mcm9tKHNldClcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtTZXQ8VD59IHNldFxuICogQHJldHVybiB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGZpcnN0ID0gc2V0ID0+XG4gIHNldC52YWx1ZXMoKS5uZXh0KCkudmFsdWUgfHwgdW5kZWZpbmVkXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7SXRlcmFibGU8VD59IGVudHJpZXNcbiAqIEByZXR1cm4ge1NldDxUPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb20gPSBlbnRyaWVzID0+IG5ldyBTZXQoZW50cmllcylcbiJdLCJuYW1lcyI6WyJjcmVhdGUiLCJTZXQiLCJ0b0FycmF5Iiwic2V0IiwiQXJyYXkiLCJmcm9tIiwiZmlyc3QiLCJ2YWx1ZXMiLCJuZXh0IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJlbnRyaWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/storage.js":
/*!**************************************!*\
  !*** ./node_modules/lib0/storage.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   offChange: () => (/* binding */ offChange),\n/* harmony export */   onChange: () => (/* binding */ onChange),\n/* harmony export */   varStorage: () => (/* binding */ varStorage)\n/* harmony export */ });\n/* eslint-env browser */ /**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */ /* c8 ignore start */ class VarStoragePolyfill {\n    constructor(){\n        this.map = new Map();\n    }\n    /**\n   * @param {string} key\n   * @param {any} newValue\n   */ setItem(key, newValue) {\n        this.map.set(key, newValue);\n    }\n    /**\n   * @param {string} key\n   */ getItem(key) {\n        return this.map.get(key);\n    }\n}\n/* c8 ignore stop */ /**\n * @type {any}\n */ let _localStorage = new VarStoragePolyfill();\nlet usePolyfill = true;\n/* c8 ignore start */ try {\n    // if the same-origin rule is violated, accessing localStorage might thrown an error\n    if (typeof localStorage !== \"undefined\" && localStorage) {\n        _localStorage = localStorage;\n        usePolyfill = false;\n    }\n} catch (e) {}\n/* c8 ignore stop */ /**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */ /* c8 ignore next */ const varStorage = _localStorage;\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */ /* c8 ignore next */ const onChange = (eventHandler)=>usePolyfill || addEventListener(\"storage\", /** @type {any} */ eventHandler);\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */ /* c8 ignore next */ const offChange = (eventHandler)=>usePolyfill || removeEventListener(\"storage\", /** @type {any} */ eventHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNCQUFzQixHQUV0Qjs7Ozs7O0NBTUMsR0FFRCxtQkFBbUIsR0FDbkIsTUFBTUE7SUFDSkMsYUFBZTtRQUNiLElBQUksQ0FBQ0MsR0FBRyxHQUFHLElBQUlDO0lBQ2pCO0lBRUE7OztHQUdDLEdBQ0RDLFFBQVNDLEdBQUcsRUFBRUMsUUFBUSxFQUFFO1FBQ3RCLElBQUksQ0FBQ0osR0FBRyxDQUFDSyxHQUFHLENBQUNGLEtBQUtDO0lBQ3BCO0lBRUE7O0dBRUMsR0FDREUsUUFBU0gsR0FBRyxFQUFFO1FBQ1osT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ08sR0FBRyxDQUFDSjtJQUN0QjtBQUNGO0FBQ0Esa0JBQWtCLEdBRWxCOztDQUVDLEdBQ0QsSUFBSUssZ0JBQWdCLElBQUlWO0FBQ3hCLElBQUlXLGNBQWM7QUFFbEIsbUJBQW1CLEdBQ25CLElBQUk7SUFDRixvRkFBb0Y7SUFDcEYsSUFBSSxPQUFPQyxpQkFBaUIsZUFBZUEsY0FBYztRQUN2REYsZ0JBQWdCRTtRQUNoQkQsY0FBYztJQUNoQjtBQUNGLEVBQUUsT0FBT0UsR0FBRyxDQUFFO0FBQ2Qsa0JBQWtCLEdBRWxCOztDQUVDLEdBQ0Qsa0JBQWtCLEdBQ1gsTUFBTUMsYUFBYUosY0FBYTtBQUV2Qzs7Ozs7Q0FLQyxHQUNELGtCQUFrQixHQUNYLE1BQU1LLFdBQVdDLENBQUFBLGVBQWdCTCxlQUFlTSxpQkFBaUIsV0FBVyxnQkFBZ0IsR0FBSUQsY0FBYztBQUVySDs7Ozs7Q0FLQyxHQUNELGtCQUFrQixHQUNYLE1BQU1FLFlBQVlGLENBQUFBLGVBQWdCTCxlQUFlUSxvQkFBb0IsV0FBVyxnQkFBZ0IsR0FBSUgsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlLWpvdXJuYWwvLi9ub2RlX21vZHVsZXMvbGliMC9zdG9yYWdlLmpzPzE3YzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBicm93c2VyICovXG5cbi8qKlxuICogSXNvbW9ycGhpYyB2YXJpYWJsZSBzdG9yYWdlLlxuICpcbiAqIFVzZXMgTG9jYWxTdG9yYWdlIGluIHRoZSBicm93c2VyIGFuZCBmYWxscyBiYWNrIHRvIGluLW1lbW9yeSBzdG9yYWdlLlxuICpcbiAqIEBtb2R1bGUgc3RvcmFnZVxuICovXG5cbi8qIGM4IGlnbm9yZSBzdGFydCAqL1xuY2xhc3MgVmFyU3RvcmFnZVBvbHlmaWxsIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMubWFwID0gbmV3IE1hcCgpXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgKiBAcGFyYW0ge2FueX0gbmV3VmFsdWVcbiAgICovXG4gIHNldEl0ZW0gKGtleSwgbmV3VmFsdWUpIHtcbiAgICB0aGlzLm1hcC5zZXQoa2V5LCBuZXdWYWx1ZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqL1xuICBnZXRJdGVtIChrZXkpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGtleSlcbiAgfVxufVxuLyogYzggaWdub3JlIHN0b3AgKi9cblxuLyoqXG4gKiBAdHlwZSB7YW55fVxuICovXG5sZXQgX2xvY2FsU3RvcmFnZSA9IG5ldyBWYXJTdG9yYWdlUG9seWZpbGwoKVxubGV0IHVzZVBvbHlmaWxsID0gdHJ1ZVxuXG4vKiBjOCBpZ25vcmUgc3RhcnQgKi9cbnRyeSB7XG4gIC8vIGlmIHRoZSBzYW1lLW9yaWdpbiBydWxlIGlzIHZpb2xhdGVkLCBhY2Nlc3NpbmcgbG9jYWxTdG9yYWdlIG1pZ2h0IHRocm93biBhbiBlcnJvclxuICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9jYWxTdG9yYWdlKSB7XG4gICAgX2xvY2FsU3RvcmFnZSA9IGxvY2FsU3RvcmFnZVxuICAgIHVzZVBvbHlmaWxsID0gZmFsc2VcbiAgfVxufSBjYXRjaCAoZSkgeyB9XG4vKiBjOCBpZ25vcmUgc3RvcCAqL1xuXG4vKipcbiAqIFRoaXMgaXMgYmFzaWNhbGx5IGxvY2FsU3RvcmFnZSBpbiBicm93c2VyLCBvciBhIHBvbHlmaWxsIGluIG5vZGVqc1xuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IHZhclN0b3JhZ2UgPSBfbG9jYWxTdG9yYWdlXG5cbi8qKlxuICogQSBwb2x5ZmlsbCBmb3IgYGFkZEV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBldmVudCA9PiB7Li59KWAgdGhhdCBkb2VzIG5vdGhpbmcgaWYgdGhlIHBvbHlmaWxsIGlzIGJlaW5nIHVzZWQuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbih7IGtleTogc3RyaW5nLCBuZXdWYWx1ZTogc3RyaW5nLCBvbGRWYWx1ZTogc3RyaW5nIH0pOiB2b2lkfSBldmVudEhhbmRsZXJcbiAqIEBmdW5jdGlvblxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IG9uQ2hhbmdlID0gZXZlbnRIYW5kbGVyID0+IHVzZVBvbHlmaWxsIHx8IGFkZEV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCAvKiogQHR5cGUge2FueX0gKi8gKGV2ZW50SGFuZGxlcikpXG5cbi8qKlxuICogQSBwb2x5ZmlsbCBmb3IgYHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBldmVudCA9PiB7Li59KWAgdGhhdCBkb2VzIG5vdGhpbmcgaWYgdGhlIHBvbHlmaWxsIGlzIGJlaW5nIHVzZWQuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbih7IGtleTogc3RyaW5nLCBuZXdWYWx1ZTogc3RyaW5nLCBvbGRWYWx1ZTogc3RyaW5nIH0pOiB2b2lkfSBldmVudEhhbmRsZXJcbiAqIEBmdW5jdGlvblxuICovXG4vKiBjOCBpZ25vcmUgbmV4dCAqL1xuZXhwb3J0IGNvbnN0IG9mZkNoYW5nZSA9IGV2ZW50SGFuZGxlciA9PiB1c2VQb2x5ZmlsbCB8fCByZW1vdmVFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgLyoqIEB0eXBlIHthbnl9ICovIChldmVudEhhbmRsZXIpKVxuIl0sIm5hbWVzIjpbIlZhclN0b3JhZ2VQb2x5ZmlsbCIsImNvbnN0cnVjdG9yIiwibWFwIiwiTWFwIiwic2V0SXRlbSIsImtleSIsIm5ld1ZhbHVlIiwic2V0IiwiZ2V0SXRlbSIsImdldCIsIl9sb2NhbFN0b3JhZ2UiLCJ1c2VQb2x5ZmlsbCIsImxvY2FsU3RvcmFnZSIsImUiLCJ2YXJTdG9yYWdlIiwib25DaGFuZ2UiLCJldmVudEhhbmRsZXIiLCJhZGRFdmVudExpc3RlbmVyIiwib2ZmQ2hhbmdlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/string.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/string.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_UTF16_CHARACTER: () => (/* binding */ MAX_UTF16_CHARACTER),\n/* harmony export */   _decodeUtf8Native: () => (/* binding */ _decodeUtf8Native),\n/* harmony export */   _decodeUtf8Polyfill: () => (/* binding */ _decodeUtf8Polyfill),\n/* harmony export */   _encodeUtf8Native: () => (/* binding */ _encodeUtf8Native),\n/* harmony export */   _encodeUtf8Polyfill: () => (/* binding */ _encodeUtf8Polyfill),\n/* harmony export */   decodeUtf8: () => (/* binding */ decodeUtf8),\n/* harmony export */   encodeUtf8: () => (/* binding */ encodeUtf8),\n/* harmony export */   fromCamelCase: () => (/* binding */ fromCamelCase),\n/* harmony export */   fromCharCode: () => (/* binding */ fromCharCode),\n/* harmony export */   fromCodePoint: () => (/* binding */ fromCodePoint),\n/* harmony export */   repeat: () => (/* binding */ repeat),\n/* harmony export */   splice: () => (/* binding */ splice),\n/* harmony export */   trimLeft: () => (/* binding */ trimLeft),\n/* harmony export */   utf8ByteLength: () => (/* binding */ utf8ByteLength),\n/* harmony export */   utf8TextDecoder: () => (/* binding */ utf8TextDecoder),\n/* harmony export */   utf8TextEncoder: () => (/* binding */ utf8TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/lib0/array.js\");\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */ const fromCharCode = String.fromCharCode;\nconst fromCodePoint = String.fromCodePoint;\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */ const MAX_UTF16_CHARACTER = fromCharCode(65535);\n/**\n * @param {string} s\n * @return {string}\n */ const toLowerCase = (s)=>s.toLowerCase();\nconst trimLeftRegex = /^\\s*/g;\n/**\n * @param {string} s\n * @return {string}\n */ const trimLeft = (s)=>s.replace(trimLeftRegex, \"\");\nconst fromCamelCaseRegex = /([A-Z])/g;\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */ const fromCamelCase = (s, separator)=>trimLeft(s.replace(fromCamelCaseRegex, (match)=>`${separator}${toLowerCase(match)}`));\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */ const utf8ByteLength = (str)=>unescape(encodeURIComponent(str)).length;\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ const _encodeUtf8Polyfill = (str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    const buf = new Uint8Array(len);\n    for(let i = 0; i < len; i++){\n        buf[i] = /** @type {number} */ encodedString.codePointAt(i);\n    }\n    return buf;\n};\n/* c8 ignore next */ const utf8TextEncoder = /** @type {TextEncoder} */ typeof TextEncoder !== \"undefined\" ? new TextEncoder() : null;\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ const _encodeUtf8Native = (str)=>utf8TextEncoder.encode(str);\n/**\n * @param {string} str\n * @return {Uint8Array}\n */ /* c8 ignore next */ const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */ const _decodeUtf8Polyfill = (buf)=>{\n    let remainingLen = buf.length;\n    let encodedString = \"\";\n    let bufPos = 0;\n    while(remainingLen > 0){\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n        const bytes = buf.subarray(bufPos, bufPos + nextLen);\n        bufPos += nextLen;\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n        remainingLen -= nextLen;\n    }\n    return decodeURIComponent(escape(encodedString));\n};\n/* c8 ignore next */ let utf8TextDecoder = typeof TextDecoder === \"undefined\" ? null : new TextDecoder(\"utf-8\", {\n    fatal: true,\n    ignoreBOM: true\n});\n/* c8 ignore start */ if (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n    // Safari doesn't handle BOM correctly.\n    // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n    // Another issue is that from then on no BOM chars are recognized anymore\n    /* c8 ignore next */ utf8TextDecoder = null;\n}\n/* c8 ignore stop */ /**\n * @param {Uint8Array} buf\n * @return {string}\n */ const _decodeUtf8Native = (buf)=>/** @type {TextDecoder} */ utf8TextDecoder.decode(buf);\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */ /* c8 ignore next */ const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */ const splice = (str, index, remove, insert = \"\")=>str.slice(0, index) + insert + str.slice(index + remove);\n/**\n * @param {string} source\n * @param {number} n\n */ const repeat = (source, n)=>_array_js__WEBPACK_IMPORTED_MODULE_0__.unfold(n, ()=>source).join(\"\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/symbol.js":
/*!*************************************!*\
  !*** ./node_modules/lib0/symbol.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   isSymbol: () => (/* binding */ isSymbol)\n/* harmony export */ });\n/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */ /**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */ const create = Symbol;\n/**\n * @param {any} s\n * @return {boolean}\n */ const isSymbol = (s)=>typeof s === \"symbol\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC9zeW1ib2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Q0FJQyxHQUNNLE1BQU1BLFNBQVNDLE9BQU07QUFFNUI7OztDQUdDLEdBQ00sTUFBTUMsV0FBV0MsQ0FBQUEsSUFBSyxPQUFPQSxNQUFNLFNBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvc3ltYm9sLmpzPzU5MTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IG1vZHVsZSB0byB3b3JrIHdpdGggRWNtYVNjcmlwdCBTeW1ib2xzLlxuICpcbiAqIEBtb2R1bGUgc3ltYm9sXG4gKi9cblxuLyoqXG4gKiBSZXR1cm4gZnJlc2ggc3ltYm9sLlxuICpcbiAqIEByZXR1cm4ge1N5bWJvbH1cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IFN5bWJvbFxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBzXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgaXNTeW1ib2wgPSBzID0+IHR5cGVvZiBzID09PSAnc3ltYm9sJ1xuIl0sIm5hbWVzIjpbImNyZWF0ZSIsIlN5bWJvbCIsImlzU3ltYm9sIiwicyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/symbol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/time.js":
/*!***********************************!*\
  !*** ./node_modules/lib0/time.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDate: () => (/* binding */ getDate),\n/* harmony export */   getUnixTime: () => (/* binding */ getUnixTime),\n/* harmony export */   humanizeDuration: () => (/* binding */ humanizeDuration)\n/* harmony export */ });\n/* harmony import */ var _metric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./metric.js */ \"(ssr)/./node_modules/lib0/metric.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/lib0/math.js\");\n/**\n * Utility module to work with time.\n *\n * @module time\n */ \n\n/**\n * Return current time.\n *\n * @return {Date}\n */ const getDate = ()=>new Date();\n/**\n * Return current unix time.\n *\n * @return {number}\n */ const getUnixTime = Date.now;\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */ const humanizeDuration = (d)=>{\n    if (d < 60000) {\n        const p = _metric_js__WEBPACK_IMPORTED_MODULE_0__.prefix(d, -1);\n        return _math_js__WEBPACK_IMPORTED_MODULE_1__.round(p.n * 100) / 100 + p.prefix + \"s\";\n    }\n    d = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 1000);\n    const seconds = d % 60;\n    const minutes = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 60) % 60;\n    const hours = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 3600) % 24;\n    const days = _math_js__WEBPACK_IMPORTED_MODULE_1__.floor(d / 86400);\n    if (days > 0) {\n        return days + \"d\" + (hours > 0 || minutes > 30 ? \" \" + (minutes > 30 ? hours + 1 : hours) + \"h\" : \"\");\n    }\n    if (hours > 0) {\n        /* c8 ignore next */ return hours + \"h\" + (minutes > 0 || seconds > 30 ? \" \" + (seconds > 30 ? minutes + 1 : minutes) + \"min\" : \"\");\n    }\n    return minutes + \"min\" + (seconds > 0 ? \" \" + seconds + \"s\" : \"\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC90aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVvQztBQUNKO0FBRWpDOzs7O0NBSUMsR0FDTSxNQUFNRSxVQUFVLElBQU0sSUFBSUMsT0FBTTtBQUV2Qzs7OztDQUlDLEdBQ00sTUFBTUMsY0FBY0QsS0FBS0UsR0FBRztBQUVuQzs7Ozs7Q0FLQyxHQUNNLE1BQU1DLG1CQUFtQkMsQ0FBQUE7SUFDOUIsSUFBSUEsSUFBSSxPQUFPO1FBQ2IsTUFBTUMsSUFBSVIsOENBQWEsQ0FBQ08sR0FBRyxDQUFDO1FBQzVCLE9BQU9OLDJDQUFVLENBQUNPLEVBQUVHLENBQUMsR0FBRyxPQUFPLE1BQU1ILEVBQUVDLE1BQU0sR0FBRztJQUNsRDtJQUNBRixJQUFJTiwyQ0FBVSxDQUFDTSxJQUFJO0lBQ25CLE1BQU1NLFVBQVVOLElBQUk7SUFDcEIsTUFBTU8sVUFBVWIsMkNBQVUsQ0FBQ00sSUFBSSxNQUFNO0lBQ3JDLE1BQU1RLFFBQVFkLDJDQUFVLENBQUNNLElBQUksUUFBUTtJQUNyQyxNQUFNUyxPQUFPZiwyQ0FBVSxDQUFDTSxJQUFJO0lBQzVCLElBQUlTLE9BQU8sR0FBRztRQUNaLE9BQU9BLE9BQU8sTUFBTyxTQUFTLEtBQUtGLFVBQVUsS0FBTSxNQUFPQSxDQUFBQSxVQUFVLEtBQUtDLFFBQVEsSUFBSUEsS0FBSSxJQUFLLE1BQU0sRUFBQztJQUN2RztJQUNBLElBQUlBLFFBQVEsR0FBRztRQUNiLGtCQUFrQixHQUNsQixPQUFPQSxRQUFRLE1BQU8sV0FBVyxLQUFLRixVQUFVLEtBQU0sTUFBT0EsQ0FBQUEsVUFBVSxLQUFLQyxVQUFVLElBQUlBLE9BQU0sSUFBSyxRQUFRLEVBQUM7SUFDaEg7SUFDQSxPQUFPQSxVQUFVLFFBQVNELENBQUFBLFVBQVUsSUFBSSxNQUFNQSxVQUFVLE1BQU0sRUFBQztBQUNqRSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Utam91cm5hbC8uL25vZGVfbW9kdWxlcy9saWIwL3RpbWUuanM/ZTZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgbW9kdWxlIHRvIHdvcmsgd2l0aCB0aW1lLlxuICpcbiAqIEBtb2R1bGUgdGltZVxuICovXG5cbmltcG9ydCAqIGFzIG1ldHJpYyBmcm9tICcuL21ldHJpYy5qcydcbmltcG9ydCAqIGFzIG1hdGggZnJvbSAnLi9tYXRoLmpzJ1xuXG4vKipcbiAqIFJldHVybiBjdXJyZW50IHRpbWUuXG4gKlxuICogQHJldHVybiB7RGF0ZX1cbiAqL1xuZXhwb3J0IGNvbnN0IGdldERhdGUgPSAoKSA9PiBuZXcgRGF0ZSgpXG5cbi8qKlxuICogUmV0dXJuIGN1cnJlbnQgdW5peCB0aW1lLlxuICpcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFVuaXhUaW1lID0gRGF0ZS5ub3dcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGltZSAoaW4gbXMpIHRvIGEgaHVtYW4gcmVhZGFibGUgZm9ybWF0LiBFLmcuIDExMDAgPT4gMS4xcy4gNjBzID0+IDFtaW4uIC4wMDEgPT4gMTDOvHMuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGQgZHVyYXRpb24gaW4gbWlsbGlzZWNvbmRzXG4gKiBAcmV0dXJuIHtzdHJpbmd9IGh1bWFuaXplZCBhcHByb3hpbWF0aW9uIG9mIHRpbWVcbiAqL1xuZXhwb3J0IGNvbnN0IGh1bWFuaXplRHVyYXRpb24gPSBkID0+IHtcbiAgaWYgKGQgPCA2MDAwMCkge1xuICAgIGNvbnN0IHAgPSBtZXRyaWMucHJlZml4KGQsIC0xKVxuICAgIHJldHVybiBtYXRoLnJvdW5kKHAubiAqIDEwMCkgLyAxMDAgKyBwLnByZWZpeCArICdzJ1xuICB9XG4gIGQgPSBtYXRoLmZsb29yKGQgLyAxMDAwKVxuICBjb25zdCBzZWNvbmRzID0gZCAlIDYwXG4gIGNvbnN0IG1pbnV0ZXMgPSBtYXRoLmZsb29yKGQgLyA2MCkgJSA2MFxuICBjb25zdCBob3VycyA9IG1hdGguZmxvb3IoZCAvIDM2MDApICUgMjRcbiAgY29uc3QgZGF5cyA9IG1hdGguZmxvb3IoZCAvIDg2NDAwKVxuICBpZiAoZGF5cyA+IDApIHtcbiAgICByZXR1cm4gZGF5cyArICdkJyArICgoaG91cnMgPiAwIHx8IG1pbnV0ZXMgPiAzMCkgPyAnICcgKyAobWludXRlcyA+IDMwID8gaG91cnMgKyAxIDogaG91cnMpICsgJ2gnIDogJycpXG4gIH1cbiAgaWYgKGhvdXJzID4gMCkge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgcmV0dXJuIGhvdXJzICsgJ2gnICsgKChtaW51dGVzID4gMCB8fCBzZWNvbmRzID4gMzApID8gJyAnICsgKHNlY29uZHMgPiAzMCA/IG1pbnV0ZXMgKyAxIDogbWludXRlcykgKyAnbWluJyA6ICcnKVxuICB9XG4gIHJldHVybiBtaW51dGVzICsgJ21pbicgKyAoc2Vjb25kcyA+IDAgPyAnICcgKyBzZWNvbmRzICsgJ3MnIDogJycpXG59XG4iXSwibmFtZXMiOlsibWV0cmljIiwibWF0aCIsImdldERhdGUiLCJEYXRlIiwiZ2V0VW5peFRpbWUiLCJub3ciLCJodW1hbml6ZUR1cmF0aW9uIiwiZCIsInAiLCJwcmVmaXgiLCJyb3VuZCIsIm4iLCJmbG9vciIsInNlY29uZHMiLCJtaW51dGVzIiwiaG91cnMiLCJkYXlzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lib0/webcrypto.node.js":
/*!*********************************************!*\
  !*** ./node_modules/lib0/webcrypto.node.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues),\n/* harmony export */   subtle: () => (/* binding */ subtle)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n\nconst subtle = /** @type {any} */ node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.subtle;\nconst getRandomValues = /** @type {any} */ node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues.bind(node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGliMC93ZWJjcnlwdG8ubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFFaEMsTUFBTUMsU0FBNEIsZ0JBQUgsR0FBSUQsa0RBQVNBLENBQUVDLE1BQU07QUFDcEQsTUFBTUMsa0JBQXFDLGdCQUFILEdBQUlGLGtEQUFTQSxDQUFFRSxlQUFlLENBQUNDLElBQUksQ0FBQ0gsa0RBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZS1qb3VybmFsLy4vbm9kZV9tb2R1bGVzL2xpYjAvd2ViY3J5cHRvLm5vZGUuanM/MWVjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3ZWJjcnlwdG8gfSBmcm9tICdub2RlOmNyeXB0bydcblxuZXhwb3J0IGNvbnN0IHN1YnRsZSA9IC8qKiBAdHlwZSB7YW55fSAqLyAod2ViY3J5cHRvKS5zdWJ0bGVcbmV4cG9ydCBjb25zdCBnZXRSYW5kb21WYWx1ZXMgPSAvKiogQHR5cGUge2FueX0gKi8gKHdlYmNyeXB0bykuZ2V0UmFuZG9tVmFsdWVzLmJpbmQod2ViY3J5cHRvKVxuIl0sIm5hbWVzIjpbIndlYmNyeXB0byIsInN1YnRsZSIsImdldFJhbmRvbVZhbHVlcyIsImJpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lib0/webcrypto.node.js\n");

/***/ })

};
;